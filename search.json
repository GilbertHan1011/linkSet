[{"path":"https://gilberthan1011.github.io/linkSet/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2024 linkSet authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://gilberthan1011.github.io/linkSet/articles/hic_workthrough.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"hic_workthrough","text":"vignette provides step--step guide using linkSet package analyze Hi-C/HiChIP data. use toy example illustrate main functions workflows. goal identify enhancer-gene links example use following datasets input: validPairs produced HiC-Pro. Mouse embryo body enhancer data enhancer atlas website. Gene annotation data TxDb.Mmusculus.UCSC.mm10.knownGene pakcage. highly recommend use custom data instead example data provided vignette.","code":""},{"path":"https://gilberthan1011.github.io/linkSet/articles/hic_workthrough.html","id":"setup","dir":"Articles","previous_headings":"","what":"Setup","title":"hic_workthrough","text":"use custom function readvalidPairs load example data. Firstly, need load GInteractions object. hic data contains digist end, resize region upstream 5kb downstream 5kb. , use baitGInteractions generate linkSet object. print linkSet object, can see basic information linkSet object. default, don’t show bait region. interested bait region, can set showBaitRegion = TRUE.","code":"suppressPackageStartupMessages({   library(linkSet)   library(TxDb.Mmusculus.UCSC.mm10.knownGene)   library(org.Mm.eg.db)   library(Organism.dplyr)   library(InteractionSet) }) hic_file <- system.file(\"extdata\", \"toyValidatePair\",                          package=\"linkSet\") gi <- readvalidPairs(hic_file) src <- Organism.dplyr::src_organism(\"TxDb.Mmusculus.UCSC.mm10.knownGene\") #> creating 'src_organism' database... geneGr <- Organism.dplyr::genes(src,columns = \"symbol\") promoterGr <- IRanges::promoters(geneGr,upstream = 10000) #> Warning in valid.GenomicRanges.seqinfo(x, suggest.trim = TRUE): GRanges object contains 3 out-of-bound ranges located on sequences #>   chr4_JH584294_random, chr4_JH584292_random, and chr5_GL456354_random. #>   Note that ranges located on a sequence whose length is unknown (NA) or #>   on a circular sequence are not considered out-of-bound (use #>   seqlengths() and isCircular() to get the lengths and circularity flags #>   of the underlying sequences). You can use trim() to trim these ranges. #>   See ?`trim,GenomicRanges-method` for more information. file_url <- c(\"http://www.enhanceratlas.org/data/download/enhancer/mm/Embryo_body.bed\") temp_file <- tempfile(fileext = \".bed\") download.file(file_url, temp_file, method = \"curl\") enhancer <- rtracklayer::import(temp_file) gi <- resize(gi,10000,fix = \"center\") ls <- baitGInteractions(gi,geneGr = geneGr,peakGr = enhancer,\"symbol\") ls #> linkSet object with 579 interactions and 2 metadata columns: #>                bait     seqnames_oe         ranges_oe | anchor1.symbol #>         <character>           <Rle>         <IRanges> |    <character> #>     [1]       Sulf1 ---        chr1 12785091-12785750 |          Sulf1 #>     [2]       Sulf1 ---        chr1 12785091-12785750 |          Sulf1 #>     [3]       Sulf1 ---        chr1 12785091-12785750 |          Sulf1 #>     [4]       Sulf1 ---        chr1 12785091-12785750 |          Sulf1 #>     [5]       Sulf1 ---        chr1 12785091-12785750 |          Sulf1 #>     ...         ... ...         ...               ... .            ... #>   [575]     Slco5a1 ---        chr1 14496641-14497000 |        Slco5a1 #>   [576]     Slco5a1 ---        chr1 14496641-14497000 |        Slco5a1 #>   [577]     Slco5a1 ---        chr1 14496641-14497000 |        Slco5a1 #>   [578]     Slco5a1 ---        chr1 78187171-78187630 |        Slco5a1 #>   [579]     Slco5a1 ---        chr1 39924881-39925280 |        Slco5a1 #>             anchor2.name #>              <character> #>     [1] 12.2266622787328 #>     [2] 12.2266622787328 #>     [3] 12.2266622787328 #>     [4] 12.2266622787328 #>     [5] 12.2266622787328 #>     ...              ... #>   [575] 16.1891332694206 #>   [576] 16.1891332694206 #>   [577] 16.1891332694206 #>   [578]  11.771392591681 #>   [579] 14.6843556168742 #>   ------- #>   regions: 109 ranges and 0 metadata columns #>   seqinfo: 66 sequences (1 circular) from mm10 genome showLinkSet(ls, baitRegion = TRUE) #> linkSet object with 579 interactions and 2 metadata columns: #>          bait seqnames_bait       ranges_bait     seqnames_oe         ranges_oe #>   [1]   Sulf1          chr1 12692277-12861192 ---        chr1 12785091-12785750 #>   [2]   Sulf1          chr1 12692277-12861192 ---        chr1 12785091-12785750 #>   [3]   Sulf1          chr1 12692277-12861192 ---        chr1 12785091-12785750 #>   [4]   Sulf1          chr1 12692277-12861192 ---        chr1 12785091-12785750 #>   [5]   Sulf1          chr1 12692277-12861192 ---        chr1 12785091-12785750 #>   ...     ...           ...               ... ...         ...               ... #> [575] Slco5a1          chr1 12866549-12992650 ---        chr1 14496641-14497000 #> [576] Slco5a1          chr1 12866549-12992650 ---        chr1 14496641-14497000 #> [577] Slco5a1          chr1 12866549-12992650 ---        chr1 14496641-14497000 #> [578] Slco5a1          chr1 12866549-12992650 ---        chr1 78187171-78187630 #> [579] Slco5a1          chr1 12866549-12992650 ---        chr1 39924881-39925280 #>       | anchor1.symbol     anchor2.name #>   [1] |          Sulf1 12.2266622787328 #>   [2] |          Sulf1 12.2266622787328 #>   [3] |          Sulf1 12.2266622787328 #>   [4] |          Sulf1 12.2266622787328 #>   [5] |          Sulf1 12.2266622787328 #>   ... .            ...              ... #> [575] |        Slco5a1 16.1891332694206 #> [576] |        Slco5a1 16.1891332694206 #> [577] |        Slco5a1 16.1891332694206 #> [578] |        Slco5a1  11.771392591681 #> [579] |        Slco5a1 14.6843556168742"},{"path":"https://gilberthan1011.github.io/linkSet/articles/hic_workthrough.html","id":"diagnose-and-filter-links","dir":"Articles","previous_headings":"","what":"Diagnose and filter links","title":"hic_workthrough","text":"Now, can run diagnoseLinkSet check distance distribution inter/intra interaction percentage.  Intrachromosomal interaction long distance interaction likely noise, filter . Duplicated links associated contact frequency, ’s good idea count duplicated links. can notice significant link strength Sulf1 chr1:12785091-12785750.","code":"diagnoseLinkSet(ls) #> `stat_bin()` using `bins = 30`. Pick better value with `binwidth`. #> linkSet object with 579 interactions and 4 metadata columns: #>                bait     seqnames_oe         ranges_oe | anchor1.symbol #>         <character>           <Rle>         <IRanges> |    <character> #>     [1]       Sulf1 ---        chr1 12785091-12785750 |          Sulf1 #>     [2]       Sulf1 ---        chr1 12785091-12785750 |          Sulf1 #>     [3]       Sulf1 ---        chr1 12785091-12785750 |          Sulf1 #>     [4]       Sulf1 ---        chr1 12785091-12785750 |          Sulf1 #>     [5]       Sulf1 ---        chr1 12785091-12785750 |          Sulf1 #>     ...         ... ...         ...               ... .            ... #>   [575]     Slco5a1 ---        chr1 14496641-14497000 |        Slco5a1 #>   [576]     Slco5a1 ---        chr1 14496641-14497000 |        Slco5a1 #>   [577]     Slco5a1 ---        chr1 14496641-14497000 |        Slco5a1 #>   [578]     Slco5a1 ---        chr1 78187171-78187630 |        Slco5a1 #>   [579]     Slco5a1 ---        chr1 39924881-39925280 |        Slco5a1 #>             anchor2.name  inter_type  distance #>              <character> <character> <integer> #>     [1] 12.2266622787328       inter      8686 #>     [2] 12.2266622787328       inter      8686 #>     [3] 12.2266622787328       inter      8686 #>     [4] 12.2266622787328       inter      8686 #>     [5] 12.2266622787328       inter      8686 #>     ...              ...         ...       ... #>   [575] 16.1891332694206       inter   1567221 #>   [576] 16.1891332694206       inter   1567221 #>   [577] 16.1891332694206       inter   1567221 #>   [578]  11.771392591681       inter  65257801 #>   [579] 14.6843556168742       inter  26995481 #>   ------- #>   regions: 109 ranges and 0 metadata columns #>   seqinfo: 66 sequences (1 circular) from mm10 genome ls <- filterLinks(ls,filter_intra = TRUE, filter_unannotate = TRUE, distance = 50000000) ls <- countInteractions(ls) orderLinks(ls,by = \"count\",decreasing = T) #> linkSet object with 50 interactions and 5 metadata columns: #>               bait     seqnames_oe         ranges_oe | anchor1.symbol #>        <character>           <Rle>         <IRanges> |    <character> #>    [1]       Sulf1 ---        chr1 12785091-12785750 |          Sulf1 #>    [2]     Slco5a1 ---        chr1 12785091-12785750 |        Slco5a1 #>    [3]     Slco5a1 ---        chr1 14496641-14497000 |        Slco5a1 #>    [4]       Ncoa2 ---        chr1 12785091-12785750 |          Ncoa2 #>    [5]       Sulf1 ---        chr1 14496641-14497000 |          Sulf1 #>    ...         ... ...         ...               ... .            ... #>   [46]     Slco5a1 ---        chr1 35926611-35926860 |        Slco5a1 #>   [47]     Slco5a1 ---        chr1 38683021-38683930 |        Slco5a1 #>   [48]     Slco5a1 ---        chr1 34163531-34164100 |        Slco5a1 #>   [49]     Slco5a1 ---        chr1 62841301-62841760 |        Slco5a1 #>   [50]     Slco5a1 ---        chr1 39924881-39925280 |        Slco5a1 #>            anchor2.name  inter_type  distance     count #>             <character> <character> <integer> <integer> #>    [1] 12.2266622787328       inter      8686       404 #>    [2] 12.2266622787328       inter    144179        20 #>    [3] 16.1891332694206       inter   1567221        10 #>    [4] 12.2266622787328       inter    471173         8 #>    [5] 16.1891332694206       inter   1720086         5 #>    ...              ...         ...       ...       ... #>   [46] 14.3114832520841       inter  22997136         1 #>   [47] 10.9529360911238       inter  25753876         1 #>   [48] 11.2903880454209       inter  21234216         1 #>   [49] 11.6972535378061       inter  49911931         1 #>   [50] 14.6843556168742       inter  26995481         1 #>   ------- #>   regions: 48 ranges and 0 metadata columns #>   seqinfo: 66 sequences (1 circular) from mm10 genome"},{"path":"https://gilberthan1011.github.io/linkSet/articles/hic_workthrough.html","id":"cross-gene-links-and-visualization","dir":"Articles","previous_headings":"","what":"Cross gene links and visualization","title":"hic_workthrough","text":"Enhancers regulate multiple genes biologically meaningful. can use plot_genomic_ranges visualize cross gene links.  can also choose visualze bait center region.","code":"ls <- crossGeneEnhancer(ls) ls <- orderLinks(ls,by = \"crossFreq\",decreasing = T) ls #> linkSet object with 50 interactions and 6 metadata columns: #>               bait     seqnames_oe         ranges_oe | anchor1.symbol #>        <character>           <Rle>         <IRanges> |    <character> #>    [1]       Sulf1 ---        chr1 12785091-12785750 |          Sulf1 #>    [2]     Slco5a1 ---        chr1 12785091-12785750 |        Slco5a1 #>    [3]        Xkr9 ---        chr1 12785091-12785750 |           Xkr9 #>    [4]      Ogfrl1 ---        chr1 12785091-12785750 |         Ogfrl1 #>    [5]      Adgrb3 ---        chr1 12785091-12785750 |         Adgrb3 #>    ...         ... ...         ...               ... .            ... #>   [46]     Slco5a1 ---        chr1 39758181-39758690 |        Slco5a1 #>   [47]     Slco5a1 ---        chr1 38683021-38683930 |        Slco5a1 #>   [48]     Slco5a1 ---        chr1 34163531-34164100 |        Slco5a1 #>   [49]     Slco5a1 ---        chr1 62841301-62841760 |        Slco5a1 #>   [50]     Slco5a1 ---        chr1 39924881-39925280 |        Slco5a1 #>            anchor2.name  inter_type  distance     count crossFreq #>             <character> <character> <integer> <integer> <integer> #>    [1] 12.2266622787328       inter      8686       404        37 #>    [2] 12.2266622787328       inter    144179        20        37 #>    [3] 12.2266622787328       inter    899826         2        37 #>    [4] 12.2266622787328       inter  10596562         1        37 #>    [5] 12.2266622787328       inter  12663171         5        37 #>    ...              ...         ...       ...       ...       ... #>   [46]  11.037989817782       inter  26828836         1         1 #>   [47] 10.9529360911238       inter  25753876         1         1 #>   [48] 11.2903880454209       inter  21234216         1         1 #>   [49] 11.6972535378061       inter  49911931         1         1 #>   [50] 14.6843556168742       inter  26995481         1         1 #>   ------- #>   regions: 48 ranges and 0 metadata columns #>   seqinfo: 66 sequences (1 circular) from mm10 genome plot_genomic_ranges(ls,showOE = oe(ls)[1]) plot_genomic_ranges(ls,showBait = \"Ncoa2\") plot_genomic_ranges(ls,showBait = \"Sulf1\")"},{"path":"https://gilberthan1011.github.io/linkSet/articles/linkSet.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"linkSet","text":"techniche like HiC, PCHiC, scATAC-seq, high-throughput omics techniques, able predict interactions genes enhancers. linkSet package provides classes represent interactions genes enhancers, provides functions analyze visualize interactions.","code":""},{"path":"https://gilberthan1011.github.io/linkSet/articles/linkSet.html","id":"the-linkset-class","dir":"Articles","previous_headings":"","what":"The linkSet class","title":"linkSet","text":"linkSet class specialized data structure designed represent analyze genomic interactions, particularly focusing gene-enhancer relationships. ’s part linkSet package, provides tools managing analyzing genomic link data bioinformatics genomic research. Key features linkSet class: Representation genomic interactions: stores two types genomic anchors: “bait” (typically genes) “end” (oe, typically enhancers regulatory elements). anchors represented genomic ranges, allowing precise localization chromosomes. Flexible input: Can constructed various data types, including GRanges objects anchors, character vectors bait GRanges ends. Supports conversion common genomic data structures like GInteractions data frames. Metadata storage: Allows additional information stored alongside genomic interactions, interaction scores experimental conditions. Biological context: Designed work data various high-throughput genomic techniques like Hi-C, Promoter Capture Hi-C (PCHi-C), scATAC-seq. Facilitates analysis long-range chromatin interactions, crucial understanding gene regulation 3D genome organization. Annotation capabilities: Includes methods annotating promoters distinguishing inter- intra-chromosomal interactions. feature particularly useful identifying potential regulatory relationships distal genomic elements. Integration Bioconductor: Built top established Bioconductor classes, ensuring compatibility wide range genomic analysis tools. Visualization analysis: class designed support functions analyzing visualizing genomic interactions.","code":""},{"path":"https://gilberthan1011.github.io/linkSet/articles/linkSet.html","id":"construction","dir":"Articles","previous_headings":"","what":"Construction","title":"linkSet","text":"linkSet class can constructed various data types, including GRanges objects anchors, character vectors bait GRanges ends.","code":""},{"path":"https://gilberthan1011.github.io/linkSet/articles/linkSet.html","id":"construction-from-granges-objects","dir":"Articles","previous_headings":"Construction","what":"Construction from GRanges objects","title":"linkSet","text":"construct linkSet object GRanges objects:","code":"suppressPackageStartupMessages(library(linkSet)) library(GenomicRanges) gr1 <- GRanges(seqnames = c(\"chr1\", \"chr1\", \"chr2\"),               ranges = IRanges(start = c(1, 100, 200), width = 10),               strand = \"+\", symbol = c(\"Gene1\", \"Gene2\", \"Gene3\")) gr2 <- GRanges(seqnames = c(\"chr1\", \"chr2\", \"chr2\"),               ranges = IRanges(start = c(50, 150, 250), width = 10),               strand = \"+\") ## construct linkSet ls <- linkSet(gr1, gr2, specificCol = \"symbol\") ls #> linkSet object with 3 interactions and 1 metadata column: #>              bait     seqnames_oe ranges_oe | anchor1.symbol #>       <character>           <Rle> <IRanges> |    <character> #>   [1]       Gene1 ---        chr1     50-59 |          Gene1 #>   [2]       Gene2 ---        chr2   150-159 |          Gene2 #>   [3]       Gene3 ---        chr2   250-259 |          Gene3 #>   ------- #>   regions: 6 ranges and 0 metadata columns #>   seqinfo: 2 sequences from an unspecified genome; no seqlengths"},{"path":"https://gilberthan1011.github.io/linkSet/articles/linkSet.html","id":"construction-from-ginteractions","dir":"Articles","previous_headings":"Construction","what":"Construction from GInteractions","title":"linkSet","text":"can also create linkSet object GInteractions object using Convert function: times, need use gene enhancer information construct linkSet object GInteractions.","code":"library(InteractionSet) #>  #> Attaching package: 'InteractionSet' #> The following objects are masked from 'package:linkSet': #>  #>     anchorIds, anchors, pairdist, reduceRegions, regions, regions<- gi <- GInteractions(   anchor1 = c(1, 3, 5),   anchor2 = c(2, 4, 6),   regions = GRanges(     seqnames = c(\"chr1\", \"chr1\", \"chr2\", \"chr2\", \"chr3\", \"chr3\"),     ranges = IRanges(start = c(1, 50, 100, 150, 200, 250), width = 10)     )   ) mcols(gi)$score <- c(0.1, 0.2, 0.3) mcols(gi)$gene <- c(\"Sox2\", \"Sox9\", \"Sox10\") ##Convert to linkSet ls_from_gi <- Convert(gi, baitCol = \"gene\") ls_from_gi #> linkSet object with 3 interactions and 2 metadata columns: #>              bait     seqnames_oe ranges_oe |     score        gene #>       <character>           <Rle> <IRanges> | <numeric> <character> #>   [1]        Sox2 ---        chr1     50-59 |       0.1        Sox2 #>   [2]        Sox9 ---        chr2   150-159 |       0.2        Sox9 #>   [3]       Sox10 ---        chr3   250-259 |       0.3       Sox10 #>   ------- #>   regions: 6 ranges and 0 metadata columns #>   seqinfo: 3 sequences from an unspecified genome; no seqlengths geneGr <- GRanges(   seqnames = c(\"chr1\", \"chr2\", \"chr3\"),   ranges = IRanges(start = c(5, 105, 205), width = 20),   symbol = c(\"Gene1\", \"Gene2\", \"Gene3\") )  peakGr <- GRanges(   seqnames = c(\"chr1\", \"chr2\", \"chr3\"),   ranges = IRanges(start = c(45, 145, 245), width = 10) )  # Run baitGInteractions ls_from_gi_2 <- baitGInteractions(gi, geneGr, peakGr, geneSymbol = \"symbol\")  ls_from_gi_2 #> linkSet object with 3 interactions and 3 metadata columns: #>              bait     seqnames_oe ranges_oe | anchor1.symbol     score #>       <character>           <Rle> <IRanges> |    <character> <numeric> #>   [1]       Gene1 ---        chr1     45-54 |          Gene1       0.1 #>   [2]       Gene2 ---        chr2   145-154 |          Gene2       0.2 #>   [3]       Gene3 ---        chr3   245-254 |          Gene3       0.3 #>              gene #>       <character> #>   [1]        Sox2 #>   [2]        Sox9 #>   [3]       Sox10 #>   ------- #>   regions: 6 ranges and 0 metadata columns #>   seqinfo: 3 sequences from an unspecified genome; no seqlengths"},{"path":"https://gilberthan1011.github.io/linkSet/articles/linkSet.html","id":"other-construction-methods","dir":"Articles","previous_headings":"Construction","what":"Other construction methods","title":"linkSet","text":"can also construct linkSet object data frame.","code":"test_df <- data.frame(   gene = c(\"gene1\", \"gene2\", \"gene3\"),   peak = c(\"chr1:1000-2000\", \"chr2:3000-4000\", \"chr3:5000-6000\"),   score = c(0.5, 0.7, 0.9),   stringsAsFactors = FALSE )  # Test successful conversion ls_from_df <- Convert(test_df) ls_from_df #> linkSet object with 3 interactions and 1 metadata column: #>              bait     seqnames_oe ranges_oe |     score #>       <character>           <Rle> <IRanges> | <numeric> #>   [1]       gene1 ---        chr1  999-2000 |       0.5 #>   [2]       gene2 ---        chr2 2999-4000 |       0.7 #>   [3]       gene3 ---        chr3 4999-6000 |       0.9 #>   ------- #>   regions: 3 ranges and 0 metadata columns #>   seqinfo: 3 sequences from an unspecified genome; no seqlengths"},{"path":[]},{"path":"https://gilberthan1011.github.io/linkSet/articles/linkSet.html","id":"getters","dir":"Articles","previous_headings":"Accessors","what":"Getters","title":"linkSet","text":"important elements linkSet object can easily accessed following accessors: regions(x): Get regions linkSet object. bait(x): Get bait linkSet object. oe(x): Get end linkSet object. regionsBait(x): Get bait regions linkSet object. regionsOe(x): Get end regions linkSet object. mcols(x): Get metadata linkSet object.","code":"linkSet::regions(ls) #> GRanges object with 6 ranges and 0 metadata columns: #>       seqnames    ranges strand #>          <Rle> <IRanges>  <Rle> #>   [1]     chr1      1-10      + #>   [2]     chr1     50-59      + #>   [3]     chr1   100-109      + #>   [4]     chr2   150-159      + #>   [5]     chr2   200-209      + #>   [6]     chr2   250-259      + #>   ------- #>   seqinfo: 2 sequences from an unspecified genome; no seqlengths regionsBait(ls) #> GRanges object with 3 ranges and 0 metadata columns: #>       seqnames    ranges strand #>          <Rle> <IRanges>  <Rle> #>   [1]     chr1      1-10      + #>   [2]     chr1   100-109      + #>   [3]     chr2   200-209      + #>   ------- #>   seqinfo: 2 sequences from an unspecified genome; no seqlengths oe(ls) #> GRanges object with 3 ranges and 0 metadata columns: #>       seqnames    ranges strand #>          <Rle> <IRanges>  <Rle> #>   [1]     chr1     50-59      + #>   [2]     chr2   150-159      + #>   [3]     chr2   250-259      + #>   ------- #>   seqinfo: 2 sequences from an unspecified genome; no seqlengths bait(ls) #> [1] \"Gene1\" \"Gene2\" \"Gene3\" mcols(ls) #> DataFrame with 3 rows and 1 column #>   anchor1.symbol #>      <character> #> 1          Gene1 #> 2          Gene2 #> 3          Gene3"},{"path":"https://gilberthan1011.github.io/linkSet/articles/linkSet.html","id":"setters","dir":"Articles","previous_headings":"Accessors","what":"Setters","title":"linkSet","text":"Wait… set wrong bait oe region? can also change easily:","code":"new_bait <- c(\"Gene40\",\"Gene41\",\"Gene42\") new_oe <- GRanges(   seqnames = c(\"chr1\", \"chr2\", \"chr3\"),   ranges = IRanges(start = c(5, 105, 205), width = 20),   symbol = c(\"Gene1\", \"Gene2\", \"Gene3\") ) bait(ls) <- new_bait oe(ls) <- new_oe ls #> linkSet object with 3 interactions and 2 metadata columns: #>              bait     seqnames_oe ranges_oe | anchor1.symbol      symbol #>       <character>           <Rle> <IRanges> |    <character> <character> #>   [1]      Gene40 ---        chr1      5-24 |          Gene1       Gene1 #>   [2]      Gene41 ---        chr2   105-124 |          Gene2       Gene2 #>   [3]      Gene42 ---        chr3   205-224 |          Gene3       Gene3 #>   ------- #>   regions: 6 ranges and 0 metadata columns #>   seqinfo: 3 sequences from an unspecified genome; no seqlengths"},{"path":"https://gilberthan1011.github.io/linkSet/articles/linkSet.html","id":"subsetting-and-concatenation","dir":"Articles","previous_headings":"","what":"Subsetting and concatenation","title":"linkSet","text":"LinkSet object can easily subsetted index. interested specific gene region, can subset linkSet object bait oe region. can also concatenate two linkSet objects.","code":"ls_sub <- ls[1:2] ls_sub #> linkSet object with 2 interactions and 2 metadata columns: #>              bait     seqnames_oe ranges_oe | anchor1.symbol      symbol #>       <character>           <Rle> <IRanges> |    <character> <character> #>   [1]      Gene40 ---        chr1      5-24 |          Gene1       Gene1 #>   [2]      Gene41 ---        chr2   105-124 |          Gene2       Gene2 #>   ------- #>   regions: 6 ranges and 0 metadata columns #>   seqinfo: 3 sequences from an unspecified genome; no seqlengths ls_sub_2 <- subsetBait(ls, \"Gene1\") ls_sub_2 #> linkSet object with 0 interactions and 2 metadata columns: #>           bait     seqnames_oe ranges_oe | anchor1.symbol      symbol #>    <character>           <Rle> <IRanges> |    <character> <character> #>   ------- #>   regions: 0 ranges and 0 metadata columns #>   seqinfo: 3 sequences from an unspecified genome; no seqlengths ls_sub_3 <- subsetBaitRegion(ls, \"chr1:100-200\") ls_sub_3 #> linkSet object with 1 interaction and 2 metadata columns: #>              bait     seqnames_oe ranges_oe | anchor1.symbol      symbol #>       <character>           <Rle> <IRanges> |    <character> <character> #>   [1]      Gene41 ---        chr2   105-124 |          Gene2       Gene2 #>   ------- #>   regions: 2 ranges and 0 metadata columns #>   seqinfo: 3 sequences from an unspecified genome; no seqlengths ls_concat <- c(ls, ls) ls_concat #> linkSet object with 6 interactions and 2 metadata columns: #>              bait     seqnames_oe ranges_oe | anchor1.symbol      symbol #>       <character>           <Rle> <IRanges> |    <character> <character> #>   [1]      Gene40 ---        chr1      5-24 |          Gene1       Gene1 #>   [2]      Gene41 ---        chr2   105-124 |          Gene2       Gene2 #>   [3]      Gene42 ---        chr3   205-224 |          Gene3       Gene3 #>   [4]      Gene40 ---        chr1      5-24 |          Gene1       Gene1 #>   [5]      Gene41 ---        chr2   105-124 |          Gene2       Gene2 #>   [6]      Gene42 ---        chr3   205-224 |          Gene3       Gene3 #>   ------- #>   regions: 6 ranges and 0 metadata columns #>   seqinfo: 3 sequences from an unspecified genome; no seqlengths"},{"path":"https://gilberthan1011.github.io/linkSet/articles/linkSet.html","id":"granges-method","dir":"Articles","previous_headings":"","what":"GRanges method","title":"linkSet","text":"features linkSet inherited GRanges, means can use functions GRanges manipulate linkSet object. wonderful things can change bait region oe region separately. reduce method allows linkSet objects collapsed across whole linkSet object. default, collapse duplicate interactions, count interactions store metadata columns. can also choose count interactions set countInteractions = FALSE.","code":"data(linkExample) linkExample #> linkSet object with 5 interactions and 1 metadata column: #>              bait     seqnames_oe ranges_oe | anchor1.symbol #>       <character>           <Rle> <IRanges> |    <character> #>   [1]       Gene1 ---        chr1     50-59 |          Gene1 #>   [2]       Gene1 ---        chr2   150-159 |          Gene1 #>   [3]       Gene2 ---        chr2   250-259 |          Gene2 #>   [4]       Gene3 ---        chr4   350-359 |          Gene3 #>   [5]       Gene3 ---        chr4   450-459 |          Gene3 #>   ------- #>   regions: 10 ranges and 0 metadata columns #>   seqinfo: 4 sequences from an unspecified genome; no seqlengths  ## resize the bait region resize_bait <- resizeRegions(linkExample, width = 75, fix = \"start\", region = \"bait\") resize_bait #> linkSet object with 5 interactions and 1 metadata column: #>              bait     seqnames_oe ranges_oe | anchor1.symbol #>       <character>           <Rle> <IRanges> |    <character> #>   [1]       Gene1 ---        chr1     50-59 |          Gene1 #>   [2]       Gene1 ---        chr2   150-159 |          Gene1 #>   [3]       Gene2 ---        chr2   250-259 |          Gene2 #>   [4]       Gene3 ---        chr4   350-359 |          Gene3 #>   [5]       Gene3 ---        chr4   450-459 |          Gene3 #>   ------- #>   regions: 10 ranges and 0 metadata columns #>   seqinfo: 4 sequences from an unspecified genome; no seqlengths  ## resize the oe region resize_oe <- resizeRegions(linkExample, width = 75, fix = \"start\", region = \"oe\") resize_oe #> linkSet object with 5 interactions and 1 metadata column: #>              bait     seqnames_oe ranges_oe | anchor1.symbol #>       <character>           <Rle> <IRanges> |    <character> #>   [1]       Gene1 ---        chr1    50-124 |          Gene1 #>   [2]       Gene1 ---        chr2   150-224 |          Gene1 #>   [3]       Gene2 ---        chr2   250-324 |          Gene2 #>   [4]       Gene3 ---        chr4   350-424 |          Gene3 #>   [5]       Gene3 ---        chr4   450-524 |          Gene3 #>   ------- #>   regions: 10 ranges and 0 metadata columns #>   seqinfo: 4 sequences from an unspecified genome; no seqlengths reduce_ls <- reduce(ls_concat) reduce_ls #> linkSet object with 3 interactions and 3 metadata columns: #>              bait     seqnames_oe ranges_oe | anchor1.symbol      symbol #>       <character>           <Rle> <IRanges> |    <character> <character> #>   [1]      Gene40 ---        chr1      5-24 |          Gene1       Gene1 #>   [2]      Gene41 ---        chr2   105-124 |          Gene2       Gene2 #>   [3]      Gene42 ---        chr3   205-224 |          Gene3       Gene3 #>           count #>       <integer> #>   [1]         2 #>   [2]         2 #>   [3]         2 #>   ------- #>   regions: 6 ranges and 0 metadata columns #>   seqinfo: 3 sequences from an unspecified genome; no seqlengths reduce_ls_2 <- linkSet::reduceRegions(ls_concat, countInteractions = FALSE) reduce_ls_2 #> linkSet object with 6 interactions and 2 metadata columns: #>              bait     seqnames_oe ranges_oe | anchor1.symbol      symbol #>       <character>           <Rle> <IRanges> |    <character> <character> #>   [1]      Gene40 ---        chr1      5-24 |          Gene1       Gene1 #>   [2]      Gene41 ---        chr2   105-124 |          Gene2       Gene2 #>   [3]      Gene42 ---        chr3   205-224 |          Gene3       Gene3 #>   [4]      Gene40 ---        chr1      5-24 |          Gene1       Gene1 #>   [5]      Gene41 ---        chr2   105-124 |          Gene2       Gene2 #>   [6]      Gene42 ---        chr3   205-224 |          Gene3       Gene3 #>   ------- #>   regions: 6 ranges and 0 metadata columns #>   seqinfo: 3 sequences from an unspecified genome; no seqlengths"},{"path":"https://gilberthan1011.github.io/linkSet/articles/linkSet.html","id":"diagnose","dir":"Articles","previous_headings":"","what":"Diagnose","title":"linkSet","text":"two metrics diagnose quality linkSet object: 1. intra/inter-chromosomal interactions. 2. distance bait oe region. diagnose function can help diagnose linkSet object.  annotated distance interaction type shown distance inter_type column. can remove intrachromosomal interactions :","code":"diagnoseLinkSet(linkExample) #> `stat_bin()` using `bins = 30`. Pick better value with `binwidth`. #> linkSet object with 5 interactions and 3 metadata columns: #>              bait     seqnames_oe ranges_oe | anchor1.symbol  inter_type #>       <character>           <Rle> <IRanges> |    <character> <character> #>   [1]       Gene1 ---        chr1     50-59 |          Gene1       inter #>   [2]       Gene1 ---        chr2   150-159 |          Gene1       intra #>   [3]       Gene2 ---        chr2   250-259 |          Gene2       inter #>   [4]       Gene3 ---        chr4   350-359 |          Gene3       intra #>   [5]       Gene3 ---        chr4   450-459 |          Gene3       inter #>        distance #>       <integer> #>   [1]        49 #>   [2]      <NA> #>   [3]        50 #>   [4]      <NA> #>   [5]        50 #>   ------- #>   regions: 10 ranges and 0 metadata columns #>   seqinfo: 4 sequences from an unspecified genome; no seqlengths ls_concat #> linkSet object with 6 interactions and 2 metadata columns: #>              bait     seqnames_oe ranges_oe | anchor1.symbol      symbol #>       <character>           <Rle> <IRanges> |    <character> <character> #>   [1]      Gene40 ---        chr1      5-24 |          Gene1       Gene1 #>   [2]      Gene41 ---        chr2   105-124 |          Gene2       Gene2 #>   [3]      Gene42 ---        chr3   205-224 |          Gene3       Gene3 #>   [4]      Gene40 ---        chr1      5-24 |          Gene1       Gene1 #>   [5]      Gene41 ---        chr2   105-124 |          Gene2       Gene2 #>   [6]      Gene42 ---        chr3   205-224 |          Gene3       Gene3 #>   ------- #>   regions: 6 ranges and 0 metadata columns #>   seqinfo: 3 sequences from an unspecified genome; no seqlengths ls_concat <- filterLinks(ls_concat, filter_intra = TRUE) ls_concat #> linkSet object with 2 interactions and 4 metadata columns: #>              bait     seqnames_oe ranges_oe | anchor1.symbol      symbol #>       <character>           <Rle> <IRanges> |    <character> <character> #>   [1]      Gene40 ---        chr1      5-24 |          Gene1       Gene1 #>   [2]      Gene40 ---        chr1      5-24 |          Gene1       Gene1 #>        inter_type  distance #>       <character> <integer> #>   [1]       inter         9 #>   [2]       inter         9 #>   ------- #>   regions: 2 ranges and 0 metadata columns #>   seqinfo: 3 sequences from an unspecified genome; no seqlengths"},{"path":"https://gilberthan1011.github.io/linkSet/articles/linkSet.html","id":"annotations","dir":"Articles","previous_headings":"","what":"Annotations","title":"linkSet","text":"might common bait name, don’t exact bait region. annotation function can help annotate bait region gene annotation.","code":"bait <- c(\"BRCA1\", \"TP53\", \"NONEXISTENT\") gr2 <- GRanges(seqnames = c(\"chr1\", \"chr2\", \"chr3\"),                 ranges = IRanges(start = c(5000, 6000, 7000), width = 100),                 strand = \"+\") ls <- linkSet(bait, gr2)  # Test annotatePromoter annotated_ls <- suppressWarnings(annotatePromoter(ls, genome = \"hg38\", upstream = 500,overwrite = T)) annotated_ls #> linkSet object with 3 interactions and 0 metadata columns: #>              bait     seqnames_oe ranges_oe #>       <character>           <Rle> <IRanges> #>   [1]       BRCA1 ---        chr1 5000-5099 #>   [2]        TP53 ---        chr2 6000-6099 #>   [3] NONEXISTENT ---        chr3 7000-7099 #>   ------- #>   regions: 3 ranges and 0 metadata columns #>   seqinfo: 3 sequences from an unspecified genome; no seqlengths"},{"path":"https://gilberthan1011.github.io/linkSet/articles/linkSet.html","id":"statistical-analysis","dir":"Articles","previous_headings":"","what":"Statistical analysis","title":"linkSet","text":"Functional enhancers usually regulate multiple genes, can use cross gene analysis identify cross gene enhancers.","code":"ls <- crossGeneEnhancer(ls) ls <- orderLinks(ls,by = \"crossFreq\",decreasing = T) ls #> linkSet object with 3 interactions and 1 metadata column: #>              bait     seqnames_oe ranges_oe | crossFreq #>       <character>           <Rle> <IRanges> | <integer> #>   [1]       BRCA1 ---        chr1 5000-5099 |         1 #>   [2]        TP53 ---        chr2 6000-6099 |         1 #>   [3] NONEXISTENT ---        chr3 7000-7099 |         1 #>   ------- #>   regions: 3 ranges and 0 metadata columns #>   seqinfo: 3 sequences from an unspecified genome; no seqlengths"},{"path":"https://gilberthan1011.github.io/linkSet/articles/linkSet.html","id":"visualization","dir":"Articles","previous_headings":"","what":"Visualization","title":"linkSet","text":"plot_genomic_ranges function, can visualize link bait oe region. can choose oe-centric views visualize functional enhancer regulate multiple genes.  can adjust range views.","code":"plot_genomic_ranges(linkExample,extend.base = 10) #> Warning in plot_genomic_ranges(linkExample, extend.base = 10): score.col not #> found, using count as default plot_genomic_ranges(linkExample,extend.base = 10,x.range = c(50,200)) #> Warning in plot_genomic_ranges(linkExample, extend.base = 10, x.range = c(50, : #> score.col not found, using count as default"},{"path":"https://gilberthan1011.github.io/linkSet/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Gilbert Han. Author, maintainer.","code":""},{"path":"https://gilberthan1011.github.io/linkSet/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Han G (2024). linkSet: Base Classes Storing Genomic Link Data. R package version 0.0.0.1, https://gilberthan1011.github.io/linkSet, https://gilberthan1011.github.io/linkSet/, https://github.com/GilbertHan1011/linkSet.","code":"@Manual{,   title = {linkSet: Base Classes for Storing Genomic Link Data},   author = {Gilbert Han},   year = {2024},   note = {R package version 0.0.0.1, https://gilberthan1011.github.io/linkSet, https://gilberthan1011.github.io/linkSet/},   url = {https://github.com/GilbertHan1011/linkSet}, }"},{"path":"https://gilberthan1011.github.io/linkSet/index.html","id":"linkset-v0001","dir":"","previous_headings":"","what":"Base Classes for Storing Genomic Link Data","title":"Base Classes for Storing Genomic Link Data","text":"goal linkSet provide tools working gene-enhancer interactions, commonly seen HiC, PC-HiC, single-cell ATAC-seq data analysis.","code":""},{"path":"https://gilberthan1011.github.io/linkSet/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Base Classes for Storing Genomic Link Data","text":"linkSet currently available Bioconductor. can install GitHub :","code":"if (!requireNamespace(\"remotes\", quietly = TRUE)) {   install.packages(\"remotes\") } remotes::install_github(\"GilbertHan1011/linkSet\")"},{"path":"https://gilberthan1011.github.io/linkSet/index.html","id":"example","dir":"","previous_headings":"","what":"Example","title":"Base Classes for Storing Genomic Link Data","text":"LinkSet can converted multiple data structures, like GRanges, GInteractions, dataframes.","code":"suppressMessages(library(linkSet)) ## basic example code library(GenomicRanges) gr1 <- GRanges(seqnames = c(\"chr1\", \"chr1\", \"chr2\"),               ranges = IRanges(start = c(1, 100, 200), width = 10),               strand = \"+\", symbol = c(\"Gene1\", \"Gene2\", \"Gene3\")) gr2 <- GRanges(seqnames = c(\"chr1\", \"chr2\", \"chr2\"),               ranges = IRanges(start = c(50, 150, 250), width = 10),               strand = \"+\") ## construct linkSet ls <- linkSet(gr1, gr2, specificCol = \"symbol\") ls #> linkSet object with 3 interactions and 1 metadata column: #>              bait     seqnames_oe ranges_oe | anchor1.symbol #>       <character>           <Rle> <IRanges> |    <character> #>   [1]       Gene1 ---        chr1     50-59 |          Gene1 #>   [2]       Gene2 ---        chr2   150-159 |          Gene2 #>   [3]       Gene3 ---        chr2   250-259 |          Gene3 #>   ------- #>   regions: 3 ranges and 0 metadata columns #>   seqinfo: 2 sequences from an unspecified genome; no seqlengths"},{"path":"https://gilberthan1011.github.io/linkSet/reference/Convert.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert different object types to linkSet — Convert","title":"Convert different object types to linkSet — Convert","text":"Convert data formats linkSet. Currently supported: GInteractions, data.frame.","code":""},{"path":"https://gilberthan1011.github.io/linkSet/reference/Convert.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert different object types to linkSet — Convert","text":"","code":"Convert(x, ...)  # S4 method for class 'GInteractions' Convert(x, baitCol = NULL, ...)  # S4 method for class 'data.frame' Convert(x, baitCol = \"gene\", oeCol = \"peak\", ...)  # S4 method for class 'Pairs' Convert(x, baitCol = NULL, ...)  # S4 method for class 'ANY' Convert(x, ...)"},{"path":"https://gilberthan1011.github.io/linkSet/reference/Convert.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert different object types to linkSet — Convert","text":"x object unsupported class ... Additional arguments (used) baitCol character string specifying column use bait naming specificCol character string specifying column use bait naming","code":""},{"path":"https://gilberthan1011.github.io/linkSet/reference/Convert.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert different object types to linkSet — Convert","text":"linkSet object linkSet object linkSet object linkSet object Nothing, throws error","code":""},{"path":"https://gilberthan1011.github.io/linkSet/reference/annotateInter-linkSet-method.html","id":null,"dir":"Reference","previous_headings":"","what":"Annotate linkSet with inter/intra chromosome interactions — annotateInter,linkSet-method","title":"Annotate linkSet with inter/intra chromosome interactions — annotateInter,linkSet-method","text":"Annotate linkSet inter/intra chromosome interactions","code":""},{"path":"https://gilberthan1011.github.io/linkSet/reference/annotateInter-linkSet-method.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Annotate linkSet with inter/intra chromosome interactions — annotateInter,linkSet-method","text":"","code":"# S4 method for class 'linkSet' annotateInter(x)"},{"path":"https://gilberthan1011.github.io/linkSet/reference/annotateInter-linkSet-method.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Annotate linkSet with inter/intra chromosome interactions — annotateInter,linkSet-method","text":"x linkSet object","code":""},{"path":"https://gilberthan1011.github.io/linkSet/reference/annotateInter-linkSet-method.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Annotate linkSet with inter/intra chromosome interactions — annotateInter,linkSet-method","text":"linkSet object additional metadata column 'inter_type'","code":""},{"path":"https://gilberthan1011.github.io/linkSet/reference/annotateInter-linkSet-method.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Annotate linkSet with inter/intra chromosome interactions — annotateInter,linkSet-method","text":"","code":"data(linkExample) linkExample <- annotateInter(linkExample)"},{"path":"https://gilberthan1011.github.io/linkSet/reference/annotatePromoter-linkSet-method.html","id":null,"dir":"Reference","previous_headings":"","what":"Annotate the link set with txDb. Give a gene list, and return a — annotatePromoter,linkSet-method","title":"Annotate the link set with txDb. Give a gene list, and return a — annotatePromoter,linkSet-method","text":"Annotate link set txDb. Give gene list, return ","code":""},{"path":"https://gilberthan1011.github.io/linkSet/reference/annotatePromoter-linkSet-method.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Annotate the link set with txDb. Give a gene list, and return a — annotatePromoter,linkSet-method","text":"","code":"# S4 method for class 'linkSet' annotatePromoter(   x,   genome = \"hg38\",   keyType = \"symbol\",   upstream = 5000,   overwrite = FALSE )"},{"path":"https://gilberthan1011.github.io/linkSet/reference/annotatePromoter-linkSet-method.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Annotate the link set with txDb. Give a gene list, and return a — annotatePromoter,linkSet-method","text":"x linkSet genome genome want annotate keyType key type. can check AnnotationDbi::keytypes upstream upstream base gene overwrite Whether overwrite regionsBait already exists","code":""},{"path":"https://gilberthan1011.github.io/linkSet/reference/annotatePromoter-linkSet-method.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Annotate the link set with txDb. Give a gene list, and return a — annotatePromoter,linkSet-method","text":"linkSet object","code":""},{"path":"https://gilberthan1011.github.io/linkSet/reference/annotatePromoter-linkSet-method.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Annotate the link set with txDb. Give a gene list, and return a — annotatePromoter,linkSet-method","text":"","code":"gr1 <- GRanges(seqnames = c(\"chr1\", \"chr2\", \"chr3\"),                 ranges = IRanges(start = c(1000, 2000, 3000), width = 100),                 strand = \"+\", symbol = c(\"BRCA1\", \"TP53\", \"NONEXISTENT\"))   gr2 <- GRanges(seqnames = c(\"chr1\", \"chr2\", \"chr3\"),                 ranges = IRanges(start = c(5000, 6000, 7000), width = 100),                 strand = \"+\")   ls <- linkSet(gr1, gr2, specificCol = \"symbol\")    # Test annotatePromoter   annotated_ls <- suppressWarnings(annotatePromoter(ls, genome = \"hg38\", upstream = 500,overwrite = T))"},{"path":"https://gilberthan1011.github.io/linkSet/reference/as.data.frame-linkSet-method.html","id":null,"dir":"Reference","previous_headings":"","what":"coerce linkSet to DataFrame — as.data.frame,linkSet-method","title":"coerce linkSet to DataFrame — as.data.frame,linkSet-method","text":"coerce linkSet DataFrame","code":""},{"path":"https://gilberthan1011.github.io/linkSet/reference/as.data.frame-linkSet-method.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"coerce linkSet to DataFrame — as.data.frame,linkSet-method","text":"","code":"# S4 method for class 'linkSet' as.data.frame(x)"},{"path":"https://gilberthan1011.github.io/linkSet/reference/as.data.frame-linkSet-method.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"coerce linkSet to DataFrame — as.data.frame,linkSet-method","text":"x linkSet object","code":""},{"path":"https://gilberthan1011.github.io/linkSet/reference/as.data.frame-linkSet-method.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"coerce linkSet to DataFrame — as.data.frame,linkSet-method","text":"DataFrame object","code":""},{"path":"https://gilberthan1011.github.io/linkSet/reference/baitGInteractions-GInteractions-GRanges-GRanges-method.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert GInteractions with bait range and oe ranges to linkSet — baitGInteractions,GInteractions,GRanges,GRanges-method","title":"Convert GInteractions with bait range and oe ranges to linkSet — baitGInteractions,GInteractions,GRanges,GRanges-method","text":"Convert GInteractions bait range oe ranges linkSet","code":""},{"path":"https://gilberthan1011.github.io/linkSet/reference/baitGInteractions-GInteractions-GRanges-GRanges-method.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert GInteractions with bait range and oe ranges to linkSet — baitGInteractions,GInteractions,GRanges,GRanges-method","text":"","code":"# S4 method for class 'GInteractions,GRanges,GRanges' baitGInteractions(x, geneGr, peakGr, geneSymbol = NULL)"},{"path":"https://gilberthan1011.github.io/linkSet/reference/baitGInteractions-GInteractions-GRanges-GRanges-method.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert GInteractions with bait range and oe ranges to linkSet — baitGInteractions,GInteractions,GRanges,GRanges-method","text":"geneGr GRanges object representing genes peakGr GRanges object representing peaks geneSymbol character vector length geneGr column name mcols(geneGr) gene symbols gi GInteractions object","code":""},{"path":"https://gilberthan1011.github.io/linkSet/reference/baitGInteractions-GInteractions-GRanges-GRanges-method.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert GInteractions with bait range and oe ranges to linkSet — baitGInteractions,GInteractions,GRanges,GRanges-method","text":"linkSet object","code":""},{"path":"https://gilberthan1011.github.io/linkSet/reference/countInteractions-linkSet-method.html","id":null,"dir":"Reference","previous_headings":"","what":"Make Repeated Interactions Unique and Count Repetitions — countInteractions,linkSet-method","title":"Make Repeated Interactions Unique and Count Repetitions — countInteractions,linkSet-method","text":"function takes linkSet object, identifies repeated interactions (bait end repeated), makes unique, counts number repetitions unique interaction.","code":""},{"path":"https://gilberthan1011.github.io/linkSet/reference/countInteractions-linkSet-method.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Make Repeated Interactions Unique and Count Repetitions — countInteractions,linkSet-method","text":"","code":"# S4 method for class 'linkSet' countInteractions(x, baitRegions = TRUE)"},{"path":"https://gilberthan1011.github.io/linkSet/reference/countInteractions-linkSet-method.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Make Repeated Interactions Unique and Count Repetitions — countInteractions,linkSet-method","text":"x linkSet object","code":""},{"path":"https://gilberthan1011.github.io/linkSet/reference/countInteractions-linkSet-method.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Make Repeated Interactions Unique and Count Repetitions — countInteractions,linkSet-method","text":"list containing: unique_linkSet new linkSet object unique interactions interaction_counts data frame counts unique interaction","code":""},{"path":"https://gilberthan1011.github.io/linkSet/reference/countInteractions-linkSet-method.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Make Repeated Interactions Unique and Count Repetitions — countInteractions,linkSet-method","text":"","code":"ls = data(linkExample) ls = c(ls,ls) result <- countInteractions(ls) #> Error: unable to find an inherited method for function ‘countInteractions’ for signature ‘x = \"character\"’ result #> Error in eval(expr, envir, enclos): object 'result' not found"},{"path":"https://gilberthan1011.github.io/linkSet/reference/crossGeneEnhancer-linkSet-method.html","id":null,"dir":"Reference","previous_headings":"","what":"Cross gene enhancer — crossGeneEnhancer,linkSet-method","title":"Cross gene enhancer — crossGeneEnhancer,linkSet-method","text":"Cross gene enhancer","code":""},{"path":"https://gilberthan1011.github.io/linkSet/reference/crossGeneEnhancer-linkSet-method.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Cross gene enhancer — crossGeneEnhancer,linkSet-method","text":"","code":"# S4 method for class 'linkSet' crossGeneEnhancer(x, score_threshold = NULL)"},{"path":"https://gilberthan1011.github.io/linkSet/reference/crossGeneEnhancer-linkSet-method.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Cross gene enhancer — crossGeneEnhancer,linkSet-method","text":"score_threshold minimum score filter interactions","code":""},{"path":"https://gilberthan1011.github.io/linkSet/reference/crossGeneEnhancer-linkSet-method.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Cross gene enhancer — crossGeneEnhancer,linkSet-method","text":"linkSet object filtered interactions","code":""},{"path":"https://gilberthan1011.github.io/linkSet/reference/crossGeneEnhancer-linkSet-method.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Cross gene enhancer — crossGeneEnhancer,linkSet-method","text":"","code":"ls = data(linkExample) ls = c(ls,ls) ls = countInteractions(ls) #> Error: unable to find an inherited method for function ‘countInteractions’ for signature ‘x = \"character\"’ ls = filterLinks(ls, filter_intra = FALSE, filter_unannotate = FALSE, distance = 100000) #> Error: unable to find an inherited method for function ‘filterLinks’ for signature ‘x = \"character\"’ ls = crossGeneEnhancer(ls, score_threshold = 10) #> Error: unable to find an inherited method for function ‘crossGeneEnhancer’ for signature ‘x = \"character\"’"},{"path":"https://gilberthan1011.github.io/linkSet/reference/diagnoseLinkSet-linkSet-method.html","id":null,"dir":"Reference","previous_headings":"","what":"Diagnose the linkSet object, return barplot of inter/intra interaction and distance distribution — diagnoseLinkSet,linkSet-method","title":"Diagnose the linkSet object, return barplot of inter/intra interaction and distance distribution — diagnoseLinkSet,linkSet-method","text":"Diagnose linkSet object, return barplot inter/intra interaction distance distribution","code":""},{"path":"https://gilberthan1011.github.io/linkSet/reference/diagnoseLinkSet-linkSet-method.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Diagnose the linkSet object, return barplot of inter/intra interaction and distance distribution — diagnoseLinkSet,linkSet-method","text":"","code":"# S4 method for class 'linkSet' diagnoseLinkSet(x)"},{"path":"https://gilberthan1011.github.io/linkSet/reference/filterLinks-linkSet-method.html","id":null,"dir":"Reference","previous_headings":"","what":"Filter links for further analysis — filterLinks,linkSet-method","title":"Filter links for further analysis — filterLinks,linkSet-method","text":"Filter links analysis","code":""},{"path":"https://gilberthan1011.github.io/linkSet/reference/filterLinks-linkSet-method.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Filter links for further analysis — filterLinks,linkSet-method","text":"","code":"# S4 method for class 'linkSet' filterLinks(x, filter_intra = TRUE, filter_unannotate = TRUE, distance = NULL)"},{"path":"https://gilberthan1011.github.io/linkSet/reference/filterLinks-linkSet-method.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Filter links for further analysis — filterLinks,linkSet-method","text":"filter_intra Whether filter intra-chromosomal interactions filter_unannotate Whether filter unannotated interactions distance maximum distance bait end","code":""},{"path":"https://gilberthan1011.github.io/linkSet/reference/filterLinks-linkSet-method.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Filter links for further analysis — filterLinks,linkSet-method","text":"linkSet object filtered interactions","code":""},{"path":"https://gilberthan1011.github.io/linkSet/reference/filterLinks-linkSet-method.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Filter links for further analysis — filterLinks,linkSet-method","text":"","code":"ls = data(linkExample) ls = c(ls,ls) ls = countInteractions(ls) #> Error: unable to find an inherited method for function ‘countInteractions’ for signature ‘x = \"character\"’ ls = filterLinks(ls, filter_intra = FALSE, filter_unannotate = FALSE, distance = 100000) #> Error: unable to find an inherited method for function ‘filterLinks’ for signature ‘x = \"character\"’"},{"path":"https://gilberthan1011.github.io/linkSet/reference/geom_linkset-linkSet-method.html","id":null,"dir":"Reference","previous_headings":"","what":"Add Genome Links to Coverage Plot. — geom_linkset,linkSet-method","title":"Add Genome Links to Coverage Plot. — geom_linkset,linkSet-method","text":"Add Genome Links Coverage Plot.","code":""},{"path":"https://gilberthan1011.github.io/linkSet/reference/geom_linkset-linkSet-method.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add Genome Links to Coverage Plot. — geom_linkset,linkSet-method","text":"","code":"# S4 method for class 'linkSet' geom_linkset(   linkSet,   score.col = \"count\",   score.threshold = NULL,   score.color = c(\"grey70\", \"#56B1F7\", \"#132B43\"),   scale.range = 10,   plot.space = 0.1,   plot.height = 0.2,   arrow.size = 0.05,   remove_x_axis = FALSE,   link_plot_on_top = FALSE,   extend.base = 1e+06,   show.rect = FALSE,   x.range = NULL,   log.scale = TRUE )"},{"path":"https://gilberthan1011.github.io/linkSet/reference/geom_linkset-linkSet-method.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add Genome Links to Coverage Plot. — geom_linkset,linkSet-method","text":"score.col Column index contains score information, used file.type bedpe. Default: NULL. score.threshold score threshold, used score.col NULL. Default: NULL. score.color score color vector. Default: c(\"grey70\", \"#56B1F7\", \"#132B43\"). scale.range Scale height links according width, greater equal 1 (scale). Default: 10. plot.space Top bottom margin. Default: 0.1. plot.height relative height link coverage plot. Default: 0.2. arrow.size size arrow head. Default: 0.02. remove_x_axis Logical value, whether remove x-axis. Default: FALSE. link_plot_on_top Logical value, whether plot link plot top coverage plot. Default: FALSE. extend.base Extend base pair range show information. Default: 1000000. show.rect Logical value, whether add rect border plot. Default: FALSE. x.range range x-axis show. Default: NULL. log.scale Logical value, whether log1p score. Default: TRUE. link.file File contains region link information. file.type type link.file, choose bedpe, pairs. Default: bedpe. plot.curve One 'curve' 'bezier', latter required install package ggforce. Default: 'curve'.","code":""},{"path":"https://gilberthan1011.github.io/linkSet/reference/geom_linkset-linkSet-method.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add Genome Links to Coverage Plot. — geom_linkset,linkSet-method","text":"Plot.","code":""},{"path":"https://gilberthan1011.github.io/linkSet/reference/geom_linkset-linkSet-method.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Add Genome Links to Coverage Plot. — geom_linkset,linkSet-method","text":"https://stuartlab.org/signac/articles/cicero.html","code":""},{"path":"https://gilberthan1011.github.io/linkSet/reference/geom_range.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot genomic ranges — geom_range","title":"Plot genomic ranges — geom_range","text":"geom_range() geom_half_range() draw tiles designed represent range-based genomic features, exons. combination geom_intron(), geoms form core components visualizing transcript structures.","code":""},{"path":"https://gilberthan1011.github.io/linkSet/reference/geom_range.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot genomic ranges — geom_range","text":"","code":"geom_range(   mapping = NULL,   data = NULL,   stat = \"identity\",   position = \"identity\",   bait_col = \"red\",   oe_col = \"DeepSkyBlue3\",   default_col = \"grey\",   ...,   vjust = NULL,   linejoin = \"mitre\",   na.rm = FALSE,   minimal_width = 0.01,   show.legend = NA,   inherit.aes = TRUE )"},{"path":"https://gilberthan1011.github.io/linkSet/reference/geom_range.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot genomic ranges — geom_range","text":"mapping Set aesthetic mappings created aes(). specified inherit.aes = TRUE (default), combined default mapping top level plot. must supply mapping plot mapping. data data displayed layer. three options: NULL, default, data inherited plot data specified call ggplot(). data.frame, object, override plot data. objects fortified produce data frame. See fortify() variables created. function called single argument, plot data. return value must data.frame, used layer data. function can created formula (e.g. ~ head(.x, 10)). stat statistical transformation use data layer. using geom_*() function construct layer, stat argument can used override default coupling geoms stats. stat argument accepts following: Stat ggproto subclass, example StatCount. string naming stat. give stat string, strip function name stat_ prefix. example, use stat_count(), give stat \"count\". information ways specify stat, see layer stat documentation. position position adjustment use data layer. can used various ways, including prevent overplotting improving display. position argument accepts following: result calling position function, position_jitter(). method allows passing extra arguments position. string naming position adjustment. give position string, strip function name position_ prefix. example, use position_jitter(), give position \"jitter\". information ways specify position, see layer position documentation. ... arguments passed layer()'s params argument. arguments broadly fall one 4 categories . Notably, arguments position argument, aesthetics required can passed .... Unknown arguments part 4 categories ignored. Static aesthetics mapped scale, fixed value apply layer whole. example, colour = \"red\" linewidth = 3. geom's documentation Aesthetics section lists available options. 'required' aesthetics passed params. Please note passing unmapped aesthetics vectors technically possible, order required length guaranteed parallel input data. constructing layer using stat_*() function, ... argument can used pass parameters geom part layer. example stat_density(geom = \"area\", outline.type = \"\"). geom's documentation lists parameters can accept. Inversely, constructing layer using geom_*() function, ... argument can used pass parameters stat part layer. example geom_area(stat = \"density\", adjust = 0.5). stat's documentation lists parameters can accept. key_glyph argument layer() may also passed .... can one functions described key glyphs, change display layer legend. vjust numeric vector specifying vertical justification.     specified, overrides just setting. linejoin Line join style (round, mitre, bevel). na.rm FALSE, default, missing values removed warning. TRUE, missing values silently removed. show.legend logical. layer included legends? NA, default, includes aesthetics mapped. FALSE never includes, TRUE always includes. can also named logical vector finely select aesthetics display. inherit.aes FALSE, overrides default aesthetics, rather combining . useful helper functions define data aesthetics inherit behaviour default plot specification, e.g. borders().","code":""},{"path":"https://gilberthan1011.github.io/linkSet/reference/geom_range.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot genomic ranges — geom_range","text":"return value geom_* function intended directly handled users. Therefore, geom_* functions never executed isolation, rather used combination ggplot2::ggplot() call.","code":""},{"path":"https://gilberthan1011.github.io/linkSet/reference/geom_range.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Plot genomic ranges — geom_range","text":"geom_range() geom_half_range() require following aes(); xstart, xend y (e.g. transcript name). geom_half_range() takes advantage vertical symmetry transcript annotation plotting half range top bottom transcript structure. can useful comparing two transcripts free plotting space transcript annotations (e.g. geom_junction()).","code":""},{"path":"https://gilberthan1011.github.io/linkSet/reference/linkSet-GRange-Methods.html","id":null,"dir":"Reference","previous_headings":"","what":"linkSet-GRange-Methods — trim,linkSet-method","title":"linkSet-GRange-Methods — trim,linkSet-method","text":"man page documents intra range transformations linkSet object.","code":""},{"path":"https://gilberthan1011.github.io/linkSet/reference/linkSet-GRange-Methods.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"linkSet-GRange-Methods — trim,linkSet-method","text":"","code":"# S4 method for class 'linkSet' trim(x, use.names = TRUE)  # S4 method for class 'linkSet' resize(x, width, fix = \"start\", use.names = TRUE, ...)  # S4 method for class 'linkSet' resizeRegions(   x,   width = 1000,   fix = \"start\",   use.names = TRUE,   region = \"both\",   ... )  # S4 method for class 'linkSet' narrow(x, start = NA, end = NA, width = NA, use.names = TRUE)  # S4 method for class 'linkSet' narrowRegions(   x,   start = NA,   end = NA,   width = NA,   use.names = TRUE,   region = \"both\" )  # S4 method for class 'linkSet' shift(x, shift = 0L, use.names = TRUE)  # S4 method for class 'linkSet' shiftRegions(x, shift = 0L, use.names = TRUE, region = \"both\")  # S4 method for class 'linkSet' flank(   x,   width,   start = TRUE,   both = FALSE,   use.names = TRUE,   ignore.strand = FALSE )  # S4 method for class 'linkSet' flankRegions(   x,   width,   start = TRUE,   both = FALSE,   use.names = TRUE,   ignore.strand = FALSE,   region = \"both\" )  # S4 method for class 'linkSet' promoters(x, upstream = 2000, downstream = 200, use.names = TRUE)  # S4 method for class 'linkSet' promoterRegions(   x,   upstream = 2000,   downstream = 200,   use.names = TRUE,   region = \"both\" )  # S4 method for class 'linkSet' width(x)  # S4 method for class 'linkSet' reduce(x, drop.empty.ranges = FALSE, ...)"},{"path":"https://gilberthan1011.github.io/linkSet/reference/linkSet-GRange-Methods.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"linkSet-GRange-Methods — trim,linkSet-method","text":"x linkSet object use.names logical indicating whether use names","code":""},{"path":"https://gilberthan1011.github.io/linkSet/reference/linkSet-GRange-Methods.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"linkSet-GRange-Methods — trim,linkSet-method","text":"linkSet object","code":""},{"path":"https://gilberthan1011.github.io/linkSet/reference/linkSet-GRange-Methods.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"linkSet-GRange-Methods — trim,linkSet-method","text":"Gilbert Han","code":""},{"path":"https://gilberthan1011.github.io/linkSet/reference/linkSet-GRange-Methods.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"linkSet-GRange-Methods — trim,linkSet-method","text":"","code":"data(linkExample) resize_bait <- resizeRegions(linkExample, width = 75, fix = \"start\", region = \"bait\") resize_bait #> linkSet object with 5 interactions and 1 metadata column: #>              bait     seqnames_oe ranges_oe | anchor1.symbol #>       <character>           <Rle> <IRanges> |    <character> #>   [1]       Gene1 ---        chr1     50-59 |          Gene1 #>   [2]       Gene1 ---        chr2   150-159 |          Gene1 #>   [3]       Gene2 ---        chr2   250-259 |          Gene2 #>   [4]       Gene3 ---        chr4   350-359 |          Gene3 #>   [5]       Gene3 ---        chr4   450-459 |          Gene3 #>   ------- #>   regions: 10 ranges and 0 metadata columns #>   seqinfo: 4 sequences from an unspecified genome; no seqlengths  narrow_bait <- narrowRegions(linkExample, start = 10, width = 40, region = \"bait\") #> Error in .Call2(\"C_solve_user_SEW\", refwidths, start, end, width, translate.negative.coord,     allow.nonnarrowing, PACKAGE = \"IRanges\"): solving row 1: 'allow.nonnarrowing' is FALSE and the solved end (49) is > refwidth narrow_bait #> Error in eval(expr, envir, enclos): object 'narrow_bait' not found  shift_oe <- shiftRegions(linkExample, shift = 10, region = \"oe\") shift_oe #> linkSet object with 5 interactions and 1 metadata column: #>              bait     seqnames_oe ranges_oe | anchor1.symbol #>       <character>           <Rle> <IRanges> |    <character> #>   [1]       Gene1 ---        chr1     60-69 |          Gene1 #>   [2]       Gene1 ---        chr2   160-169 |          Gene1 #>   [3]       Gene2 ---        chr2   260-269 |          Gene2 #>   [4]       Gene3 ---        chr4   360-369 |          Gene3 #>   [5]       Gene3 ---        chr4   460-469 |          Gene3 #>   ------- #>   regions: 10 ranges and 0 metadata columns #>   seqinfo: 4 sequences from an unspecified genome; no seqlengths  flank_bait <- flankRegions(linkExample, width = 100, start = TRUE, both = FALSE, use.names = TRUE, ignore.strand = FALSE, region = \"bait\") flank_bait #> linkSet object with 5 interactions and 1 metadata column: #>              bait     seqnames_oe ranges_oe | anchor1.symbol #>       <character>           <Rle> <IRanges> |    <character> #>   [1]       Gene1 ---        chr1     50-59 |          Gene1 #>   [2]       Gene1 ---        chr2   150-159 |          Gene1 #>   [3]       Gene2 ---        chr2   250-259 |          Gene2 #>   [4]       Gene3 ---        chr4   350-359 |          Gene3 #>   [5]       Gene3 ---        chr4   450-459 |          Gene3 #>   ------- #>   regions: 10 ranges and 0 metadata columns #>   seqinfo: 4 sequences from an unspecified genome; no seqlengths  width(linkExample) #> $bait #> [1] 10 10 10 10 10 #>  #> $oe #> [1] 10 10 10 10 10 #>"},{"path":"https://gilberthan1011.github.io/linkSet/reference/linkSet-accessors.html","id":null,"dir":"Reference","previous_headings":"","what":"linkSet-accessors — anchor1,linkSet-method","title":"linkSet-accessors — anchor1,linkSet-method","text":"Methods get set fields linkSet object.","code":""},{"path":"https://gilberthan1011.github.io/linkSet/reference/linkSet-accessors.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"linkSet-accessors — anchor1,linkSet-method","text":"","code":"# S4 method for class 'linkSet' anchor1(x)  # S4 method for class 'linkSet' anchor2(x)  # S4 method for class 'linkSet' regions(x)  # S4 method for class 'linkSet' seqinfo(x)"},{"path":"https://gilberthan1011.github.io/linkSet/reference/linkSet-accessors.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"linkSet-accessors — anchor1,linkSet-method","text":"x linkSet object","code":""},{"path":"https://gilberthan1011.github.io/linkSet/reference/linkSet-accessors.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"linkSet-accessors — anchor1,linkSet-method","text":"getters, values various slots x returned, setters, slots x modified accordingly – see Details. vector regions","code":""},{"path":"https://gilberthan1011.github.io/linkSet/reference/linkSet-accessors.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"linkSet-accessors — anchor1,linkSet-method","text":"Gilbert Han","code":""},{"path":"https://gilberthan1011.github.io/linkSet/reference/linkSet-class.html","id":null,"dir":"Reference","previous_headings":"","what":"LinkSet object — linkSet-class","title":"LinkSet object — linkSet-class","text":"linkSet object container storing gene-enhancer interactions.","code":""},{"path":"https://gilberthan1011.github.io/linkSet/reference/linkSet-class.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"LinkSet object — linkSet-class","text":"linkSet object vectors paired gene-enhancer interactions.","code":""},{"path":"https://gilberthan1011.github.io/linkSet/reference/linkSet-class.html","id":"slots","dir":"Reference","previous_headings":"","what":"Slots","title":"LinkSet object — linkSet-class","text":"nameBait character vector bait names. anchor1 integer vector first anchor indices. anchor2 integer vector second anchor indices. regions GenomicRanges object regions. NAMES character vector region names. elementMetadata DataFrame element metadata.","code":""},{"path":[]},{"path":"https://gilberthan1011.github.io/linkSet/reference/linkSet-class.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"LinkSet object — linkSet-class","text":"","code":"showClass(\"linkSet\")  # shows the known subclasses #> Class \"linkSet\" [package \"linkSet\"] #>  #> Slots: #>                                                          #> Name:                  nameBait                  anchor1 #> Class:                character                  integer #>                                                          #> Name:                   anchor2                  regions #> Class:                  integer GenomicRanges_OR_missing #>                                                          #> Name:                     NAMES          elementMetadata #> Class:        character_OR_NULL                DataFrame #>                                 #> Name:                  metadata #> Class:                     list #>  #> Extends:  #> Class \"Vector\", directly #> Class \"Annotated\", by class \"Vector\", distance 2 #> Class \"vector_OR_Vector\", by class \"Vector\", distance 2  set.seed(7000) N <- 40 all.starts <- round(runif(N, 1, 100)) all.ends <- all.starts + round(runif(N, 5, 20)) all.regions <- GRanges(rep(c(\"chrA\", \"chrB\"), c(N-10, 10)), IRanges(all.starts, all.ends)) genes = c(rep(\"SP7\",4),rep(\"ASPN\",10),rep(\"XBP1\",6)) Np <- 20 all.anchor1 <- sample(N, Np) gr1 <- all.regions[all.anchor1] gr1$symbol <- genes all.anchor2 <- setdiff(1:40,all.anchor1) gr2 <- all.regions[all.anchor2] x <- linkSet(gr1, gr2,specificCol = \"symbol\") x #> linkSet object with 20 interactions and 1 metadata column: #>               bait     seqnames_oe ranges_oe | anchor1.symbol #>        <character>           <Rle> <IRanges> |    <character> #>    [1]         SP7 ---        chrA     47-58 |            SP7 #>    [2]         SP7 ---        chrA     41-54 |            SP7 #>    [3]         SP7 ---        chrA     20-33 |            SP7 #>    [4]         SP7 ---        chrA    87-104 |            SP7 #>    [5]        ASPN ---        chrA     59-76 |           ASPN #>    ...         ... ...         ...       ... .            ... #>   [16]        XBP1 ---        chrB     54-61 |           XBP1 #>   [17]        XBP1 ---        chrB      1-18 |           XBP1 #>   [18]        XBP1 ---        chrB     83-91 |           XBP1 #>   [19]        XBP1 ---        chrB     33-45 |           XBP1 #>   [20]        XBP1 ---        chrB    96-114 |           XBP1 #>   ------- #>   regions: 40 ranges and 0 metadata columns #>   seqinfo: 2 sequences from an unspecified genome; no seqlengths x2 <- linkSet(genes, gr2) x2 #> linkSet object with 20 interactions and 0 metadata columns: #>               bait     seqnames_oe ranges_oe #>        <character>           <Rle> <IRanges> #>    [1]         SP7 ---        chrA     47-58 #>    [2]         SP7 ---        chrA     41-54 #>    [3]         SP7 ---        chrA     20-33 #>    [4]         SP7 ---        chrA    87-104 #>    [5]        ASPN ---        chrA     59-76 #>    ...         ... ...         ...       ... #>   [16]        XBP1 ---        chrB     54-61 #>   [17]        XBP1 ---        chrB      1-18 #>   [18]        XBP1 ---        chrB     83-91 #>   [19]        XBP1 ---        chrB     33-45 #>   [20]        XBP1 ---        chrB    96-114 #>   ------- #>   regions: 20 ranges and 0 metadata columns #>   seqinfo: 2 sequences from an unspecified genome; no seqlengths"},{"path":"https://gilberthan1011.github.io/linkSet/reference/linkSet-package.html","id":null,"dir":"Reference","previous_headings":"","what":"linkSet: Base Classes for Storing Genomic Link Data — linkSet-package","title":"linkSet: Base Classes for Storing Genomic Link Data — linkSet-package","text":"goal linkSet provide tools working gene-enhancer interactions, commonly seen HiC, PC-HiC, single-cell ATAC-seq data analysis.","code":""},{"path":[]},{"path":"https://gilberthan1011.github.io/linkSet/reference/linkSet-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"linkSet: Base Classes for Storing Genomic Link Data — linkSet-package","text":"Maintainer: Gilbert Han GilbertHan1011@gmail.com (ORCID)","code":""},{"path":"https://gilberthan1011.github.io/linkSet/reference/linkSet-subset-methods.html","id":null,"dir":"Reference","previous_headings":"","what":"Subset linkSet object based on bait names — subsetBait,linkSet-method","title":"Subset linkSet object based on bait names — subsetBait,linkSet-method","text":"Subset linkSet object based bait names Subset linkSet object based bait regions Subset linkSet object based end (oe) regions","code":""},{"path":"https://gilberthan1011.github.io/linkSet/reference/linkSet-subset-methods.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Subset linkSet object based on bait names — subsetBait,linkSet-method","text":"","code":"# S4 method for class 'linkSet' subsetBait(x, subset)  # S4 method for class 'linkSet' subsetBaitRegion(x, subset)  # S4 method for class 'linkSet' subsetOE(x, subset)"},{"path":"https://gilberthan1011.github.io/linkSet/reference/linkSet-subset-methods.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Subset linkSet object based on bait names — subsetBait,linkSet-method","text":"x linkSet object subset GRanges object specifying regions keep","code":""},{"path":"https://gilberthan1011.github.io/linkSet/reference/linkSet-subset-methods.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Subset linkSet object based on bait names — subsetBait,linkSet-method","text":"new linkSet object containing specified bait interactions new linkSet object containing interactions bait regions overlapping subset new linkSet object containing interactions oe regions overlapping subset","code":""},{"path":"https://gilberthan1011.github.io/linkSet/reference/linkSet.html","id":null,"dir":"Reference","previous_headings":"","what":"linkSet: Base Classes for Storing Genomic Link Data — linkSet","title":"linkSet: Base Classes for Storing Genomic Link Data — linkSet","text":"linkSet package provides tools working genomic link sets, represent connections different genomic regions. package designed bioinformatics genomic data analysis, offering various methods manipulate analyze linkSet objects.","code":""},{"path":"https://gilberthan1011.github.io/linkSet/reference/linkSet.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"linkSet: Base Classes for Storing Genomic Link Data — linkSet","text":"main class provided package linkSet class, designed represent analyze genomic interactions, particularly focusing gene-enhancer relationships. Key features include: Representation genomic interactions two types anchors: \"bait\" (typically genes) \"end\" (typically enhancers regulatory elements). Flexible input methods, supporting construction various data types. Metadata storage additional information interactions. Integration Bioconductor classes tools. Methods annotating promoters distinguishing inter- intra-chromosomal interactions.","code":""},{"path":"https://gilberthan1011.github.io/linkSet/reference/linkSet.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"linkSet: Base Classes for Storing Genomic Link Data — linkSet","text":"Add relevant references .","code":""},{"path":[]},{"path":"https://gilberthan1011.github.io/linkSet/reference/linkSet.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"linkSet: Base Classes for Storing Genomic Link Data — linkSet","text":"","code":"# Basic usage example library(linkSet) # Add a simple example here"},{"path":"https://gilberthan1011.github.io/linkSet/reference/orderLinks-linkSet-method.html","id":null,"dir":"Reference","previous_headings":"","what":"Order linkSet by mcols — orderLinks,linkSet-method","title":"Order linkSet by mcols — orderLinks,linkSet-method","text":"Order linkSet mcols","code":""},{"path":"https://gilberthan1011.github.io/linkSet/reference/orderLinks-linkSet-method.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Order linkSet by mcols — orderLinks,linkSet-method","text":"","code":"# S4 method for class 'linkSet' orderLinks(x, by = \"count\", decreasing = TRUE)"},{"path":"https://gilberthan1011.github.io/linkSet/reference/orderLinks-linkSet-method.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Order linkSet by mcols — orderLinks,linkSet-method","text":"column name order decreasing Whether sort decreasing order","code":""},{"path":"https://gilberthan1011.github.io/linkSet/reference/orderLinks-linkSet-method.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Order linkSet by mcols — orderLinks,linkSet-method","text":"linkSet object ordered interactions","code":""},{"path":"https://gilberthan1011.github.io/linkSet/reference/orderLinks-linkSet-method.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Order linkSet by mcols — orderLinks,linkSet-method","text":"","code":"ls = data(linkExample) ls = c(ls,ls) ls = countInteractions(ls) #> Error: unable to find an inherited method for function ‘countInteractions’ for signature ‘x = \"character\"’ ls = filterLinks(ls, filter_intra = FALSE, filter_unannotate = FALSE, distance = 100000) #> Error: unable to find an inherited method for function ‘filterLinks’ for signature ‘x = \"character\"’ ls = orderLinks(ls, by = \"count\", decreasing = TRUE) #> Error: unable to find an inherited method for function ‘orderLinks’ for signature ‘x = \"character\"’"},{"path":"https://gilberthan1011.github.io/linkSet/reference/pairdist-linkSet-method.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate the distance between bait and the other end — pairdist,linkSet-method","title":"Calculate the distance between bait and the other end — pairdist,linkSet-method","text":"Outputs integer vector specifying distance interacting bins, depending type distance specified. Example:   mid: Half distance end first range start second range gap: Distance end first range start second range span: Total span start first range end second range","code":"rangeA:  |---------|    rangeB:                |---------|    mid:           <----------->    gap:               <-->    span:    <----------------------->"},{"path":"https://gilberthan1011.github.io/linkSet/reference/pairdist-linkSet-method.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate the distance between bait and the other end — pairdist,linkSet-method","text":"","code":"# S4 method for class 'linkSet' pairdist(x, type = \"mid\")"},{"path":"https://gilberthan1011.github.io/linkSet/reference/pairdist-linkSet-method.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate the distance between bait and the other end — pairdist,linkSet-method","text":"x linkSet object type type distance calculate, either \"mid\", \"gap\", \"span\"","code":""},{"path":"https://gilberthan1011.github.io/linkSet/reference/pairdist-linkSet-method.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate the distance between bait and the other end — pairdist,linkSet-method","text":"linkSet object new metadata column \"distance\"","code":""},{"path":"https://gilberthan1011.github.io/linkSet/reference/pairdist-linkSet-method.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate the distance between bait and the other end — pairdist,linkSet-method","text":"","code":"data(linkExample) linkExample <- pairdist(linkExample, type=\"mid\")"},{"path":"https://gilberthan1011.github.io/linkSet/reference/plot_genomic_ranges-linkSet-method.html","id":null,"dir":"Reference","previous_headings":"","what":"plot genomic ranges and links — plot_genomic_ranges,linkSet-method","title":"plot genomic ranges and links — plot_genomic_ranges,linkSet-method","text":"plot genomic ranges links","code":""},{"path":"https://gilberthan1011.github.io/linkSet/reference/plot_genomic_ranges-linkSet-method.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"plot genomic ranges and links — plot_genomic_ranges,linkSet-method","text":"","code":"# S4 method for class 'linkSet' plot_genomic_ranges(   linkset,   showBait = NULL,   showOE = NULL,   x.range = NULL,   score.col = \"count\",   show.rect = TRUE,   extend.base = 1e+06,   ...,   bait_col = \"red\",   oe_col = \"DeepSkyBlue3\",   default_col = \"grey\",   vjust = NULL,   linejoin = \"mitre\",   na.rm = FALSE,   minimal_width = 0.01,   show.legend = NA,   inherit.aes = TRUE,   link_plot_on_top = FALSE,   arrow.size = 0.05,   remove_x_axis = FALSE,   plot.height = 0.4,   plot.space = 0.1,   log.scale = TRUE )"},{"path":"https://gilberthan1011.github.io/linkSet/reference/plot_genomic_ranges-linkSet-method.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"plot genomic ranges and links — plot_genomic_ranges,linkSet-method","text":"linkset linkSet object. showBait character vector specifying bait region shown. Default: NULL. showOE GRanges object specifying oe region shown. Default: NULL. x.range numeric vector length 2 specifying x-axis range. Default: NULL. score.col character string specifying column name score. Default: \"count\". show.rect Logical value, whether show rectangle. Default: TRUE. extend.base numeric value specifying extension base. Default: 1000000. ... Additional arguments. bait_col character string specifying color bait region. Default: \"red\". oe_col character string specifying color oe region. Default: \"DeepSkyBlue3\". default_col character string specifying color default region. Default: \"grey\". vjust numeric value specifying vertical justification. Default: NULL. linejoin character string specifying line join. Default: \"mitre\". na.rm Logical value, whether remove NA values. Default: FALSE. minimal_width numeric value specifying minimal width. Default: 0.01. show.legend Logical value, whether show legend. Default: NA. inherit.aes Logical value, whether inherit aesthetics. Default: TRUE. link_plot_on_top Logical value, whether plot link plot top coverage plot. Default: FALSE. arrow.size numeric value specifying size arrow head. Default: 0.05. remove_x_axis Logical value, whether remove x-axis. Default: FALSE. plot.height numeric value specifying height plot. Default: 0.4. plot.space numeric value specifying space plot link plot. Default: 0.1. log.scale Logical value, whether log scale score. Default: TRUE.","code":""},{"path":"https://gilberthan1011.github.io/linkSet/reference/plot_genomic_ranges-linkSet-method.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"plot genomic ranges and links — plot_genomic_ranges,linkSet-method","text":"ggplot object.","code":""},{"path":"https://gilberthan1011.github.io/linkSet/reference/plot_genomic_ranges-linkSet-method.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"plot genomic ranges and links — plot_genomic_ranges,linkSet-method","text":"","code":"data(linkExample) plot_genomic_ranges(linkExample, extend.base = 10) #> Warning: score.col not found, using count as default"},{"path":"https://gilberthan1011.github.io/linkSet/reference/readvalidPairs.html","id":null,"dir":"Reference","previous_headings":"","what":"Read validPairs file to GInteractions — readvalidPairs","title":"Read validPairs file to GInteractions — readvalidPairs","text":"Read validPairs file GInteractions","code":""},{"path":"https://gilberthan1011.github.io/linkSet/reference/readvalidPairs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read validPairs file to GInteractions — readvalidPairs","text":"","code":"readvalidPairs(file)"},{"path":"https://gilberthan1011.github.io/linkSet/reference/readvalidPairs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read validPairs file to GInteractions — readvalidPairs","text":"file character string specifying path validPairs file","code":""},{"path":"https://gilberthan1011.github.io/linkSet/reference/readvalidPairs.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read validPairs file to GInteractions — readvalidPairs","text":"GInteractions object","code":""},{"path":"https://gilberthan1011.github.io/linkSet/reference/reduceRegions-linkSet-method.html","id":null,"dir":"Reference","previous_headings":"","what":"Reduce a linkSet object — reduceRegions,linkSet-method","title":"Reduce a linkSet object — reduceRegions,linkSet-method","text":"function reduces bait /oe regions linkSet object optionally counts interactions, maintaining original length linkSet.","code":""},{"path":"https://gilberthan1011.github.io/linkSet/reference/reduceRegions-linkSet-method.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Reduce a linkSet object — reduceRegions,linkSet-method","text":"","code":"# S4 method for class 'linkSet' reduceRegions(x, region = \"both\", countInteractions = TRUE, ...)"},{"path":"https://gilberthan1011.github.io/linkSet/reference/reduceRegions-linkSet-method.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Reduce a linkSet object — reduceRegions,linkSet-method","text":"x linkSet object countInteractions Logical, whether count interactions reducing (default: TRUE) ... Additional arguments passed GenomicRanges::reduce reduceBait Logical, whether reduce bait regions (default: TRUE) reduceOE Logical, whether reduce end (oe) regions (default: TRUE)","code":""},{"path":"https://gilberthan1011.github.io/linkSet/reference/reduceRegions-linkSet-method.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Reduce a linkSet object — reduceRegions,linkSet-method","text":"reduced linkSet object length input","code":""}]
