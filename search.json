[{"path":"https://gilberthan1011.github.io/linkSet/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2024 linkSet authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://gilberthan1011.github.io/linkSet/articles/hic_workthrough.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"hic_workthrough","text":"vignette provides step--step guide using linkSet package analyze Hi-C/HiChIP data. use toy example illustrate main functions workflows. goal identify enhancer-gene links example use following datasets input: validPairs produced HiC-Pro. Mouse embryo body enhancer data enhancer atlas website. Gene annotation data TxDb.Mmusculus.UCSC.mm10.knownGene pakcage. highly recommend use custom data instead example data provided vignette.","code":""},{"path":"https://gilberthan1011.github.io/linkSet/articles/hic_workthrough.html","id":"setup","dir":"Articles","previous_headings":"","what":"Setup","title":"hic_workthrough","text":"use custom function readvalidPairs load example data. Firstly, need load GInteractions object. hic data contains digist end, resize region upstream 5kb downstream 5kb. , use baitGInteractions generate linkSet object. print linkSet object, can see basic information linkSet object. default, don’t show bait region. interested bait region, can set showBaitRegion = TRUE.","code":"suppressPackageStartupMessages({   library(linkSet)   library(TxDb.Mmusculus.UCSC.mm10.knownGene)   library(org.Mm.eg.db)   library(Organism.dplyr)   library(InteractionSet) }) hic_file <- system.file(\"extdata\", \"toyValidatePair\",                          package=\"linkSet\") gi <- readvalidPairs(hic_file) promoterGr <- withTxDb(\"mm10\", function(src) {   genes <- Organism.dplyr::genes(src, columns = \"symbol\")   IRanges::promoters(genes, upstream = 10000) }) #> creating 'src_organism' database... #> Warning in valid.GenomicRanges.seqinfo(x, suggest.trim = TRUE): GRanges object contains 3 out-of-bound ranges located on sequences #>   chr4_JH584294_random, chr4_JH584292_random, and chr5_GL456354_random. #>   Note that ranges located on a sequence whose length is unknown (NA) or #>   on a circular sequence are not considered out-of-bound (use #>   seqlengths() and isCircular() to get the lengths and circularity flags #>   of the underlying sequences). You can use trim() to trim these ranges. #>   See ?`trim,GenomicRanges-method` for more information. file_url <- c(\"http://www.enhanceratlas.org/data/download/enhancer/mm/Embryo_body.bed\") temp_file <- tempfile(fileext = \".bed\") download.file(file_url, temp_file, method = \"curl\") enhancer <- rtracklayer::import(temp_file) gi <- resize(gi,10000,fix = \"center\") ls <- baitGInteractions(gi,geneGr = promoterGr,peakGr = enhancer,\"symbol\") ls #> linkSet object with 40 interactions and 2 metadata columns: #>                 bait     seqnames_oe         ranges_oe | anchor1.symbol #>          <character>           <Rle>         <IRanges> |    <character> #>    [1]         Sulf1 ---        chr1 12785091-12785750 |          Sulf1 #>    [2]        Prdm14 ---        chr1 12785091-12785750 |         Prdm14 #>    [3]          Bag2 ---        chr1 12785091-12785750 |           Bag2 #>    [4] 4930444P10Rik ---        chr1 12785091-12785750 |  4930444P10Rik #>    [5]         Rdh10 ---        chr1 12785091-12785750 |          Rdh10 #>    ...           ... ...         ...               ... .            ... #>   [36]       Slco5a1 ---        chr1 14496641-14497000 |        Slco5a1 #>   [37]       Slco5a1 ---        chr1 14496641-14497000 |        Slco5a1 #>   [38]       Slco5a1 ---        chr1 75286081-75286280 |        Slco5a1 #>   [39]       Slco5a1 ---        chr1 72687651-72687800 |        Slco5a1 #>   [40]       Slco5a1 ---        chr1 64040331-64041080 |        Slco5a1 #>            anchor2.name #>             <character> #>    [1] 12.2266622787328 #>    [2] 12.2266622787328 #>    [3] 12.2266622787328 #>    [4] 12.2266622787328 #>    [5] 12.2266622787328 #>    ...              ... #>   [36] 16.1891332694206 #>   [37] 16.1891332694206 #>   [38] 12.1079981422902 #>   [39] 14.5003484893464 #>   [40] 11.4785793668123 #>   ------- #>   regions: 36 ranges and 0 metadata columns #>   seqinfo: 66 sequences (1 circular) from mm10 genome showLinkSet(ls, baitRegion = TRUE) #> linkSet object with 40 interactions and 2 metadata columns: #>               bait seqnames_bait       ranges_bait     seqnames_oe #>  [1]         Sulf1          chr1 12682277-12692476 ---        chr1 #>  [2]        Prdm14          chr1 13126964-13137163 ---        chr1 #>  [3]          Bag2          chr1 33757596-33767795 ---        chr1 #>  [4] 4930444P10Rik          chr1 16093126-16103325 ---        chr1 #>  [5]         Rdh10          chr1 16095774-16105973 ---        chr1 #>  ...           ...           ...               ... ...         ... #> [36]       Slco5a1          chr1 12992451-13002650 ---        chr1 #> [37]       Slco5a1          chr1 12992451-13002650 ---        chr1 #> [38]       Slco5a1          chr1 12992451-13002650 ---        chr1 #> [39]       Slco5a1          chr1 12992451-13002650 ---        chr1 #> [40]       Slco5a1          chr1 12992451-13002650 ---        chr1 #>              ranges_oe | anchor1.symbol     anchor2.name #>  [1] 12785091-12785750 |          Sulf1 12.2266622787328 #>  [2] 12785091-12785750 |         Prdm14 12.2266622787328 #>  [3] 12785091-12785750 |           Bag2 12.2266622787328 #>  [4] 12785091-12785750 |  4930444P10Rik 12.2266622787328 #>  [5] 12785091-12785750 |          Rdh10 12.2266622787328 #>  ...               ... .            ...              ... #> [36] 14496641-14497000 |        Slco5a1 16.1891332694206 #> [37] 14496641-14497000 |        Slco5a1 16.1891332694206 #> [38] 75286081-75286280 |        Slco5a1 12.1079981422902 #> [39] 72687651-72687800 |        Slco5a1 14.5003484893464 #> [40] 64040331-64041080 |        Slco5a1 11.4785793668123"},{"path":"https://gilberthan1011.github.io/linkSet/articles/hic_workthrough.html","id":"diagnose-and-filter-links","dir":"Articles","previous_headings":"","what":"Diagnose and filter links","title":"hic_workthrough","text":"Now, can run diagnoseLinkSet check distance distribution inter/intra interaction percentage.  Intrachromosomal interaction long distance interaction likely noise, filter . Duplicated links associated contact frequency, ’s good idea count duplicated links. can notice significant link strength Sulf1 chr1:12785091-12785750.","code":"diagnoseLinkSet(ls) #> `stat_bin()` using `bins = 30`. Pick better value with `binwidth`. #> linkSet object with 40 interactions and 4 metadata columns: #>                 bait     seqnames_oe         ranges_oe | anchor1.symbol #>          <character>           <Rle>         <IRanges> |    <character> #>    [1]         Sulf1 ---        chr1 12785091-12785750 |          Sulf1 #>    [2]        Prdm14 ---        chr1 12785091-12785750 |         Prdm14 #>    [3]          Bag2 ---        chr1 12785091-12785750 |           Bag2 #>    [4] 4930444P10Rik ---        chr1 12785091-12785750 |  4930444P10Rik #>    [5]         Rdh10 ---        chr1 12785091-12785750 |          Rdh10 #>    ...           ... ...         ...               ... .            ... #>   [36]       Slco5a1 ---        chr1 14496641-14497000 |        Slco5a1 #>   [37]       Slco5a1 ---        chr1 14496641-14497000 |        Slco5a1 #>   [38]       Slco5a1 ---        chr1 75286081-75286280 |        Slco5a1 #>   [39]       Slco5a1 ---        chr1 72687651-72687800 |        Slco5a1 #>   [40]       Slco5a1 ---        chr1 64040331-64041080 |        Slco5a1 #>            anchor2.name  inter_type  distance #>             <character> <character> <integer> #>    [1] 12.2266622787328       inter     98044 #>    [2] 12.2266622787328       inter    346643 #>    [3] 12.2266622787328       inter  20977275 #>    [4] 12.2266622787328       inter   3312805 #>    [5] 12.2266622787328       inter   3315453 #>    ...              ...         ...       ... #>   [36] 16.1891332694206       inter   1499270 #>   [37] 16.1891332694206       inter   1499270 #>   [38] 12.1079981422902       inter  62288630 #>   [39] 14.5003484893464       inter  59690175 #>   [40] 11.4785793668123       inter  51043155 #>   ------- #>   regions: 36 ranges and 0 metadata columns #>   seqinfo: 66 sequences (1 circular) from mm10 genome ls <- countInteractibility(ls) #> Warning in countInteractibility(ls): No intra-chromosomal interactions found. #> Please run this function before you filterLinks. ls <- filterLinks(ls,filter_intra = TRUE, filter_unannotate = TRUE, distance = 50000000) ls <- countInteractions(ls) orderLinks(ls,by = \"count\",decreasing = T) #> linkSet object with 23 interactions and 5 metadata columns: #>                 bait     seqnames_oe         ranges_oe | anchor1.symbol #>          <character>           <Rle>         <IRanges> |    <character> #>    [1]         Sulf1 ---        chr1 12785091-12785750 |          Sulf1 #>    [2]        Prdm14 ---        chr1 12785091-12785750 |         Prdm14 #>    [3]          Bag2 ---        chr1 12785091-12785750 |           Bag2 #>    [4] 4930444P10Rik ---        chr1 12785091-12785750 |  4930444P10Rik #>    [5]         Rdh10 ---        chr1 12785091-12785750 |          Rdh10 #>    ...           ... ...         ...               ... .            ... #>   [19]         Kcnb2 ---        chr1 12785091-12785750 |          Kcnb2 #>   [20]          Clk1 ---        chr1 12785091-12785750 |           Clk1 #>   [21]        Nif3l1 ---        chr1 12785091-12785750 |         Nif3l1 #>   [22]       Slco5a1 ---        chr1 14496641-14497000 |        Slco5a1 #>   [23]       Slco5a1 ---        chr1 39924881-39925280 |        Slco5a1 #>            anchor2.name  inter_type     count  distance #>             <character> <character> <integer> <integer> #>    [1] 12.2266622787328       inter         1     98044 #>    [2] 12.2266622787328       inter         1    346643 #>    [3] 12.2266622787328       inter         1  20977275 #>    [4] 12.2266622787328       inter         1   3312805 #>    [5] 12.2266622787328       inter         1   3315453 #>    ...              ...         ...       ...       ... #>   [19] 12.2266622787328       inter         1   2496933 #>   [20] 12.2266622787328       inter         1  45643546 #>   [21] 12.2266622787328       inter         1  45654830 #>   [22] 16.1891332694206       inter         1   1499270 #>   [23] 14.6843556168742       inter         1  26927530 #>   ------- #>   regions: 24 ranges and 0 metadata columns #>   seqinfo: 66 sequences (1 circular) from mm10 genome"},{"path":"https://gilberthan1011.github.io/linkSet/articles/hic_workthrough.html","id":"cross-gene-links-and-visualization","dir":"Articles","previous_headings":"","what":"Cross gene links and visualization","title":"hic_workthrough","text":"Enhancers regulate multiple genes biologically meaningful. can use plot_genomic_ranges visualize cross gene links.  can also choose visualze bait center region.","code":"ls <- crossGeneEnhancer(ls) ls <- orderLinks(ls,by = \"crossFreq\",decreasing = T) ls #> linkSet object with 23 interactions and 6 metadata columns: #>                 bait     seqnames_oe         ranges_oe | anchor1.symbol #>          <character>           <Rle>         <IRanges> |    <character> #>    [1]         Sulf1 ---        chr1 12785091-12785750 |          Sulf1 #>    [2]        Prdm14 ---        chr1 12785091-12785750 |         Prdm14 #>    [3]          Bag2 ---        chr1 12785091-12785750 |           Bag2 #>    [4] 4930444P10Rik ---        chr1 12785091-12785750 |  4930444P10Rik #>    [5]         Rdh10 ---        chr1 12785091-12785750 |          Rdh10 #>    ...           ... ...         ...               ... .            ... #>   [19]         Kcnb2 ---        chr1 12785091-12785750 |          Kcnb2 #>   [20]          Clk1 ---        chr1 12785091-12785750 |           Clk1 #>   [21]        Nif3l1 ---        chr1 12785091-12785750 |         Nif3l1 #>   [22]       Slco5a1 ---        chr1 14496641-14497000 |        Slco5a1 #>   [23]       Slco5a1 ---        chr1 39924881-39925280 |        Slco5a1 #>            anchor2.name  inter_type     count  distance crossFreq #>             <character> <character> <integer> <integer> <integer> #>    [1] 12.2266622787328       inter         1     98044        21 #>    [2] 12.2266622787328       inter         1    346643        21 #>    [3] 12.2266622787328       inter         1  20977275        21 #>    [4] 12.2266622787328       inter         1   3312805        21 #>    [5] 12.2266622787328       inter         1   3315453        21 #>    ...              ...         ...       ...       ...       ... #>   [19] 12.2266622787328       inter         1   2496933        21 #>   [20] 12.2266622787328       inter         1  45643546        21 #>   [21] 12.2266622787328       inter         1  45654830        21 #>   [22] 16.1891332694206       inter         1   1499270         1 #>   [23] 14.6843556168742       inter         1  26927530         1 #>   ------- #>   regions: 24 ranges and 0 metadata columns #>   seqinfo: 66 sequences (1 circular) from mm10 genome plot_genomic_ranges(ls,showOE = oe(ls)[1]) plot_genomic_ranges(ls,showBait = \"Ncoa2\") plot_genomic_ranges(ls,showBait = \"Sulf1\")"},{"path":"https://gilberthan1011.github.io/linkSet/articles/linkSet.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"linkSet","text":"techniche like HiC, PCHiC, scATAC-seq, high-throughput omics techniques, able predict interactions genes enhancers. linkSet package provides classes represent interactions genes enhancers, provides functions analyze visualize interactions.","code":""},{"path":"https://gilberthan1011.github.io/linkSet/articles/linkSet.html","id":"application-situation","dir":"Articles","previous_headings":"","what":"Application Situation","title":"linkSet","text":"linkSet can seamlessly apply following situation: 1. Capture HiC workflow. 2. Using HiC identify gene-enhancer interactions. 3. Using scRNA scATAC predict gene-enhancer interactions.","code":""},{"path":"https://gilberthan1011.github.io/linkSet/articles/linkSet.html","id":"the-linkset-class","dir":"Articles","previous_headings":"","what":"The linkSet class","title":"linkSet","text":"linkSet class specialized data structure designed represent analyze genomic interactions, particularly focusing gene-enhancer relationships. ’s part linkSet package, provides tools managing analyzing genomic link data bioinformatics genomic research. Key features linkSet class: Representation genomic interactions: stores two types genomic anchors: “bait” (typically genes) “end” (oe, typically enhancers regulatory elements). anchors represented genomic ranges, allowing precise localization chromosomes. Flexible input: Can constructed various data types, including GRanges objects anchors, character vectors bait GRanges ends. Supports conversion common genomic data structures like GInteractions data frames. Metadata storage: Allows additional information stored alongside genomic interactions, interaction scores experimental conditions. Biological context: Designed work data various high-throughput genomic techniques like Hi-C, Promoter Capture Hi-C (PCHi-C), scATAC-seq. Facilitates analysis long-range chromatin interactions, crucial understanding gene regulation 3D genome organization. Annotation capabilities: Includes methods annotating promoters distinguishing inter- intra-chromosomal interactions. feature particularly useful identifying potential regulatory relationships distal genomic elements. Integration Bioconductor: Built top established Bioconductor classes, ensuring compatibility wide range genomic analysis tools. Visualization analysis: class designed support functions analyzing visualizing genomic interactions.","code":""},{"path":"https://gilberthan1011.github.io/linkSet/articles/linkSet.html","id":"construction","dir":"Articles","previous_headings":"","what":"Construction","title":"linkSet","text":"linkSet class can constructed various data types, including GRanges objects anchors, character vectors bait GRanges ends.","code":""},{"path":"https://gilberthan1011.github.io/linkSet/articles/linkSet.html","id":"construction-from-granges-objects","dir":"Articles","previous_headings":"Construction","what":"Construction from GRanges objects","title":"linkSet","text":"construct linkSet object GRanges objects:","code":"suppressPackageStartupMessages(library(linkSet)) library(GenomicRanges) gr1 <- GRanges(seqnames = c(\"chr1\", \"chr1\", \"chr2\"),               ranges = IRanges(start = c(1, 100, 200), width = 10),               strand = \"+\", symbol = c(\"Gene1\", \"Gene2\", \"Gene3\")) gr2 <- GRanges(seqnames = c(\"chr1\", \"chr2\", \"chr2\"),               ranges = IRanges(start = c(50, 150, 250), width = 10),               strand = \"+\") ## construct linkSet ls <- linkSet(gr1, gr2, specificCol = \"symbol\") ls #> linkSet object with 3 interactions and 1 metadata column: #>              bait     seqnames_oe ranges_oe | anchor1.symbol #>       <character>           <Rle> <IRanges> |    <character> #>   [1]       Gene1 ---        chr1     50-59 |          Gene1 #>   [2]       Gene2 ---        chr2   150-159 |          Gene2 #>   [3]       Gene3 ---        chr2   250-259 |          Gene3 #>   ------- #>   regions: 6 ranges and 0 metadata columns #>   seqinfo: 2 sequences from an unspecified genome; no seqlengths"},{"path":"https://gilberthan1011.github.io/linkSet/articles/linkSet.html","id":"construction-from-ginteractions","dir":"Articles","previous_headings":"Construction","what":"Construction from GInteractions","title":"linkSet","text":"can also create linkSet object GInteractions object using Convert function: times, need use gene enhancer information construct linkSet object GInteractions.","code":"library(InteractionSet) #> Loading required package: SummarizedExperiment #> Loading required package: MatrixGenerics #> Loading required package: matrixStats #>  #> Attaching package: 'MatrixGenerics' #> The following objects are masked from 'package:matrixStats': #>  #>     colAlls, colAnyNAs, colAnys, colAvgsPerRowSet, colCollapse, #>     colCounts, colCummaxs, colCummins, colCumprods, colCumsums, #>     colDiffs, colIQRDiffs, colIQRs, colLogSumExps, colMadDiffs, #>     colMads, colMaxs, colMeans2, colMedians, colMins, colOrderStats, #>     colProds, colQuantiles, colRanges, colRanks, colSdDiffs, colSds, #>     colSums2, colTabulates, colVarDiffs, colVars, colWeightedMads, #>     colWeightedMeans, colWeightedMedians, colWeightedSds, #>     colWeightedVars, rowAlls, rowAnyNAs, rowAnys, rowAvgsPerColSet, #>     rowCollapse, rowCounts, rowCummaxs, rowCummins, rowCumprods, #>     rowCumsums, rowDiffs, rowIQRDiffs, rowIQRs, rowLogSumExps, #>     rowMadDiffs, rowMads, rowMaxs, rowMeans2, rowMedians, rowMins, #>     rowOrderStats, rowProds, rowQuantiles, rowRanges, rowRanks, #>     rowSdDiffs, rowSds, rowSums2, rowTabulates, rowVarDiffs, rowVars, #>     rowWeightedMads, rowWeightedMeans, rowWeightedMedians, #>     rowWeightedSds, rowWeightedVars #> Loading required package: Biobase #> Welcome to Bioconductor #>  #>     Vignettes contain introductory material; view with #>     'browseVignettes()'. To cite Bioconductor, see #>     'citation(\"Biobase\")', and for packages 'citation(\"pkgname\")'. #>  #> Attaching package: 'Biobase' #> The following object is masked from 'package:MatrixGenerics': #>  #>     rowMedians #> The following objects are masked from 'package:matrixStats': #>  #>     anyMissing, rowMedians #>  #> Attaching package: 'InteractionSet' #> The following objects are masked from 'package:linkSet': #>  #>     anchorIds, anchors, pairdist, reduceRegions, regions, regions<- gi <- GInteractions(   anchor1 = c(1, 3, 5),   anchor2 = c(2, 4, 6),   regions = GRanges(     seqnames = c(\"chr1\", \"chr1\", \"chr2\", \"chr2\", \"chr3\", \"chr3\"),     ranges = IRanges(start = c(1, 50, 100, 150, 200, 250), width = 10)     )   ) mcols(gi)$score <- c(0.1, 0.2, 0.3) mcols(gi)$gene <- c(\"Sox2\", \"Sox9\", \"Sox10\") ##Convert to linkSet ls_from_gi <- Convert(gi, baitCol = \"gene\") ls_from_gi #> linkSet object with 3 interactions and 2 metadata columns: #>              bait     seqnames_oe ranges_oe |     score        gene #>       <character>           <Rle> <IRanges> | <numeric> <character> #>   [1]        Sox2 ---        chr1     50-59 |       0.1        Sox2 #>   [2]        Sox9 ---        chr2   150-159 |       0.2        Sox9 #>   [3]       Sox10 ---        chr3   250-259 |       0.3       Sox10 #>   ------- #>   regions: 6 ranges and 0 metadata columns #>   seqinfo: 3 sequences from an unspecified genome; no seqlengths geneGr <- GRanges(   seqnames = c(\"chr1\", \"chr2\", \"chr3\"),   ranges = IRanges(start = c(5, 105, 205), width = 20),   symbol = c(\"Gene1\", \"Gene2\", \"Gene3\") )  peakGr <- GRanges(   seqnames = c(\"chr1\", \"chr2\", \"chr3\"),   ranges = IRanges(start = c(45, 145, 245), width = 10) )  # Run baitGInteractions ls_from_gi_2 <- baitGInteractions(gi, geneGr, peakGr, geneSymbol = \"symbol\")  ls_from_gi_2 #> linkSet object with 3 interactions and 3 metadata columns: #>              bait     seqnames_oe ranges_oe | anchor1.symbol     score #>       <character>           <Rle> <IRanges> |    <character> <numeric> #>   [1]       Gene1 ---        chr1     45-54 |          Gene1       0.1 #>   [2]       Gene2 ---        chr2   145-154 |          Gene2       0.2 #>   [3]       Gene3 ---        chr3   245-254 |          Gene3       0.3 #>              gene #>       <character> #>   [1]        Sox2 #>   [2]        Sox9 #>   [3]       Sox10 #>   ------- #>   regions: 6 ranges and 0 metadata columns #>   seqinfo: 3 sequences from an unspecified genome; no seqlengths"},{"path":"https://gilberthan1011.github.io/linkSet/articles/linkSet.html","id":"other-construction-methods","dir":"Articles","previous_headings":"Construction","what":"Other construction methods","title":"linkSet","text":"can also construct linkSet object data frame.","code":"test_df <- data.frame(   gene = c(\"gene1\", \"gene2\", \"gene3\"),   peak = c(\"chr1:1000-2000\", \"chr2:3000-4000\", \"chr3:5000-6000\"),   score = c(0.5, 0.7, 0.9),   stringsAsFactors = FALSE )  # Test successful conversion ls_from_df <- Convert(test_df) ls_from_df #> linkSet object with 3 interactions and 1 metadata column: #>              bait     seqnames_oe ranges_oe |     score #>       <character>           <Rle> <IRanges> | <numeric> #>   [1]       gene1 ---        chr1  999-2000 |       0.5 #>   [2]       gene2 ---        chr2 2999-4000 |       0.7 #>   [3]       gene3 ---        chr3 4999-6000 |       0.9 #>   ------- #>   regions: 3 ranges and 0 metadata columns #>   seqinfo: 3 sequences from an unspecified genome; no seqlengths"},{"path":[]},{"path":"https://gilberthan1011.github.io/linkSet/articles/linkSet.html","id":"getters","dir":"Articles","previous_headings":"Accessors","what":"Getters","title":"linkSet","text":"important elements linkSet object can easily accessed following accessors: regions(x): Get regions linkSet object. bait(x): Get bait linkSet object. oe(x): Get end linkSet object. regionsBait(x): Get bait regions linkSet object. regionsOe(x): Get end regions linkSet object. mcols(x): Get metadata linkSet object.","code":"linkSet::regions(ls) #> GRanges object with 6 ranges and 0 metadata columns: #>       seqnames    ranges strand #>          <Rle> <IRanges>  <Rle> #>   [1]     chr1      1-10      + #>   [2]     chr1     50-59      + #>   [3]     chr1   100-109      + #>   [4]     chr2   150-159      + #>   [5]     chr2   200-209      + #>   [6]     chr2   250-259      + #>   ------- #>   seqinfo: 2 sequences from an unspecified genome; no seqlengths regionsBait(ls) #> GRanges object with 3 ranges and 0 metadata columns: #>       seqnames    ranges strand #>          <Rle> <IRanges>  <Rle> #>   [1]     chr1      1-10      + #>   [2]     chr1   100-109      + #>   [3]     chr2   200-209      + #>   ------- #>   seqinfo: 2 sequences from an unspecified genome; no seqlengths oe(ls) #> GRanges object with 3 ranges and 0 metadata columns: #>       seqnames    ranges strand #>          <Rle> <IRanges>  <Rle> #>   [1]     chr1     50-59      + #>   [2]     chr2   150-159      + #>   [3]     chr2   250-259      + #>   ------- #>   seqinfo: 2 sequences from an unspecified genome; no seqlengths bait(ls) #> [1] \"Gene1\" \"Gene2\" \"Gene3\" mcols(ls) #> DataFrame with 3 rows and 1 column #>   anchor1.symbol #>      <character> #> 1          Gene1 #> 2          Gene2 #> 3          Gene3"},{"path":"https://gilberthan1011.github.io/linkSet/articles/linkSet.html","id":"setters","dir":"Articles","previous_headings":"Accessors","what":"Setters","title":"linkSet","text":"Wait… set wrong bait oe region? can also change easily:","code":"new_bait <- c(\"Gene40\",\"Gene41\",\"Gene42\") new_oe <- GRanges(   seqnames = c(\"chr1\", \"chr2\", \"chr3\"),   ranges = IRanges(start = c(5, 105, 205), width = 20),   symbol = c(\"Gene1\", \"Gene2\", \"Gene3\") ) bait(ls) <- new_bait oe(ls) <- new_oe ls #> linkSet object with 3 interactions and 2 metadata columns: #>              bait     seqnames_oe ranges_oe | anchor1.symbol      symbol #>       <character>           <Rle> <IRanges> |    <character> <character> #>   [1]      Gene40 ---        chr1      5-24 |          Gene1       Gene1 #>   [2]      Gene41 ---        chr2   105-124 |          Gene2       Gene2 #>   [3]      Gene42 ---        chr3   205-224 |          Gene3       Gene3 #>   ------- #>   regions: 6 ranges and 0 metadata columns #>   seqinfo: 3 sequences from an unspecified genome; no seqlengths"},{"path":"https://gilberthan1011.github.io/linkSet/articles/linkSet.html","id":"subsetting-and-concatenation","dir":"Articles","previous_headings":"","what":"Subsetting and concatenation","title":"linkSet","text":"LinkSet object can easily subsetted index. interested specific gene region, can subset linkSet object bait oe region. can also concatenate two linkSet objects.","code":"ls_sub <- ls[1:2] ls_sub #> linkSet object with 2 interactions and 2 metadata columns: #>              bait     seqnames_oe ranges_oe | anchor1.symbol      symbol #>       <character>           <Rle> <IRanges> |    <character> <character> #>   [1]      Gene40 ---        chr1      5-24 |          Gene1       Gene1 #>   [2]      Gene41 ---        chr2   105-124 |          Gene2       Gene2 #>   ------- #>   regions: 6 ranges and 0 metadata columns #>   seqinfo: 3 sequences from an unspecified genome; no seqlengths ls_sub_2 <- subsetBait(ls, \"Gene1\") ls_sub_2 #> linkSet object with 0 interactions and 2 metadata columns: #>           bait     seqnames_oe ranges_oe | anchor1.symbol      symbol #>    <character>           <Rle> <IRanges> |    <character> <character> #>   ------- #>   regions: 0 ranges and 0 metadata columns #>   seqinfo: 3 sequences from an unspecified genome; no seqlengths ls_sub_3 <- subsetBaitRegion(ls, \"chr1:100-200\") ls_sub_3 #> linkSet object with 1 interaction and 2 metadata columns: #>              bait     seqnames_oe ranges_oe | anchor1.symbol      symbol #>       <character>           <Rle> <IRanges> |    <character> <character> #>   [1]      Gene41 ---        chr2   105-124 |          Gene2       Gene2 #>   ------- #>   regions: 2 ranges and 0 metadata columns #>   seqinfo: 3 sequences from an unspecified genome; no seqlengths ls_concat <- c(ls, ls) ls_concat #> linkSet object with 6 interactions and 2 metadata columns: #>              bait     seqnames_oe ranges_oe | anchor1.symbol      symbol #>       <character>           <Rle> <IRanges> |    <character> <character> #>   [1]      Gene40 ---        chr1      5-24 |          Gene1       Gene1 #>   [2]      Gene41 ---        chr2   105-124 |          Gene2       Gene2 #>   [3]      Gene42 ---        chr3   205-224 |          Gene3       Gene3 #>   [4]      Gene40 ---        chr1      5-24 |          Gene1       Gene1 #>   [5]      Gene41 ---        chr2   105-124 |          Gene2       Gene2 #>   [6]      Gene42 ---        chr3   205-224 |          Gene3       Gene3 #>   ------- #>   regions: 6 ranges and 0 metadata columns #>   seqinfo: 3 sequences from an unspecified genome; no seqlengths"},{"path":"https://gilberthan1011.github.io/linkSet/articles/linkSet.html","id":"granges-method","dir":"Articles","previous_headings":"","what":"GRanges method","title":"linkSet","text":"features linkSet inherited GRanges, means can use functions GRanges manipulate linkSet object. wonderful things can change bait region oe region separately. reduce method allows linkSet objects collapsed across whole linkSet object. default, collapse duplicate interactions, count interactions store metadata columns. can also choose count interactions set countInteractions = FALSE.","code":"data(linkExample) linkExample #> linkSet object with 5 interactions and 1 metadata column: #>              bait     seqnames_oe ranges_oe | anchor1.symbol #>       <character>           <Rle> <IRanges> |    <character> #>   [1]       Gene1 ---        chr1     50-59 |          Gene1 #>   [2]       Gene1 ---        chr2   150-159 |          Gene1 #>   [3]       Gene2 ---        chr2   250-259 |          Gene2 #>   [4]       Gene3 ---        chr4   350-359 |          Gene3 #>   [5]       Gene3 ---        chr4   450-459 |          Gene3 #>   ------- #>   regions: 10 ranges and 0 metadata columns #>   seqinfo: 4 sequences from an unspecified genome; no seqlengths  ## resize the bait region resize_bait <- resizeRegions(linkExample, width = 75, fix = \"start\", region = \"bait\") resize_bait #> linkSet object with 5 interactions and 1 metadata column: #>              bait     seqnames_oe ranges_oe | anchor1.symbol #>       <character>           <Rle> <IRanges> |    <character> #>   [1]       Gene1 ---        chr1     50-59 |          Gene1 #>   [2]       Gene1 ---        chr2   150-159 |          Gene1 #>   [3]       Gene2 ---        chr2   250-259 |          Gene2 #>   [4]       Gene3 ---        chr4   350-359 |          Gene3 #>   [5]       Gene3 ---        chr4   450-459 |          Gene3 #>   ------- #>   regions: 10 ranges and 0 metadata columns #>   seqinfo: 4 sequences from an unspecified genome; no seqlengths  ## resize the oe region resize_oe <- resizeRegions(linkExample, width = 75, fix = \"start\", region = \"oe\") resize_oe #> linkSet object with 5 interactions and 1 metadata column: #>              bait     seqnames_oe ranges_oe | anchor1.symbol #>       <character>           <Rle> <IRanges> |    <character> #>   [1]       Gene1 ---        chr1    50-124 |          Gene1 #>   [2]       Gene1 ---        chr2   150-224 |          Gene1 #>   [3]       Gene2 ---        chr2   250-324 |          Gene2 #>   [4]       Gene3 ---        chr4   350-424 |          Gene3 #>   [5]       Gene3 ---        chr4   450-524 |          Gene3 #>   ------- #>   regions: 10 ranges and 0 metadata columns #>   seqinfo: 4 sequences from an unspecified genome; no seqlengths reduce_ls <- reduce(ls_concat) reduce_ls #> linkSet object with 3 interactions and 3 metadata columns: #>              bait     seqnames_oe ranges_oe | anchor1.symbol      symbol #>       <character>           <Rle> <IRanges> |    <character> <character> #>   [1]      Gene40 ---        chr1      5-24 |          Gene1       Gene1 #>   [2]      Gene41 ---        chr2   105-124 |          Gene2       Gene2 #>   [3]      Gene42 ---        chr3   205-224 |          Gene3       Gene3 #>           count #>       <integer> #>   [1]         2 #>   [2]         2 #>   [3]         2 #>   ------- #>   regions: 6 ranges and 0 metadata columns #>   seqinfo: 3 sequences from an unspecified genome; no seqlengths reduce_ls_2 <- linkSet::reduceRegions(ls_concat, countInteractions = FALSE) reduce_ls_2 #> linkSet object with 6 interactions and 2 metadata columns: #>              bait     seqnames_oe ranges_oe | anchor1.symbol      symbol #>       <character>           <Rle> <IRanges> |    <character> <character> #>   [1]      Gene40 ---        chr1      5-24 |          Gene1       Gene1 #>   [2]      Gene41 ---        chr2   105-124 |          Gene2       Gene2 #>   [3]      Gene42 ---        chr3   205-224 |          Gene3       Gene3 #>   [4]      Gene40 ---        chr1      5-24 |          Gene1       Gene1 #>   [5]      Gene41 ---        chr2   105-124 |          Gene2       Gene2 #>   [6]      Gene42 ---        chr3   205-224 |          Gene3       Gene3 #>   ------- #>   regions: 6 ranges and 0 metadata columns #>   seqinfo: 3 sequences from an unspecified genome; no seqlengths"},{"path":"https://gilberthan1011.github.io/linkSet/articles/linkSet.html","id":"diagnose","dir":"Articles","previous_headings":"","what":"Diagnose","title":"linkSet","text":"two metrics diagnose quality linkSet object: 1. intra/inter-chromosomal interactions. 2. distance bait oe region. diagnose function can help diagnose linkSet object.  annotated distance interaction type shown distance inter_type column. can remove intrachromosomal interactions :","code":"diagnoseLinkSet(linkExample) #> `stat_bin()` using `bins = 30`. Pick better value with `binwidth`. #> linkSet object with 5 interactions and 3 metadata columns: #>              bait     seqnames_oe ranges_oe | anchor1.symbol  inter_type #>       <character>           <Rle> <IRanges> |    <character> <character> #>   [1]       Gene1 ---        chr1     50-59 |          Gene1       inter #>   [2]       Gene1 ---        chr2   150-159 |          Gene1       intra #>   [3]       Gene2 ---        chr2   250-259 |          Gene2       inter #>   [4]       Gene3 ---        chr4   350-359 |          Gene3       intra #>   [5]       Gene3 ---        chr4   450-459 |          Gene3       inter #>        distance #>       <integer> #>   [1]        49 #>   [2]      <NA> #>   [3]        50 #>   [4]      <NA> #>   [5]        50 #>   ------- #>   regions: 10 ranges and 0 metadata columns #>   seqinfo: 4 sequences from an unspecified genome; no seqlengths ls_concat #> linkSet object with 6 interactions and 2 metadata columns: #>              bait     seqnames_oe ranges_oe | anchor1.symbol      symbol #>       <character>           <Rle> <IRanges> |    <character> <character> #>   [1]      Gene40 ---        chr1      5-24 |          Gene1       Gene1 #>   [2]      Gene41 ---        chr2   105-124 |          Gene2       Gene2 #>   [3]      Gene42 ---        chr3   205-224 |          Gene3       Gene3 #>   [4]      Gene40 ---        chr1      5-24 |          Gene1       Gene1 #>   [5]      Gene41 ---        chr2   105-124 |          Gene2       Gene2 #>   [6]      Gene42 ---        chr3   205-224 |          Gene3       Gene3 #>   ------- #>   regions: 6 ranges and 0 metadata columns #>   seqinfo: 3 sequences from an unspecified genome; no seqlengths ls_concat <- filterLinks(ls_concat, filter_intra = TRUE) ls_concat #> linkSet object with 2 interactions and 4 metadata columns: #>              bait     seqnames_oe ranges_oe | anchor1.symbol      symbol #>       <character>           <Rle> <IRanges> |    <character> <character> #>   [1]      Gene40 ---        chr1      5-24 |          Gene1       Gene1 #>   [2]      Gene40 ---        chr1      5-24 |          Gene1       Gene1 #>        inter_type  distance #>       <character> <integer> #>   [1]       inter         9 #>   [2]       inter         9 #>   ------- #>   regions: 2 ranges and 0 metadata columns #>   seqinfo: 3 sequences from an unspecified genome; no seqlengths"},{"path":"https://gilberthan1011.github.io/linkSet/articles/linkSet.html","id":"annotations","dir":"Articles","previous_headings":"","what":"Annotations","title":"linkSet","text":"might common bait name, don’t exact bait region. annotation function can help annotate bait region gene annotation.","code":"gr1 <- GRanges(seqnames = c(\"chr1\", \"chr3\", \"chr3\"),                ranges = IRanges(start = c(1000, 2000, 3000), width = 100),                strand = \"+\", symbol = c(\"BRCA1\", \"TP53\", \"NONEXISTENT\")) gr2 <- GRanges(seqnames = c(\"chr1\", \"chr2\", \"chr3\"),                ranges = IRanges(start = c(5000, 6000, 7000), width = 100),                strand = \"+\") ls <- linkSet(gr1, gr2, specificCol = \"symbol\")  # Test annotatePromoter annotated_ls <- suppressWarnings(annotatePromoter(ls, genome = \"hg38\", upstream = 500,overwrite = T)) annotated_ls #> linkSet object with 3 interactions and 1 metadata column: #>              bait     seqnames_oe ranges_oe | anchor1.symbol #>       <character>           <Rle> <IRanges> |    <character> #>   [1]       BRCA1 ---        chr1 5000-5099 |          BRCA1 #>   [2]        TP53 ---        chr2 6000-6099 |           TP53 #>   [3] NONEXISTENT ---        chr3 7000-7099 |    NONEXISTENT #>   ------- #>   regions: 6 ranges and 0 metadata columns #>   seqinfo: 3 sequences from an unspecified genome; no seqlengths"},{"path":"https://gilberthan1011.github.io/linkSet/articles/linkSet.html","id":"statistical-analysis","dir":"Articles","previous_headings":"","what":"Statistical analysis","title":"linkSet","text":"Functional enhancers usually regulate multiple genes, can use cross gene analysis identify cross gene enhancers. linkSet also implement CHiCANE analysis, can identifying high-confidence interactions. CHiCANE needs count interactibility dist running statistical test.","code":"annotated_ls <- crossGeneEnhancer(annotated_ls) annotated_ls <- orderLinks(annotated_ls,by = \"crossFreq\",decreasing = T) annotated_ls #> linkSet object with 3 interactions and 2 metadata columns: #>              bait     seqnames_oe ranges_oe | anchor1.symbol crossFreq #>       <character>           <Rle> <IRanges> |    <character> <integer> #>   [1]       BRCA1 ---        chr1 5000-5099 |          BRCA1         1 #>   [2]        TP53 ---        chr2 6000-6099 |           TP53         1 #>   [3] NONEXISTENT ---        chr3 7000-7099 |    NONEXISTENT         1 #>   ------- #>   regions: 6 ranges and 0 metadata columns #>   seqinfo: 3 sequences from an unspecified genome; no seqlengths annotated_ls <- countInteractibility(annotated_ls) annotated_ls <- linkSet::pairdist(annotated_ls) annotated_ls <- run_chicane(annotated_ls) #> [1] \"Not found column 'bait.id', adding bait name as default.\" #> [1] \"Not found column 'bait.to.bait' Set 'FALSE' as default.\" #> [1] \"fitting model....\" #>  #> Attaching package: 'data.table' #> The following object is masked from 'package:SummarizedExperiment': #>  #>     shift #> The following object is masked from 'package:GenomicRanges': #>  #>     shift #> The following object is masked from 'package:IRanges': #>  #>     shift #> The following objects are masked from 'package:S4Vectors': #>  #>     first, second annotated_ls #> linkSet object with 3 interactions and 12 metadata columns: #>              bait     seqnames_oe ranges_oe | anchor1.symbol crossFreq #>       <character>           <Rle> <IRanges> |    <character> <integer> #>   [1]       BRCA1 ---        chr1 5000-5099 |          BRCA1         1 #>   [2]        TP53 ---        chr2 6000-6099 |           TP53         1 #>   [3] NONEXISTENT ---        chr3 7000-7099 |    NONEXISTENT         1 #>        inter_type     count bait.trans.count target.trans.count  distance #>       <character> <integer>        <numeric>          <numeric> <integer> #>   [1]       inter         1                0                  0      4000 #>   [2]       intra         1                1                  1      <NA> #>   [3]       inter         1                0                  0      4000 #>           bait.id bait.to.bait  expected   p.value   q.value #>       <character>    <logical> <numeric> <numeric> <numeric> #>   [1]       BRCA1        FALSE         1  0.632121  0.632121 #>   [2]        TP53        FALSE         1  0.632121  0.632121 #>   [3] NONEXISTENT        FALSE         1  0.632121  0.632121 #>   ------- #>   regions: 6 ranges and 0 metadata columns #>   seqinfo: 3 sequences from an unspecified genome; no seqlengths"},{"path":"https://gilberthan1011.github.io/linkSet/articles/linkSet.html","id":"visualization","dir":"Articles","previous_headings":"","what":"Visualization","title":"linkSet","text":"plot_genomic_ranges function, can visualize link bait oe region. can choose oe-centric views visualize functional enhancer regulate multiple genes.  can adjust range views.","code":"plot_genomic_ranges(linkExample,extend.base = 10) #> Warning in plot_genomic_ranges(linkExample, extend.base = 10): score.col not #> found, using count as default plot_genomic_ranges(linkExample,extend.base = 10,x.range = c(50,200)) #> Warning in plot_genomic_ranges(linkExample, extend.base = 10, x.range = c(50, : #> score.col not found, using count as default"},{"path":"https://gilberthan1011.github.io/linkSet/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Gilbert Han. Author, maintainer.","code":""},{"path":"https://gilberthan1011.github.io/linkSet/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Han G (2024). linkSet: Base Classes Storing Genomic Link Data. R package version 0.99.0, https://gilberthan1011.github.io/linkSet, https://gilberthan1011.github.io/linkSet/, https://github.com/GilbertHan1011/linkSet.","code":"@Manual{,   title = {linkSet: Base Classes for Storing Genomic Link Data},   author = {Gilbert Han},   year = {2024},   note = {R package version 0.99.0, https://gilberthan1011.github.io/linkSet, https://gilberthan1011.github.io/linkSet/},   url = {https://github.com/GilbertHan1011/linkSet}, }"},{"path":"https://gilberthan1011.github.io/linkSet/index.html","id":"linkset-v0001","dir":"","previous_headings":"","what":"Base Classes for Storing Genomic Link Data","title":"Base Classes for Storing Genomic Link Data","text":"goal linkSet provide tools working gene-enhancer interactions, commonly seen HiC, PC-HiC, single-cell ATAC-seq data analysis.","code":""},{"path":"https://gilberthan1011.github.io/linkSet/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Base Classes for Storing Genomic Link Data","text":"linkSet currently available Bioconductor. can install GitHub :","code":"if (!requireNamespace(\"remotes\", quietly = TRUE)) {   install.packages(\"remotes\") } remotes::install_github(\"GilbertHan1011/linkSet\")"},{"path":"https://gilberthan1011.github.io/linkSet/index.html","id":"example","dir":"","previous_headings":"","what":"Example","title":"Base Classes for Storing Genomic Link Data","text":"LinkSet can converted multiple data structures, like GRanges, GInteractions, dataframes.","code":"suppressMessages(library(linkSet)) ## basic example code library(GenomicRanges) gr1 <- GRanges(seqnames = c(\"chr1\", \"chr1\", \"chr2\"),               ranges = IRanges(start = c(1, 100, 200), width = 10),               strand = \"+\", symbol = c(\"Gene1\", \"Gene2\", \"Gene3\")) gr2 <- GRanges(seqnames = c(\"chr1\", \"chr2\", \"chr2\"),               ranges = IRanges(start = c(50, 150, 250), width = 10),               strand = \"+\") ## construct linkSet ls <- linkSet(gr1, gr2, specificCol = \"symbol\") ls #> linkSet object with 3 interactions and 1 metadata column: #>              bait     seqnames_oe ranges_oe | anchor1.symbol #>       <character>           <Rle> <IRanges> |    <character> #>   [1]       Gene1 ---        chr1     50-59 |          Gene1 #>   [2]       Gene2 ---        chr2   150-159 |          Gene2 #>   [3]       Gene3 ---        chr2   250-259 |          Gene3 #>   ------- #>   regions: 6 ranges and 0 metadata columns #>   seqinfo: 2 sequences from an unspecified genome; no seqlengths"},{"path":"https://gilberthan1011.github.io/linkSet/reference/Convert.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert different object types to linkSet — Convert","title":"Convert different object types to linkSet — Convert","text":"Convert data formats linkSet. Currently supported: GInteractions, data.frame.","code":""},{"path":"https://gilberthan1011.github.io/linkSet/reference/Convert.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert different object types to linkSet — Convert","text":"","code":"Convert(x, ...)  # S4 method for class 'GInteractions' Convert(x, baitCol = NULL, ...)  # S4 method for class 'data.frame' Convert(x, source = \"data.frame\", baitCol = \"gene\", oeCol = \"peak\", ...)  # S4 method for class 'Pairs' Convert(x, baitCol = NULL, ...)  # S4 method for class 'ANY' Convert(x, ...)  readvalidPairs(file)"},{"path":"https://gilberthan1011.github.io/linkSet/reference/Convert.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert different object types to linkSet — Convert","text":"x object unsupported class ... Additional arguments (used) baitCol character string specifying column use bait naming file character string specifying path validPairs file specificCol character string specifying column use bait naming","code":""},{"path":"https://gilberthan1011.github.io/linkSet/reference/Convert.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert different object types to linkSet — Convert","text":"linkSet object linkSet object linkSet object linkSet object Nothing, throws error GInteractions object","code":""},{"path":"https://gilberthan1011.github.io/linkSet/reference/Convert.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert different object types to linkSet — Convert","text":"","code":"library(InteractionSet) #> Loading required package: SummarizedExperiment #> Loading required package: MatrixGenerics #> Loading required package: matrixStats #>  #> Attaching package: ‘MatrixGenerics’ #> The following objects are masked from ‘package:matrixStats’: #>  #>     colAlls, colAnyNAs, colAnys, colAvgsPerRowSet, colCollapse, #>     colCounts, colCummaxs, colCummins, colCumprods, colCumsums, #>     colDiffs, colIQRDiffs, colIQRs, colLogSumExps, colMadDiffs, #>     colMads, colMaxs, colMeans2, colMedians, colMins, colOrderStats, #>     colProds, colQuantiles, colRanges, colRanks, colSdDiffs, colSds, #>     colSums2, colTabulates, colVarDiffs, colVars, colWeightedMads, #>     colWeightedMeans, colWeightedMedians, colWeightedSds, #>     colWeightedVars, rowAlls, rowAnyNAs, rowAnys, rowAvgsPerColSet, #>     rowCollapse, rowCounts, rowCummaxs, rowCummins, rowCumprods, #>     rowCumsums, rowDiffs, rowIQRDiffs, rowIQRs, rowLogSumExps, #>     rowMadDiffs, rowMads, rowMaxs, rowMeans2, rowMedians, rowMins, #>     rowOrderStats, rowProds, rowQuantiles, rowRanges, rowRanks, #>     rowSdDiffs, rowSds, rowSums2, rowTabulates, rowVarDiffs, rowVars, #>     rowWeightedMads, rowWeightedMeans, rowWeightedMedians, #>     rowWeightedSds, rowWeightedVars #> Loading required package: Biobase #> Welcome to Bioconductor #>  #>     Vignettes contain introductory material; view with #>     'browseVignettes()'. To cite Bioconductor, see #>     'citation(\"Biobase\")', and for packages 'citation(\"pkgname\")'. #>  #> Attaching package: ‘Biobase’ #> The following object is masked from ‘package:MatrixGenerics’: #>  #>     rowMedians #> The following objects are masked from ‘package:matrixStats’: #>  #>     anyMissing, rowMedians #>  #> Attaching package: ‘InteractionSet’ #> The following objects are masked from ‘package:linkSet’: #>  #>     anchorIds, anchors, pairdist, reduceRegions, regions, regions<- gi <- GInteractions(anchor1 = c(1, 2), anchor2 = c(3, 4), regions = GRanges(seqnames = c(\"chr1\", \"chr1\", \"chr2\", \"chr2\"), ranges = IRanges(start = c(100, 200, 300, 400), width = 50))) ls <- Convert(gi) ls #> linkSet object with 2 interactions and 0 metadata columns: #>               bait     seqnames_oe ranges_oe #>        <character>           <Rle> <IRanges> #>   [1] chr1:100-149 ---        chr2   300-349 #>   [2] chr1:200-249 ---        chr2   400-449 #>   ------- #>   regions: 4 ranges and 0 metadata columns #>   seqinfo: 2 sequences from an unspecified genome; no seqlengths  df <- data.frame(   gene = c(\"gene1\", \"gene2\"),   peak = c(\"chr1:1000-2000\", \"chr2:1500-2500\"),   score = c(5.5, 6.0) ) ls <- Convert(df, source = \"data.frame\", baitCol = \"gene\", oeCol = \"peak\") ls #> linkSet object with 2 interactions and 1 metadata column: #>              bait     seqnames_oe ranges_oe |     score #>       <character>           <Rle> <IRanges> | <numeric> #>   [1]       gene1 ---        chr1  999-2000 |       5.5 #>   [2]       gene2 ---        chr2 1499-2500 |       6.0 #>   ------- #>   regions: 2 ranges and 0 metadata columns #>   seqinfo: 2 sequences from an unspecified genome; no seqlengths   gr1 <- GRanges(seqnames = c(\"chr1\", \"chr2\"),                 ranges = IRanges(start = c(1000, 2000), width = 100),                 strand = \"+\", symbol = c(\"BRCA1\", \"TP53\"))   gr2 <- GRanges(seqnames = c(\"chr1\", \"chr2\"),                 ranges = IRanges(start = c(5000, 6000), width = 100),                 strand = \"+\")   pairs <- Pairs(first = gr1, second = gr2, elementMetadata = DataFrame(symbol = c(\"BRCA1\", \"TP53\")))   ls <- Convert(pairs, baitCol = \"symbol\") #> Error: unable to find an inherited method for function ‘linkSet’ for signature ‘anchor1 = \"GRanges\", anchor2 = \"GRanges\", specificCol = \"NULL\"’   ls #> linkSet object with 2 interactions and 1 metadata column: #>              bait     seqnames_oe ranges_oe |     score #>       <character>           <Rle> <IRanges> | <numeric> #>   [1]       gene1 ---        chr1  999-2000 |       5.5 #>   [2]       gene2 ---        chr2 1499-2500 |       6.0 #>   ------- #>   regions: 2 ranges and 0 metadata columns #>   seqinfo: 2 sequences from an unspecified genome; no seqlengths"},{"path":"https://gilberthan1011.github.io/linkSet/reference/annotateInter-linkSet-method.html","id":null,"dir":"Reference","previous_headings":"","what":"Annotate linkSet with inter/intra chromosome interactions — annotateInter,linkSet-method","title":"Annotate linkSet with inter/intra chromosome interactions — annotateInter,linkSet-method","text":"Annotate linkSet inter/intra chromosome interactions","code":""},{"path":"https://gilberthan1011.github.io/linkSet/reference/annotateInter-linkSet-method.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Annotate linkSet with inter/intra chromosome interactions — annotateInter,linkSet-method","text":"","code":"# S4 method for class 'linkSet' annotateInter(x)"},{"path":"https://gilberthan1011.github.io/linkSet/reference/annotateInter-linkSet-method.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Annotate linkSet with inter/intra chromosome interactions — annotateInter,linkSet-method","text":"x linkSet object","code":""},{"path":"https://gilberthan1011.github.io/linkSet/reference/annotateInter-linkSet-method.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Annotate linkSet with inter/intra chromosome interactions — annotateInter,linkSet-method","text":"linkSet object additional metadata column 'inter_type'","code":""},{"path":"https://gilberthan1011.github.io/linkSet/reference/annotateInter-linkSet-method.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Annotate linkSet with inter/intra chromosome interactions — annotateInter,linkSet-method","text":"","code":"data(linkExample) linkExample <- annotateInter(linkExample)"},{"path":"https://gilberthan1011.github.io/linkSet/reference/annotatePromoter-linkSet-method.html","id":null,"dir":"Reference","previous_headings":"","what":"Annotate the link set with txDb. Give a gene list, and return a — annotatePromoter,linkSet-method","title":"Annotate the link set with txDb. Give a gene list, and return a — annotatePromoter,linkSet-method","text":"Annotate link set txDb. Give gene list, return ","code":""},{"path":"https://gilberthan1011.github.io/linkSet/reference/annotatePromoter-linkSet-method.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Annotate the link set with txDb. Give a gene list, and return a — annotatePromoter,linkSet-method","text":"","code":"# S4 method for class 'linkSet' annotatePromoter(   x,   genome = \"hg38\",   keyType = \"symbol\",   upstream = 5000,   overwrite = FALSE )"},{"path":"https://gilberthan1011.github.io/linkSet/reference/annotatePromoter-linkSet-method.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Annotate the link set with txDb. Give a gene list, and return a — annotatePromoter,linkSet-method","text":"x linkSet genome genome want annotate keyType key type. can check AnnotationDbi::keytypes upstream upstream base gene overwrite Whether overwrite regionsBait already exists","code":""},{"path":"https://gilberthan1011.github.io/linkSet/reference/annotatePromoter-linkSet-method.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Annotate the link set with txDb. Give a gene list, and return a — annotatePromoter,linkSet-method","text":"linkSet object","code":""},{"path":"https://gilberthan1011.github.io/linkSet/reference/annotatePromoter-linkSet-method.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Annotate the link set with txDb. Give a gene list, and return a — annotatePromoter,linkSet-method","text":"","code":"gr1 <- GRanges(seqnames = c(\"chr1\", \"chr2\", \"chr3\"),                 ranges = IRanges(start = c(1000, 2000, 3000), width = 100),                 strand = \"+\", symbol = c(\"BRCA1\", \"TP53\", \"NONEXISTENT\"))   gr2 <- GRanges(seqnames = c(\"chr1\", \"chr2\", \"chr3\"),                 ranges = IRanges(start = c(5000, 6000, 7000), width = 100),                 strand = \"+\")   ls <- linkSet(gr1, gr2, specificCol = \"symbol\")    # Test annotatePromoter   annotated_ls <- suppressWarnings(annotatePromoter(ls, genome = \"hg38\", upstream = 500,overwrite = TRUE))"},{"path":"https://gilberthan1011.github.io/linkSet/reference/as.GInteractions-linkSet-method.html","id":null,"dir":"Reference","previous_headings":"","what":"export linkset to GInteractions — as.GInteractions,linkSet-method","title":"export linkset to GInteractions — as.GInteractions,linkSet-method","text":"export linkset GInteractions","code":""},{"path":"https://gilberthan1011.github.io/linkSet/reference/as.GInteractions-linkSet-method.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"export linkset to GInteractions — as.GInteractions,linkSet-method","text":"","code":"# S4 method for class 'linkSet' as.GInteractions(x)"},{"path":"https://gilberthan1011.github.io/linkSet/reference/as.GInteractions-linkSet-method.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"export linkset to GInteractions — as.GInteractions,linkSet-method","text":"x linkset object","code":""},{"path":"https://gilberthan1011.github.io/linkSet/reference/as.GInteractions-linkSet-method.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"export linkset to GInteractions — as.GInteractions,linkSet-method","text":"GInteractions object","code":""},{"path":"https://gilberthan1011.github.io/linkSet/reference/as.GInteractions-linkSet-method.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"export linkset to GInteractions — as.GInteractions,linkSet-method","text":"","code":"data(linkExample) gi <- as.GInteractions(linkExample) gi #> GInteractions object with 5 interactions and 1 metadata column: #>       seqnames1   ranges1     seqnames2   ranges2 | anchor1.symbol #>           <Rle> <IRanges>         <Rle> <IRanges> |    <character> #>   [1]      chr1      1-10 ---      chr1     50-59 |          Gene1 #>   [2]      chr1   100-109 ---      chr2   150-159 |          Gene1 #>   [3]      chr2   200-209 ---      chr2   250-259 |          Gene2 #>   [4]      chr3   300-309 ---      chr4   350-359 |          Gene3 #>   [5]      chr4   400-409 ---      chr4   450-459 |          Gene3 #>   ------- #>   regions: 10 ranges and 0 metadata columns #>   seqinfo: 4 sequences from an unspecified genome; no seqlengths"},{"path":"https://gilberthan1011.github.io/linkSet/reference/as.data.frame-linkSet-method.html","id":null,"dir":"Reference","previous_headings":"","what":"coerce linkSet to DataFrame — as.data.frame,linkSet-method","title":"coerce linkSet to DataFrame — as.data.frame,linkSet-method","text":"coerce linkSet DataFrame","code":""},{"path":"https://gilberthan1011.github.io/linkSet/reference/as.data.frame-linkSet-method.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"coerce linkSet to DataFrame — as.data.frame,linkSet-method","text":"","code":"# S4 method for class 'linkSet' as.data.frame(x)"},{"path":"https://gilberthan1011.github.io/linkSet/reference/as.data.frame-linkSet-method.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"coerce linkSet to DataFrame — as.data.frame,linkSet-method","text":"x linkSet object","code":""},{"path":"https://gilberthan1011.github.io/linkSet/reference/as.data.frame-linkSet-method.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"coerce linkSet to DataFrame — as.data.frame,linkSet-method","text":"DataFrame object","code":""},{"path":"https://gilberthan1011.github.io/linkSet/reference/as.data.frame-linkSet-method.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"coerce linkSet to DataFrame — as.data.frame,linkSet-method","text":"","code":"# Create a linkSet object data(linkExample) # Convert linkSet to DataFrame df <- as.data.frame(linkExample) print(df) #>    bait    bait_region      oe_region anchor1.symbol #> 1 Gene1    chr1:1-10:+   chr1:50-59:+          Gene1 #> 2 Gene1 chr1:100-109:+ chr2:150-159:+          Gene1 #> 3 Gene2 chr2:200-209:+ chr2:250-259:+          Gene2 #> 4 Gene3 chr3:300-309:+ chr4:350-359:+          Gene3 #> 5 Gene3 chr4:400-409:+ chr4:450-459:+          Gene3"},{"path":"https://gilberthan1011.github.io/linkSet/reference/baitGInteractions-GInteractions-GRanges-GRanges-method.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert GInteractions with bait range and oe ranges to linkSet — baitGInteractions,GInteractions,GRanges,GRanges-method","title":"Convert GInteractions with bait range and oe ranges to linkSet — baitGInteractions,GInteractions,GRanges,GRanges-method","text":"Convert GInteractions bait range oe ranges linkSet","code":""},{"path":"https://gilberthan1011.github.io/linkSet/reference/baitGInteractions-GInteractions-GRanges-GRanges-method.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert GInteractions with bait range and oe ranges to linkSet — baitGInteractions,GInteractions,GRanges,GRanges-method","text":"","code":"# S4 method for class 'GInteractions,GRanges,GRanges' baitGInteractions(x, geneGr, peakGr, geneSymbol = NULL)"},{"path":"https://gilberthan1011.github.io/linkSet/reference/baitGInteractions-GInteractions-GRanges-GRanges-method.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert GInteractions with bait range and oe ranges to linkSet — baitGInteractions,GInteractions,GRanges,GRanges-method","text":"geneGr GRanges object representing genes peakGr GRanges object representing peaks geneSymbol character vector length geneGr column name mcols(geneGr) gene symbols gi GInteractions object","code":""},{"path":"https://gilberthan1011.github.io/linkSet/reference/baitGInteractions-GInteractions-GRanges-GRanges-method.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert GInteractions with bait range and oe ranges to linkSet — baitGInteractions,GInteractions,GRanges,GRanges-method","text":"linkSet object","code":""},{"path":"https://gilberthan1011.github.io/linkSet/reference/baitGInteractions-GInteractions-GRanges-GRanges-method.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert GInteractions with bait range and oe ranges to linkSet — baitGInteractions,GInteractions,GRanges,GRanges-method","text":"","code":"# Example usage: library(GenomicRanges) library(InteractionSet)  # Create example GRanges objects for genes and peaks geneGr <- GRanges(seqnames = \"chr1\", ranges = IRanges(start = c(100, 200), end = c(150, 250)), geneSymbol = c(\"Gene1\", \"Gene2\")) peakGr <- GRanges(seqnames = \"chr1\", ranges = IRanges(start = c(300, 400), end = c(350, 450)))  # Create example GInteractions object gi <- GInteractions(anchor1 = geneGr, anchor2 = peakGr)  # Convert to linkSet linkSetObj <- baitGInteractions(gi, geneGr, peakGr, geneSymbol = \"geneSymbol\")  # Print the linkSet object print(linkSetObj) #> linkSet object with 2 interactions and 2 metadata columns: #>              bait     seqnames_oe ranges_oe | anchor1.geneSymbol #>       <character>           <Rle> <IRanges> |        <character> #>   [1]       Gene1 ---        chr1   300-350 |              Gene1 #>   [2]       Gene2 ---        chr1   400-450 |              Gene2 #>       mcols(gi)[out$query, ] #>                  <character> #>   [1]                  Gene1 #>   [2]                  Gene2 #>   ------- #>   regions: 4 ranges and 0 metadata columns #>   seqinfo: 1 sequence from an unspecified genome; no seqlengths"},{"path":"https://gilberthan1011.github.io/linkSet/reference/chicane.html","id":null,"dir":"Reference","previous_headings":"","what":"run_chicane — run_chicane,linkSet-method","title":"run_chicane — run_chicane,linkSet-method","text":"function adapts chicane function ChICANE package work linkSet object format. Run full method detecting significant interactions capture Hi-C experiments, starting either linkSet object preprocessed data prepare.data Verify linkSet object expected format. Throws error object fit requirements. Filter low high-interacting restriction fragments based total number trans counts   Fit negative binomial model obtain p-values interactions.   Meant internal use . Split interaction data subsets large enough chicane model fit (see Details), based distance. step allows distance term model fit piecewise linear fashion.   happens variance negative binomial exceed mean (.e. overdispersion). cases, Poisson distribution may suitable alternative.   glm.nb work responses constant, two unique values covariate perfect predictor. Perform multiple testing correction p-values interaction test. default, multiple testing correction applied per bait. change global multiple testing correction, set bait.level = FALSE. Split data frame prespecified number bins, using split cut. Unlike default R functions, fail asked split data single bin. Verify interaction.data object expected format. Throws error object fit requirements. Fit GLM according specified distribution. needs done separately glm order include negative binomial truncated distributions options.   throw error Check warning object iteration limit reached warning glm.nb   happens variance negative binomial exceed mean (.e. overdispersion). cases, Poisson distribution may suitable alternative.","code":"Internal function for fitting model within a tryCatch loop, handling numerical errors gracefully. Run model fitting procedure for either bait-to-bait or other interactions. Check if an error matches the error raised by \\code{glm.nb} due to an inflated theta estimate. Check if chicane model can be fit on a given dataset. Check that the model fit contains the same number of rows as the data used to fit it, Check if a warning matches the square root warning raised by \\code{glm.nb} due to an inflated theta estimate."},{"path":"https://gilberthan1011.github.io/linkSet/reference/chicane.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"run_chicane — run_chicane,linkSet-method","text":"","code":"# S4 method for class 'linkSet' run_chicane(   linkSet,   replicate.merging.method = \"sum\",   distribution = \"negative-binomial\",   include.zeros = \"none\",   bait.filters = c(0, 1),   target.filters = c(0, 1),   distance.bins = NULL,   multiple.testing.correction = c(\"bait-level\", \"global\"),   adjustment.terms = NULL,   remove.adjacent = FALSE,   temp.directory = NULL,   keep.files = FALSE,   maxit = 100,   epsilon = 1e-08,   cores = 1,   trace = FALSE,   verbose = FALSE,   interim.data.dir = NULL )  .verify.linkSet(linkSet)  .filter.fragments(   linkSet,   bait.filters = c(0, 1),   target.filters = c(0, 1),   verbose = FALSE )  .model.try.catch(   model.formula,   data,   distribution = \"negative-binomial\",   maxit = 100,   epsilon = 1e-08,   init.theta = NULL,   start = NULL,   trace = FALSE,   verbose = FALSE )  fit.model(   linkSet,   distance.bins = NULL,   distribution = \"negative-binomial\",   adjustment.terms = NULL,   maxit = 100,   epsilon = 1e-08,   cores = 1,   trace = FALSE,   verbose = FALSE,   interim.data.dir = NULL )  run.model.fitting(   interaction.data,   distance.bins = NULL,   distribution = \"negative-binomial\",   bait.to.bait = FALSE,   adjustment.terms = NULL,   maxit = 100,   epsilon = 1e-08,   cores = 1,   trace = FALSE,   verbose = FALSE,   interim.data.dir = NULL )  .distance.split(   interaction.data,   distance.bins = NULL,   min.rows.bin = 50,   verbose = FALSE )  .is.glm.nb.theta.error(e)  .check.model.numerical.fit(interaction.data)  multiple.testing.correct(interaction.data, bait.level = TRUE)  .smart.split(dat, bins)  .verify.interaction.data(interaction.data)  fit.glm(   formula,   data,   distribution = c(\"negative-binomial\", \"poisson\", \"truncated-poisson\",     \"truncated-negative-binomial\"),   start = NULL,   init.theta = NULL,   maxit = 100,   epsilon = 1e-08,   trace = FALSE )  .model.rows.sanity.check(model.data, model)  .is.glm.nb.maxiter.warning(w)  .is.glm.nb.theta.warning(w)"},{"path":"https://gilberthan1011.github.io/linkSet/reference/chicane.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"run_chicane — run_chicane,linkSet-method","text":"linkSet LinkSet object containing interactions replicate.merging.method Method used merging replicates, applicable distribution Name distribution counts. Options 'negative-binomial', 'poisson', 'truncated-poisson', 'truncated-negative-binomial' bait.filters Vector length two, first element corresponds lower-end filter second upper-end filter. global multiple testing correction performed, altering bait filtering settings may affect number significant results. target.filters Vector length two, giving lower higher filter, respectively. Changing filtering setting may affect multiple testing correction altering number tests performed. distance.bins Number distance bins desired. NULL, number chosen ensure negative binomial can fit bins. multiple.testing.correction String specifying multiple testing correction performed, bait globally. adjustment.terms Characted vector extra terms adjust model fit maxit Maximum number IWLS iterations fitting model (passed glm.control) epsilon Positive convergence tolerance Poisson negative binomial models. Passed glm.control cores Integer value specifying many cores use fit model cis-interactions. trace Logical indicating output produced model fitting procedure. Passed glm.control gamlss.control verbose Logical indicating whether print progress reports interim.data.dir Path directory store intermediate QC data plots. model.formula formula data Data frame containing variables specified formula init.theta Initial value theta fitting negative binomial distribution start Starting values model coefficients interaction.data Object verified. bait..bait Logical indicating model fit bait--bait min.rows.bin minimum number expected rows distance bin. Ignored distance.bins set e Error object bait.level Logical indicating whether multiple testing correction performed per bait. dat Data frame data table split bins Number bins split data formula Formula specifying model interest model.data Data used fit model model Resulting negative binomial model object w Warning object","code":""},{"path":"https://gilberthan1011.github.io/linkSet/reference/chicane.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"run_chicane — run_chicane,linkSet-method","text":"linkSet object additional columns: expected expected number reads linking two fragments fitted model p.value P-value test observed number reads significantly exceeding expected count q.value FDR-corrected p-value None LinkSet object containing fragments passed filters List elements model model object. Set NULL model fit. expected.values vector expected values element original data, vector NAs model fit p.values vector p-values test significantly higher response expected, vector NAs model fit Interactions data expected number interactions p-values added. Interactions data expeceted number interactions p-values added. List element corresponds specified distance bin, final one corresponding trans-interactions (present) Boolean indicating error matches boolean indicating model can fit Original data table new column q.value FDR-corrected p-value List bins elements. element corresponds one portion data None List elements model model object expected.values vector expected values element original data p.values vector p-values test significantly higher response expected None Logical indicating warning matches iteration limit reached warning Boolean indicating warning matches","code":""},{"path":"https://gilberthan1011.github.io/linkSet/reference/chicane.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"run_chicane — run_chicane,linkSet-method","text":"Fitting glm.nb fails lack overdispersion data. chicane method contains logic catch errors instead fit Poisson model. However, avoid happening necessary, attempt made avoid distance splits clearly result numerical errors. includes bins data count rows, covariate perfect predictor count.","code":"Fit a negative binomial model for obtaining p-value for interactions. The data is first sorted by distance, and models are fit separately in each quantile of the distance-sorted data."},{"path":"https://gilberthan1011.github.io/linkSet/reference/chicane.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"run_chicane — run_chicane,linkSet-method","text":"","code":"# Example usage of run_chicane function gr1 <- GRanges(seqnames = c(\"chr1\", \"chr2\", \"chr3\"),                ranges = IRanges(start = c(1000, 2000, 3000), width = 100),                strand = \"+\", symbol = c(\"BRCA1\", \"TP53\", \"NONEXISTENT\")) gr2 <- GRanges(seqnames = c(\"chr1\", \"chr2\", \"chr3\"),                ranges = IRanges(start = c(5000, 6000, 7000), width = 100),                strand = \"+\") ls <- linkSet(gr1, gr2, specificCol = \"symbol\") annotated_ls <- suppressWarnings(annotatePromoter(ls, genome = \"hg38\", upstream = 500,overwrite = TRUE)) annotated_ls <- countInteractibility(annotated_ls) #> Warning: No intra-chromosomal interactions found. Please run this function before you filterLinks. annotated_ls <- linkSet::pairdist(annotated_ls) # Run run_chicane function result_ls <- run_chicane(annotated_ls, replicate.merging.method = 'sum',                           bait.filters = c(0, 1), target.filters = c(0, 1),                           distance.bins = NULL, multiple.testing.correction = 'bait-level',                           verbose = TRUE) #> Error in .verify.linkSet(linkSet): linkSet must contain the columns: #>  distance count bait.trans.count target.trans.count  #> Please check wether you have run the function countInteractibility, pairdist and countInteractions before. result_ls   #> Error: object 'result_ls' not found"},{"path":"https://gilberthan1011.github.io/linkSet/reference/clean_unused_regions-linkSet-method.html","id":null,"dir":"Reference","previous_headings":"","what":"clean unused regions — clean_unused_regions,linkSet-method","title":"clean unused regions — clean_unused_regions,linkSet-method","text":"clean unused regions","code":""},{"path":"https://gilberthan1011.github.io/linkSet/reference/clean_unused_regions-linkSet-method.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"clean unused regions — clean_unused_regions,linkSet-method","text":"","code":"# S4 method for class 'linkSet' clean_unused_regions(x)"},{"path":"https://gilberthan1011.github.io/linkSet/reference/clean_unused_regions-linkSet-method.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"clean unused regions — clean_unused_regions,linkSet-method","text":"","code":"data(linkExample) linkExample <- clean_unused_regions(linkExample)"},{"path":"https://gilberthan1011.github.io/linkSet/reference/countInteractibility-linkSet-method.html","id":null,"dir":"Reference","previous_headings":"","what":"Count bait and oe — countInteractibility,linkSet-method","title":"Count bait and oe — countInteractibility,linkSet-method","text":"function calculate number trans interactions bait oe. word \"interactibility\" can refer https://doi.org/10.1038%2Fnature11279.","code":""},{"path":"https://gilberthan1011.github.io/linkSet/reference/countInteractibility-linkSet-method.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Count bait and oe — countInteractibility,linkSet-method","text":"","code":"# S4 method for class 'linkSet' countInteractibility(x, baitRegions = TRUE)"},{"path":"https://gilberthan1011.github.io/linkSet/reference/countInteractibility-linkSet-method.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Count bait and oe — countInteractibility,linkSet-method","text":"x linkSet object baitRegions Whether count bait regions","code":""},{"path":"https://gilberthan1011.github.io/linkSet/reference/countInteractibility-linkSet-method.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Count bait and oe — countInteractibility,linkSet-method","text":"linkSet object counts unique interaction","code":""},{"path":"https://gilberthan1011.github.io/linkSet/reference/countInteractibility-linkSet-method.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Count bait and oe — countInteractibility,linkSet-method","text":"","code":"data(linkExample) linkSet = c(linkExample,linkExample) linkSet = countInteractions(linkSet) linkSet = countInteractibility(linkSet)"},{"path":"https://gilberthan1011.github.io/linkSet/reference/countInteractions-linkSet-method.html","id":null,"dir":"Reference","previous_headings":"","what":"Make Repeated Interactions Unique and Count Repetitions — countInteractions,linkSet-method","title":"Make Repeated Interactions Unique and Count Repetitions — countInteractions,linkSet-method","text":"function takes linkSet object, identifies repeated interactions (bait end repeated), makes unique, counts number repetitions unique interaction.","code":""},{"path":"https://gilberthan1011.github.io/linkSet/reference/countInteractions-linkSet-method.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Make Repeated Interactions Unique and Count Repetitions — countInteractions,linkSet-method","text":"","code":"# S4 method for class 'linkSet' countInteractions(x, baitRegions = TRUE)"},{"path":"https://gilberthan1011.github.io/linkSet/reference/countInteractions-linkSet-method.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Make Repeated Interactions Unique and Count Repetitions — countInteractions,linkSet-method","text":"x linkSet object","code":""},{"path":"https://gilberthan1011.github.io/linkSet/reference/countInteractions-linkSet-method.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Make Repeated Interactions Unique and Count Repetitions — countInteractions,linkSet-method","text":"list containing: unique_linkSet new linkSet object unique interactions interaction_counts data frame counts unique interaction","code":""},{"path":"https://gilberthan1011.github.io/linkSet/reference/countInteractions-linkSet-method.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Make Repeated Interactions Unique and Count Repetitions — countInteractions,linkSet-method","text":"","code":"data(linkExample) linkSet = c(linkExample,linkExample) result <- countInteractions(linkSet) result #> linkSet object with 5 interactions and 2 metadata columns: #>              bait     seqnames_oe ranges_oe | anchor1.symbol     count #>       <character>           <Rle> <IRanges> |    <character> <integer> #>   [1]       Gene1 ---        chr1     50-59 |          Gene1         2 #>   [2]       Gene1 ---        chr2   150-159 |          Gene1         2 #>   [3]       Gene2 ---        chr2   250-259 |          Gene2         2 #>   [4]       Gene3 ---        chr4   350-359 |          Gene3         2 #>   [5]       Gene3 ---        chr4   450-459 |          Gene3         2 #>   ------- #>   regions: 10 ranges and 0 metadata columns #>   seqinfo: 4 sequences from an unspecified genome; no seqlengths"},{"path":"https://gilberthan1011.github.io/linkSet/reference/crossGeneEnhancer-linkSet-method.html","id":null,"dir":"Reference","previous_headings":"","what":"Cross gene enhancer — crossGeneEnhancer,linkSet-method","title":"Cross gene enhancer — crossGeneEnhancer,linkSet-method","text":"Cross gene enhancer","code":""},{"path":"https://gilberthan1011.github.io/linkSet/reference/crossGeneEnhancer-linkSet-method.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Cross gene enhancer — crossGeneEnhancer,linkSet-method","text":"","code":"# S4 method for class 'linkSet' crossGeneEnhancer(x, score_threshold = NULL)"},{"path":"https://gilberthan1011.github.io/linkSet/reference/crossGeneEnhancer-linkSet-method.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Cross gene enhancer — crossGeneEnhancer,linkSet-method","text":"score_threshold minimum score filter interactions","code":""},{"path":"https://gilberthan1011.github.io/linkSet/reference/crossGeneEnhancer-linkSet-method.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Cross gene enhancer — crossGeneEnhancer,linkSet-method","text":"linkSet object filtered interactions","code":""},{"path":"https://gilberthan1011.github.io/linkSet/reference/crossGeneEnhancer-linkSet-method.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Cross gene enhancer — crossGeneEnhancer,linkSet-method","text":"","code":"data(linkExample) linkSet = c(linkExample,linkExample) linkSet = countInteractions(linkSet) linkSet = filterLinks(linkSet, filter_intra = FALSE, filter_unannotate = FALSE, distance = 100000) linkSet = crossGeneEnhancer(linkSet, score_threshold = 10) #> Warning: score column not found."},{"path":"https://gilberthan1011.github.io/linkSet/reference/diagnoseLinkSet-linkSet-method.html","id":null,"dir":"Reference","previous_headings":"","what":"Diagnose the linkSet object, return barplot of inter/intra interaction and distance distribution — diagnoseLinkSet,linkSet-method","title":"Diagnose the linkSet object, return barplot of inter/intra interaction and distance distribution — diagnoseLinkSet,linkSet-method","text":"Diagnose linkSet object, return barplot inter/intra interaction distance distribution","code":""},{"path":"https://gilberthan1011.github.io/linkSet/reference/diagnoseLinkSet-linkSet-method.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Diagnose the linkSet object, return barplot of inter/intra interaction and distance distribution — diagnoseLinkSet,linkSet-method","text":"","code":"# S4 method for class 'linkSet' diagnoseLinkSet(x)"},{"path":"https://gilberthan1011.github.io/linkSet/reference/diagnoseLinkSet-linkSet-method.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Diagnose the linkSet object, return barplot of inter/intra interaction and distance distribution — diagnoseLinkSet,linkSet-method","text":"","code":"data(linkExample) diagnoseLinkSet(linkExample) #> `stat_bin()` using `bins = 30`. Pick better value with `binwidth`.  #> linkSet object with 5 interactions and 3 metadata columns: #>              bait     seqnames_oe ranges_oe | anchor1.symbol  inter_type #>       <character>           <Rle> <IRanges> |    <character> <character> #>   [1]       Gene1 ---        chr1     50-59 |          Gene1       inter #>   [2]       Gene1 ---        chr2   150-159 |          Gene1       intra #>   [3]       Gene2 ---        chr2   250-259 |          Gene2       inter #>   [4]       Gene3 ---        chr4   350-359 |          Gene3       intra #>   [5]       Gene3 ---        chr4   450-459 |          Gene3       inter #>        distance #>       <integer> #>   [1]        49 #>   [2]      <NA> #>   [3]        50 #>   [4]      <NA> #>   [5]        50 #>   ------- #>   regions: 10 ranges and 0 metadata columns #>   seqinfo: 4 sequences from an unspecified genome; no seqlengths"},{"path":"https://gilberthan1011.github.io/linkSet/reference/dot-check.split.data.numerical.fit.html","id":null,"dir":"Reference","previous_headings":"","what":"check.split.data.numerical.fit — .check.split.data.numerical.fit","title":"check.split.data.numerical.fit — .check.split.data.numerical.fit","text":"Helper function check chicane model can fit element split data list.","code":""},{"path":"https://gilberthan1011.github.io/linkSet/reference/dot-check.split.data.numerical.fit.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"check.split.data.numerical.fit — .check.split.data.numerical.fit","text":"","code":".check.split.data.numerical.fit(split.data)"},{"path":"https://gilberthan1011.github.io/linkSet/reference/dot-check.split.data.numerical.fit.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"check.split.data.numerical.fit — .check.split.data.numerical.fit","text":"split.data List data.table objects fragment interaction data","code":""},{"path":"https://gilberthan1011.github.io/linkSet/reference/dot-check.split.data.numerical.fit.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"check.split.data.numerical.fit — .check.split.data.numerical.fit","text":"Logical indicating model can fit","code":""},{"path":"https://gilberthan1011.github.io/linkSet/reference/dot-is.glm.nb.maxiter.warning.html","id":null,"dir":"Reference","previous_headings":"","what":"is.glm.nb.maxiter.warning — .is.glm.nb.maxiter.warning","title":"is.glm.nb.maxiter.warning — .is.glm.nb.maxiter.warning","text":"Check warning object iteration limit reached warning glm.nb","code":""},{"path":"https://gilberthan1011.github.io/linkSet/reference/dot-is.glm.nb.maxiter.warning.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"is.glm.nb.maxiter.warning — .is.glm.nb.maxiter.warning","text":"","code":".is.glm.nb.maxiter.warning(w)"},{"path":"https://gilberthan1011.github.io/linkSet/reference/dot-is.glm.nb.maxiter.warning.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"is.glm.nb.maxiter.warning — .is.glm.nb.maxiter.warning","text":"w Warning object","code":""},{"path":"https://gilberthan1011.github.io/linkSet/reference/dot-is.glm.nb.maxiter.warning.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"is.glm.nb.maxiter.warning — .is.glm.nb.maxiter.warning","text":"Logical indicating warning matches iteration limit reached warning","code":""},{"path":"https://gilberthan1011.github.io/linkSet/reference/exportInterBed-linkSet-method.html","id":null,"dir":"Reference","previous_headings":"","what":"Export linkSet to interBed format — exportInterBed,linkSet-method","title":"Export linkSet to interBed format — exportInterBed,linkSet-method","text":"Export linkSet interBed format","code":""},{"path":"https://gilberthan1011.github.io/linkSet/reference/exportInterBed-linkSet-method.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Export linkSet to interBed format — exportInterBed,linkSet-method","text":"","code":"# S4 method for class 'linkSet' exportInterBed(x, outfile)"},{"path":"https://gilberthan1011.github.io/linkSet/reference/exportInterBed-linkSet-method.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Export linkSet to interBed format — exportInterBed,linkSet-method","text":"x linkSet object outfile Output file name","code":""},{"path":"https://gilberthan1011.github.io/linkSet/reference/exportInterBed-linkSet-method.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Export linkSet to interBed format — exportInterBed,linkSet-method","text":"","code":"data(linkExample) tmpfile <- tempfile(fileext = \".txt\") exportInterBed(linkExample, tmpfile) cat(readLines(tmpfile), sep = \"\\n\") #> bait_seqnames\tbait_start\tbait_end\tbait_name\totherEndseqnames\totherEndstart\totherEndend\totherEnd_name\tanchor1.symbol #> chr1\t1\t10\tGene1\tchr1\t50\t59\tchr1:50-59:+\tGene1 #> chr1\t100\t109\tGene1\tchr2\t150\t159\tchr2:150-159:+\tGene1 #> chr2\t200\t209\tGene2\tchr2\t250\t259\tchr2:250-259:+\tGene2 #> chr3\t300\t309\tGene3\tchr4\t350\t359\tchr4:350-359:+\tGene3 #> chr4\t400\t409\tGene3\tchr4\t450\t459\tchr4:450-459:+\tGene3"},{"path":"https://gilberthan1011.github.io/linkSet/reference/exportWashU-linkSet-method.html","id":null,"dir":"Reference","previous_headings":"","what":"Export linkSet to WashU format — exportWashU,linkSet-method","title":"Export linkSet to WashU format — exportWashU,linkSet-method","text":"Export linkSet WashU format","code":""},{"path":"https://gilberthan1011.github.io/linkSet/reference/exportWashU-linkSet-method.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Export linkSet to WashU format — exportWashU,linkSet-method","text":"","code":"# S4 method for class 'linkSet' exportWashU(x, outfile)"},{"path":"https://gilberthan1011.github.io/linkSet/reference/exportWashU-linkSet-method.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Export linkSet to WashU format — exportWashU,linkSet-method","text":"x linkSet object outfile Output file name","code":""},{"path":"https://gilberthan1011.github.io/linkSet/reference/exportWashU-linkSet-method.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Export linkSet to WashU format — exportWashU,linkSet-method","text":"","code":"data(linkExample) tmpfile <- tempfile(fileext = \".txt\") exportWashU(linkExample, tmpfile) cat(readLines(tmpfile), sep = \"\\n\") #> chr1\t1\t10\tGene1\tchr1\t50\t59\tchr1:50-59:+ #> chr1\t100\t109\tGene1\tchr2\t150\t159\tchr2:150-159:+ #> chr2\t200\t209\tGene2\tchr2\t250\t259\tchr2:250-259:+ #> chr3\t300\t309\tGene3\tchr4\t350\t359\tchr4:350-359:+ #> chr4\t400\t409\tGene3\tchr4\t450\t459\tchr4:450-459:+"},{"path":"https://gilberthan1011.github.io/linkSet/reference/filterLinks-linkSet-method.html","id":null,"dir":"Reference","previous_headings":"","what":"Filter links for further analysis — filterLinks,linkSet-method","title":"Filter links for further analysis — filterLinks,linkSet-method","text":"Filter links analysis","code":""},{"path":"https://gilberthan1011.github.io/linkSet/reference/filterLinks-linkSet-method.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Filter links for further analysis — filterLinks,linkSet-method","text":"","code":"# S4 method for class 'linkSet' filterLinks(x, filter_intra = TRUE, filter_unannotate = TRUE, distance = NULL)"},{"path":"https://gilberthan1011.github.io/linkSet/reference/filterLinks-linkSet-method.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Filter links for further analysis — filterLinks,linkSet-method","text":"filter_intra Whether filter intra-chromosomal interactions filter_unannotate Whether filter unannotated interactions distance maximum distance bait end","code":""},{"path":"https://gilberthan1011.github.io/linkSet/reference/filterLinks-linkSet-method.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Filter links for further analysis — filterLinks,linkSet-method","text":"linkSet object filtered interactions","code":""},{"path":"https://gilberthan1011.github.io/linkSet/reference/filterLinks-linkSet-method.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Filter links for further analysis — filterLinks,linkSet-method","text":"","code":"data(linkExample) linkSet = c(linkExample,linkExample) linkSet = countInteractions(linkSet) linkSet = filterLinks(linkSet, filter_intra = FALSE, filter_unannotate = FALSE, distance = 100000)"},{"path":"https://gilberthan1011.github.io/linkSet/reference/geom_linkset-linkSet-method.html","id":null,"dir":"Reference","previous_headings":"","what":"Add Genome Links to Coverage Plot. — geom_linkset,linkSet-method","title":"Add Genome Links to Coverage Plot. — geom_linkset,linkSet-method","text":"Add Genome Links Coverage Plot.","code":""},{"path":"https://gilberthan1011.github.io/linkSet/reference/geom_linkset-linkSet-method.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add Genome Links to Coverage Plot. — geom_linkset,linkSet-method","text":"","code":"# S4 method for class 'linkSet' geom_linkset(   linkSet,   score.col = \"count\",   score.threshold = NULL,   score.color = c(\"grey70\", \"#56B1F7\", \"#132B43\"),   scale.range = 10,   plot.space = 0.1,   plot.height = 0.2,   arrow.size = 0.05,   remove_x_axis = FALSE,   link_plot_on_top = FALSE,   extend.base = 1e+06,   show.rect = FALSE,   x.range = NULL,   log.scale = TRUE )"},{"path":"https://gilberthan1011.github.io/linkSet/reference/geom_linkset-linkSet-method.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add Genome Links to Coverage Plot. — geom_linkset,linkSet-method","text":"score.col Column index contains score information, used file.type bedpe. Default: NULL. score.threshold score threshold, used score.col NULL. Default: NULL. score.color score color vector. Default: c(\"grey70\", \"#56B1F7\", \"#132B43\"). scale.range Scale height links according width, greater equal 1 (scale). Default: 10. plot.space Top bottom margin. Default: 0.1. plot.height relative height link coverage plot. Default: 0.2. arrow.size size arrow head. Default: 0.02. remove_x_axis Logical value, whether remove x-axis. Default: FALSE. link_plot_on_top Logical value, whether plot link plot top coverage plot. Default: FALSE. extend.base Extend base pair range show information. Default: 1000000. show.rect Logical value, whether add rect border plot. Default: FALSE. x.range range x-axis show. Default: NULL. log.scale Logical value, whether log1p score. Default: TRUE. link.file File contains region link information. file.type type link.file, choose bedpe, pairs. Default: bedpe. plot.curve One 'curve' 'bezier', latter required install package ggforce. Default: 'curve'.","code":""},{"path":"https://gilberthan1011.github.io/linkSet/reference/geom_linkset-linkSet-method.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add Genome Links to Coverage Plot. — geom_linkset,linkSet-method","text":"Plot.","code":""},{"path":"https://gilberthan1011.github.io/linkSet/reference/geom_linkset-linkSet-method.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Add Genome Links to Coverage Plot. — geom_linkset,linkSet-method","text":"https://stuartlab.org/signac/articles/cicero.html","code":""},{"path":"https://gilberthan1011.github.io/linkSet/reference/geom_range.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot genomic ranges — geom_range","title":"Plot genomic ranges — geom_range","text":"geom_range() geom_half_range() draw tiles designed represent range-based genomic features, exons. combination geom_intron(), geoms form core components visualizing transcript structures.","code":""},{"path":"https://gilberthan1011.github.io/linkSet/reference/geom_range.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot genomic ranges — geom_range","text":"","code":"geom_range(   mapping = NULL,   data = NULL,   stat = \"identity\",   position = \"identity\",   bait_col = \"red\",   oe_col = \"DeepSkyBlue3\",   default_col = \"grey\",   ...,   vjust = NULL,   linejoin = \"mitre\",   na.rm = FALSE,   minimal_width = 0.01,   show.legend = NA,   inherit.aes = TRUE )"},{"path":"https://gilberthan1011.github.io/linkSet/reference/geom_range.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot genomic ranges — geom_range","text":"mapping Set aesthetic mappings created aes(). specified inherit.aes = TRUE (default), combined default mapping top level plot. must supply mapping plot mapping. data data displayed layer. three options: NULL, default, data inherited plot data specified call ggplot(). data.frame, object, override plot data. objects fortified produce data frame. See fortify() variables created. function called single argument, plot data. return value must data.frame, used layer data. function can created formula (e.g. ~ head(.x, 10)). stat statistical transformation use data layer. using geom_*() function construct layer, stat argument can used override default coupling geoms stats. stat argument accepts following: Stat ggproto subclass, example StatCount. string naming stat. give stat string, strip function name stat_ prefix. example, use stat_count(), give stat \"count\". information ways specify stat, see layer stat documentation. position position adjustment use data layer. can used various ways, including prevent overplotting improving display. position argument accepts following: result calling position function, position_jitter(). method allows passing extra arguments position. string naming position adjustment. give position string, strip function name position_ prefix. example, use position_jitter(), give position \"jitter\". information ways specify position, see layer position documentation. ... arguments passed layer()'s params argument. arguments broadly fall one 4 categories . Notably, arguments position argument, aesthetics required can passed .... Unknown arguments part 4 categories ignored. Static aesthetics mapped scale, fixed value apply layer whole. example, colour = \"red\" linewidth = 3. geom's documentation Aesthetics section lists available options. 'required' aesthetics passed params. Please note passing unmapped aesthetics vectors technically possible, order required length guaranteed parallel input data. constructing layer using stat_*() function, ... argument can used pass parameters geom part layer. example stat_density(geom = \"area\", outline.type = \"\"). geom's documentation lists parameters can accept. Inversely, constructing layer using geom_*() function, ... argument can used pass parameters stat part layer. example geom_area(stat = \"density\", adjust = 0.5). stat's documentation lists parameters can accept. key_glyph argument layer() may also passed .... can one functions described key glyphs, change display layer legend. vjust numeric vector specifying vertical justification.     specified, overrides just setting. linejoin Line join style (round, mitre, bevel). na.rm FALSE, default, missing values removed warning. TRUE, missing values silently removed. show.legend logical. layer included legends? NA, default, includes aesthetics mapped. FALSE never includes, TRUE always includes. can also named logical vector finely select aesthetics display. inherit.aes FALSE, overrides default aesthetics, rather combining . useful helper functions define data aesthetics inherit behaviour default plot specification, e.g. borders().","code":""},{"path":"https://gilberthan1011.github.io/linkSet/reference/geom_range.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot genomic ranges — geom_range","text":"return value geom_* function intended directly handled users. Therefore, geom_* functions never executed isolation, rather used combination ggplot2::ggplot() call.","code":""},{"path":"https://gilberthan1011.github.io/linkSet/reference/geom_range.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Plot genomic ranges — geom_range","text":"geom_range() geom_half_range() require following aes(); xstart, xend y (e.g. transcript name). geom_half_range() takes advantage vertical symmetry transcript annotation plotting half range top bottom transcript structure. can useful comparing two transcripts free plotting space transcript annotations (e.g. geom_junction()).","code":""},{"path":"https://gilberthan1011.github.io/linkSet/reference/linkSet-GRange-Methods.html","id":null,"dir":"Reference","previous_headings":"","what":"linkSet-GRange-Methods — trim,linkSet-method","title":"linkSet-GRange-Methods — trim,linkSet-method","text":"man page documents intra range transformations linkSet object.","code":""},{"path":"https://gilberthan1011.github.io/linkSet/reference/linkSet-GRange-Methods.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"linkSet-GRange-Methods — trim,linkSet-method","text":"","code":"# S4 method for class 'linkSet' trim(x, use.names = TRUE)  # S4 method for class 'linkSet' resize(x, width, fix = \"start\", use.names = TRUE, ...)  # S4 method for class 'linkSet' resizeRegions(   x,   width = 1000,   fix = \"start\",   use.names = TRUE,   region = \"both\",   ... )  # S4 method for class 'linkSet' narrow(x, start = NA, end = NA, width = NA, use.names = TRUE)  # S4 method for class 'linkSet' narrowRegions(   x,   start = NA,   end = NA,   width = NA,   use.names = TRUE,   region = \"both\" )  # S4 method for class 'linkSet' shift(x, shift = 0L, use.names = TRUE)  # S4 method for class 'linkSet' shiftRegions(x, shift = 0L, use.names = TRUE, region = \"both\")  # S4 method for class 'linkSet' flank(   x,   width,   start = TRUE,   both = FALSE,   use.names = TRUE,   ignore.strand = FALSE )  # S4 method for class 'linkSet' flankRegions(   x,   width,   start = TRUE,   both = FALSE,   use.names = TRUE,   ignore.strand = FALSE,   region = \"both\" )  # S4 method for class 'linkSet' promoters(x, upstream = 2000, downstream = 200, use.names = TRUE)  # S4 method for class 'linkSet' promoterRegions(   x,   upstream = 2000,   downstream = 200,   use.names = TRUE,   region = \"both\" )  # S4 method for class 'linkSet' width(x)  # S4 method for class 'linkSet' reduce(x, drop.empty.ranges = FALSE, ...)"},{"path":"https://gilberthan1011.github.io/linkSet/reference/linkSet-GRange-Methods.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"linkSet-GRange-Methods — trim,linkSet-method","text":"x linkSet object use.names logical indicating whether use names","code":""},{"path":"https://gilberthan1011.github.io/linkSet/reference/linkSet-GRange-Methods.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"linkSet-GRange-Methods — trim,linkSet-method","text":"linkSet object","code":""},{"path":"https://gilberthan1011.github.io/linkSet/reference/linkSet-GRange-Methods.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"linkSet-GRange-Methods — trim,linkSet-method","text":"Gilbert Han","code":""},{"path":"https://gilberthan1011.github.io/linkSet/reference/linkSet-GRange-Methods.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"linkSet-GRange-Methods — trim,linkSet-method","text":"","code":"data(linkExample) resize_bait <- resizeRegions(linkExample, width = 75, fix = \"start\", region = \"bait\") resize_bait #> linkSet object with 5 interactions and 1 metadata column: #>              bait     seqnames_oe ranges_oe | anchor1.symbol #>       <character>           <Rle> <IRanges> |    <character> #>   [1]       Gene1 ---        chr1     50-59 |          Gene1 #>   [2]       Gene1 ---        chr2   150-159 |          Gene1 #>   [3]       Gene2 ---        chr2   250-259 |          Gene2 #>   [4]       Gene3 ---        chr4   350-359 |          Gene3 #>   [5]       Gene3 ---        chr4   450-459 |          Gene3 #>   ------- #>   regions: 10 ranges and 0 metadata columns #>   seqinfo: 4 sequences from an unspecified genome; no seqlengths  narrow_bait <- narrowRegions(linkExample, start = 1, width = 5, region = \"bait\") narrow_bait #> linkSet object with 5 interactions and 1 metadata column: #>              bait     seqnames_oe ranges_oe | anchor1.symbol #>       <character>           <Rle> <IRanges> |    <character> #>   [1]       Gene1 ---        chr1     50-59 |          Gene1 #>   [2]       Gene1 ---        chr2   150-159 |          Gene1 #>   [3]       Gene2 ---        chr2   250-259 |          Gene2 #>   [4]       Gene3 ---        chr4   350-359 |          Gene3 #>   [5]       Gene3 ---        chr4   450-459 |          Gene3 #>   ------- #>   regions: 10 ranges and 0 metadata columns #>   seqinfo: 4 sequences from an unspecified genome; no seqlengths  shift_oe <- shiftRegions(linkExample, shift = 10, region = \"oe\") shift_oe #> linkSet object with 5 interactions and 1 metadata column: #>              bait     seqnames_oe ranges_oe | anchor1.symbol #>       <character>           <Rle> <IRanges> |    <character> #>   [1]       Gene1 ---        chr1     60-69 |          Gene1 #>   [2]       Gene1 ---        chr2   160-169 |          Gene1 #>   [3]       Gene2 ---        chr2   260-269 |          Gene2 #>   [4]       Gene3 ---        chr4   360-369 |          Gene3 #>   [5]       Gene3 ---        chr4   460-469 |          Gene3 #>   ------- #>   regions: 10 ranges and 0 metadata columns #>   seqinfo: 4 sequences from an unspecified genome; no seqlengths  flank_bait <- flankRegions(linkExample, width = 100, start = TRUE, both = FALSE, use.names = TRUE, ignore.strand = FALSE, region = \"bait\") flank_bait #> linkSet object with 5 interactions and 1 metadata column: #>              bait     seqnames_oe ranges_oe | anchor1.symbol #>       <character>           <Rle> <IRanges> |    <character> #>   [1]       Gene1 ---        chr1     50-59 |          Gene1 #>   [2]       Gene1 ---        chr2   150-159 |          Gene1 #>   [3]       Gene2 ---        chr2   250-259 |          Gene2 #>   [4]       Gene3 ---        chr4   350-359 |          Gene3 #>   [5]       Gene3 ---        chr4   450-459 |          Gene3 #>   ------- #>   regions: 10 ranges and 0 metadata columns #>   seqinfo: 4 sequences from an unspecified genome; no seqlengths  width(linkExample) #> $bait #> [1] 10 10 10 10 10 #>  #> $oe #> [1] 10 10 10 10 10 #>"},{"path":"https://gilberthan1011.github.io/linkSet/reference/linkSet-accessors.html","id":null,"dir":"Reference","previous_headings":"","what":"linkSet-accessors — anchor1,linkSet-method","title":"linkSet-accessors — anchor1,linkSet-method","text":"Methods get set fields linkSet object.","code":""},{"path":"https://gilberthan1011.github.io/linkSet/reference/linkSet-accessors.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"linkSet-accessors — anchor1,linkSet-method","text":"","code":"# S4 method for class 'linkSet' anchor1(x)  # S4 method for class 'linkSet' anchor2(x)  # S4 method for class 'linkSet' regions(x)  # S4 method for class 'linkSet' seqinfo(x)"},{"path":"https://gilberthan1011.github.io/linkSet/reference/linkSet-accessors.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"linkSet-accessors — anchor1,linkSet-method","text":"x linkSet object","code":""},{"path":"https://gilberthan1011.github.io/linkSet/reference/linkSet-accessors.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"linkSet-accessors — anchor1,linkSet-method","text":"getters, values various slots x returned, setters, slots x modified accordingly – see Details. vector regions","code":""},{"path":"https://gilberthan1011.github.io/linkSet/reference/linkSet-accessors.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"linkSet-accessors — anchor1,linkSet-method","text":"Gilbert Han","code":""},{"path":"https://gilberthan1011.github.io/linkSet/reference/linkSet-accessors.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"linkSet-accessors — anchor1,linkSet-method","text":"","code":"data(linkExample) anchor1(linkExample) #> [1] 1 3 5 7 9 data(linkExample) anchor2(linkExample) #> [1]  2  4  6  8 10 data(linkExample) regions(linkExample) #> Error: unable to find an inherited method for function ‘regions’ for signature ‘x = \"linkSet\"’"},{"path":"https://gilberthan1011.github.io/linkSet/reference/linkSet-class.html","id":null,"dir":"Reference","previous_headings":"","what":"LinkSet object — linkSet-class","title":"LinkSet object — linkSet-class","text":"linkSet object container storing gene-enhancer interactions.","code":""},{"path":"https://gilberthan1011.github.io/linkSet/reference/linkSet-class.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"LinkSet object — linkSet-class","text":"linkSet object vectors paired gene-enhancer interactions.","code":""},{"path":"https://gilberthan1011.github.io/linkSet/reference/linkSet-class.html","id":"slots","dir":"Reference","previous_headings":"","what":"Slots","title":"LinkSet object — linkSet-class","text":"nameBait character vector bait names. anchor1 integer vector first anchor indices. anchor2 integer vector second anchor indices. regions GenomicRanges object regions. NAMES character vector region names. elementMetadata DataFrame element metadata.","code":""},{"path":[]},{"path":"https://gilberthan1011.github.io/linkSet/reference/linkSet-class.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"LinkSet object — linkSet-class","text":"","code":"showClass(\"linkSet\")  # shows the known subclasses #> Class \"linkSet\" [package \"linkSet\"] #>  #> Slots: #>                                                          #> Name:                  nameBait                  anchor1 #> Class:                character                  integer #>                                                          #> Name:                   anchor2                  regions #> Class:                  integer GenomicRanges_OR_missing #>                                                          #> Name:                     NAMES          elementMetadata #> Class:        character_OR_NULL                DataFrame #>                                 #> Name:                  metadata #> Class:                     list #>  #> Extends:  #> Class \"Vector\", directly #> Class \"Annotated\", by class \"Vector\", distance 2 #> Class \"vector_OR_Vector\", by class \"Vector\", distance 2  set.seed(7000) N <- 40 all.starts <- round(runif(N, 1, 100)) all.ends <- all.starts + round(runif(N, 5, 20)) all.regions <- GRanges(rep(c(\"chrA\", \"chrB\"), c(N-10, 10)), IRanges(all.starts, all.ends)) genes = c(rep(\"SP7\",4),rep(\"ASPN\",10),rep(\"XBP1\",6)) Np <- 20 all.anchor1 <- sample(N, Np) gr1 <- all.regions[all.anchor1] gr1$symbol <- genes all.anchor2 <- setdiff(1:40,all.anchor1) gr2 <- all.regions[all.anchor2] x <- linkSet(gr1, gr2,specificCol = \"symbol\") x #> linkSet object with 20 interactions and 1 metadata column: #>               bait     seqnames_oe ranges_oe | anchor1.symbol #>        <character>           <Rle> <IRanges> |    <character> #>    [1]         SP7 ---        chrA     47-58 |            SP7 #>    [2]         SP7 ---        chrA     41-54 |            SP7 #>    [3]         SP7 ---        chrA     20-33 |            SP7 #>    [4]         SP7 ---        chrA    87-104 |            SP7 #>    [5]        ASPN ---        chrA     59-76 |           ASPN #>    ...         ... ...         ...       ... .            ... #>   [16]        XBP1 ---        chrB     54-61 |           XBP1 #>   [17]        XBP1 ---        chrB      1-18 |           XBP1 #>   [18]        XBP1 ---        chrB     83-91 |           XBP1 #>   [19]        XBP1 ---        chrB     33-45 |           XBP1 #>   [20]        XBP1 ---        chrB    96-114 |           XBP1 #>   ------- #>   regions: 40 ranges and 0 metadata columns #>   seqinfo: 2 sequences from an unspecified genome; no seqlengths x2 <- linkSet(genes, gr2) x2 #> linkSet object with 20 interactions and 0 metadata columns: #>               bait     seqnames_oe ranges_oe #>        <character>           <Rle> <IRanges> #>    [1]         SP7 ---        chrA     47-58 #>    [2]         SP7 ---        chrA     41-54 #>    [3]         SP7 ---        chrA     20-33 #>    [4]         SP7 ---        chrA    87-104 #>    [5]        ASPN ---        chrA     59-76 #>    ...         ... ...         ...       ... #>   [16]        XBP1 ---        chrB     54-61 #>   [17]        XBP1 ---        chrB      1-18 #>   [18]        XBP1 ---        chrB     83-91 #>   [19]        XBP1 ---        chrB     33-45 #>   [20]        XBP1 ---        chrB    96-114 #>   ------- #>   regions: 20 ranges and 0 metadata columns #>   seqinfo: 2 sequences from an unspecified genome; no seqlengths"},{"path":"https://gilberthan1011.github.io/linkSet/reference/linkSet-package.html","id":null,"dir":"Reference","previous_headings":"","what":"linkSet: Base Classes for Storing Genomic Link Data — linkSet-package","title":"linkSet: Base Classes for Storing Genomic Link Data — linkSet-package","text":"goal linkSet provide tools working gene-enhancer interactions, commonly seen HiC, PC-HiC, single-cell ATAC-seq data analysis.","code":""},{"path":[]},{"path":"https://gilberthan1011.github.io/linkSet/reference/linkSet-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"linkSet: Base Classes for Storing Genomic Link Data — linkSet-package","text":"Maintainer: Gilbert Han GilbertHan1011@gmail.com (ORCID)","code":""},{"path":"https://gilberthan1011.github.io/linkSet/reference/linkSet-subset-methods.html","id":null,"dir":"Reference","previous_headings":"","what":"Subset linkSet object based on bait names — subsetBait,linkSet-method","title":"Subset linkSet object based on bait names — subsetBait,linkSet-method","text":"Subset linkSet object based bait names Subset linkSet object based bait regions Subset linkSet object based end (oe) regions","code":""},{"path":"https://gilberthan1011.github.io/linkSet/reference/linkSet-subset-methods.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Subset linkSet object based on bait names — subsetBait,linkSet-method","text":"","code":"# S4 method for class 'linkSet' subsetBait(x, subset)  # S4 method for class 'linkSet' subsetBaitRegion(x, subset)  # S4 method for class 'linkSet' subsetOE(x, subset)"},{"path":"https://gilberthan1011.github.io/linkSet/reference/linkSet-subset-methods.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Subset linkSet object based on bait names — subsetBait,linkSet-method","text":"x linkSet object subset GRanges object specifying regions keep","code":""},{"path":"https://gilberthan1011.github.io/linkSet/reference/linkSet-subset-methods.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Subset linkSet object based on bait names — subsetBait,linkSet-method","text":"new linkSet object containing specified bait interactions new linkSet object containing interactions bait regions overlapping subset new linkSet object containing interactions oe regions overlapping subset","code":""},{"path":"https://gilberthan1011.github.io/linkSet/reference/linkSet-subset-methods.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Subset linkSet object based on bait names — subsetBait,linkSet-method","text":"","code":"data(linkExample) subset_bait_names <- c(\"bait1\", \"bait2\") subsetted_linkSet <- subsetBait(linkExample, subset_bait_names) data(linkExample) subset_bait_regions <- GRanges(seqnames = \"chr1\", ranges = IRanges(start = c(100, 200), end = c(150, 250))) subsetted_linkSet <- subsetBaitRegion(linkExample, subset_bait_regions) data(linkExample) subset_oe_regions <- GRanges(seqnames = \"chr1\", ranges = IRanges(start = c(300, 400), end = c(350, 450))) subsetted_linkSet <- subsetOE(linkExample, subset_oe_regions)"},{"path":"https://gilberthan1011.github.io/linkSet/reference/linkSet-theme.html","id":null,"dir":"Reference","previous_headings":"","what":"linkSet-theme — theme_linkset","title":"linkSet-theme — theme_linkset","text":"linkSet-theme","code":""},{"path":"https://gilberthan1011.github.io/linkSet/reference/linkSet-theme.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"linkSet-theme — theme_linkset","text":"","code":"theme_linkset(x.range, margin.len, show.rect)  theme_range(x.range, show.rect)"},{"path":"https://gilberthan1011.github.io/linkSet/reference/linkSet-theme.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"linkSet-theme — theme_linkset","text":"","code":"data(linkExample) x.range <- c(0, 100) margin.len <- 0.5 show.rect <- TRUE p <- ggplot2::ggplot() + theme_linkset(x.range, margin.len, show.rect) print(p)  data(linkExample) x.range <- c(0, 100) show.rect <- TRUE p <- ggplot2::ggplot() + theme_range(x.range, show.rect) print(p)"},{"path":"https://gilberthan1011.github.io/linkSet/reference/linkSet.html","id":null,"dir":"Reference","previous_headings":"","what":"linkSet: Base Classes for Storing Genomic Link Data — linkSet","title":"linkSet: Base Classes for Storing Genomic Link Data — linkSet","text":"linkSet package provides tools working genomic link sets, represent connections different genomic regions. package designed bioinformatics genomic data analysis, offering various methods manipulate analyze linkSet objects.","code":""},{"path":"https://gilberthan1011.github.io/linkSet/reference/linkSet.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"linkSet: Base Classes for Storing Genomic Link Data — linkSet","text":"main class provided package linkSet class, designed represent analyze genomic interactions, particularly focusing gene-enhancer relationships. Key features include: Representation genomic interactions two types anchors: \"bait\" (typically genes) \"end\" (typically enhancers regulatory elements). Flexible input methods, supporting construction various data types. Metadata storage additional information interactions. Integration Bioconductor classes tools. Methods annotating promoters distinguishing inter- intra-chromosomal interactions.","code":""},{"path":"https://gilberthan1011.github.io/linkSet/reference/linkSet.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"linkSet: Base Classes for Storing Genomic Link Data — linkSet","text":"Add relevant references .","code":""},{"path":[]},{"path":"https://gilberthan1011.github.io/linkSet/reference/linkSet.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"linkSet: Base Classes for Storing Genomic Link Data — linkSet","text":"","code":"# Basic usage example library(linkSet) # Add a simple example here"},{"path":"https://gilberthan1011.github.io/linkSet/reference/orderLinks-linkSet-method.html","id":null,"dir":"Reference","previous_headings":"","what":"Order linkSet by mcols — orderLinks,linkSet-method","title":"Order linkSet by mcols — orderLinks,linkSet-method","text":"Order linkSet mcols","code":""},{"path":"https://gilberthan1011.github.io/linkSet/reference/orderLinks-linkSet-method.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Order linkSet by mcols — orderLinks,linkSet-method","text":"","code":"# S4 method for class 'linkSet' orderLinks(x, by = \"count\", decreasing = TRUE)"},{"path":"https://gilberthan1011.github.io/linkSet/reference/orderLinks-linkSet-method.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Order linkSet by mcols — orderLinks,linkSet-method","text":"column name order decreasing Whether sort decreasing order","code":""},{"path":"https://gilberthan1011.github.io/linkSet/reference/orderLinks-linkSet-method.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Order linkSet by mcols — orderLinks,linkSet-method","text":"linkSet object ordered interactions","code":""},{"path":"https://gilberthan1011.github.io/linkSet/reference/orderLinks-linkSet-method.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Order linkSet by mcols — orderLinks,linkSet-method","text":"","code":"data(linkExample) linkSet = c(linkExample,linkExample) linkSet = countInteractions(linkSet) linkSet = filterLinks(linkSet, filter_intra = FALSE, filter_unannotate = FALSE, distance = 100000) linkSet = orderLinks(linkSet, by = \"count\", decreasing = TRUE)"},{"path":"https://gilberthan1011.github.io/linkSet/reference/pairdist-linkSet-method.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate the distance between bait and the other end — pairdist,linkSet-method","title":"Calculate the distance between bait and the other end — pairdist,linkSet-method","text":"Outputs integer vector specifying distance interacting bins, depending type distance specified. Example:   mid: Half distance end first range start second range gap: Distance end first range start second range span: Total span start first range end second range","code":"rangeA:  |---------|    rangeB:                |---------|    mid:           <----------->    gap:               <-->    span:    <----------------------->"},{"path":"https://gilberthan1011.github.io/linkSet/reference/pairdist-linkSet-method.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate the distance between bait and the other end — pairdist,linkSet-method","text":"","code":"# S4 method for class 'linkSet' pairdist(x, type = \"mid\")"},{"path":"https://gilberthan1011.github.io/linkSet/reference/pairdist-linkSet-method.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate the distance between bait and the other end — pairdist,linkSet-method","text":"x linkSet object type type distance calculate, either \"mid\", \"gap\", \"span\"","code":""},{"path":"https://gilberthan1011.github.io/linkSet/reference/pairdist-linkSet-method.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate the distance between bait and the other end — pairdist,linkSet-method","text":"linkSet object new metadata column \"distance\"","code":""},{"path":"https://gilberthan1011.github.io/linkSet/reference/pairdist-linkSet-method.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate the distance between bait and the other end — pairdist,linkSet-method","text":"","code":"data(linkExample) linkExample <- pairdist(linkExample, type=\"mid\") #> Error: unable to find an inherited method for function ‘pairdist’ for signature ‘x = \"linkSet\"’"},{"path":"https://gilberthan1011.github.io/linkSet/reference/plot_genomic_ranges-linkSet-method.html","id":null,"dir":"Reference","previous_headings":"","what":"plot genomic ranges and links — plot_genomic_ranges,linkSet-method","title":"plot genomic ranges and links — plot_genomic_ranges,linkSet-method","text":"plot genomic ranges links","code":""},{"path":"https://gilberthan1011.github.io/linkSet/reference/plot_genomic_ranges-linkSet-method.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"plot genomic ranges and links — plot_genomic_ranges,linkSet-method","text":"","code":"# S4 method for class 'linkSet' plot_genomic_ranges(   linkset,   showBait = NULL,   showOE = NULL,   x.range = NULL,   score.col = \"count\",   show.rect = TRUE,   extend.base = 1e+06,   ...,   bait_col = \"red\",   oe_col = \"DeepSkyBlue3\",   default_col = \"grey\",   vjust = NULL,   linejoin = \"mitre\",   na.rm = FALSE,   minimal_width = 0.01,   show.legend = NA,   inherit.aes = TRUE,   link_plot_on_top = FALSE,   arrow.size = 0.05,   remove_x_axis = FALSE,   plot.height = 0.4,   plot.space = 0.1,   log.scale = TRUE )"},{"path":"https://gilberthan1011.github.io/linkSet/reference/plot_genomic_ranges-linkSet-method.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"plot genomic ranges and links — plot_genomic_ranges,linkSet-method","text":"linkset linkSet object. showBait character vector specifying bait region shown. Default: NULL. showOE GRanges object specifying oe region shown. Default: NULL. x.range numeric vector length 2 specifying x-axis range. Default: NULL. score.col character string specifying column name score. Default: \"count\". show.rect Logical value, whether show rectangle. Default: TRUE. extend.base numeric value specifying extension base. Default: 1000000. ... Additional arguments. bait_col character string specifying color bait region. Default: \"red\". oe_col character string specifying color oe region. Default: \"DeepSkyBlue3\". default_col character string specifying color default region. Default: \"grey\". vjust numeric value specifying vertical justification. Default: NULL. linejoin character string specifying line join. Default: \"mitre\". na.rm Logical value, whether remove NA values. Default: FALSE. minimal_width numeric value specifying minimal width. Default: 0.01. show.legend Logical value, whether show legend. Default: NA. inherit.aes Logical value, whether inherit aesthetics. Default: TRUE. link_plot_on_top Logical value, whether plot link plot top coverage plot. Default: FALSE. arrow.size numeric value specifying size arrow head. Default: 0.05. remove_x_axis Logical value, whether remove x-axis. Default: FALSE. plot.height numeric value specifying height plot. Default: 0.4. plot.space numeric value specifying space plot link plot. Default: 0.1. log.scale Logical value, whether log scale score. Default: TRUE.","code":""},{"path":"https://gilberthan1011.github.io/linkSet/reference/plot_genomic_ranges-linkSet-method.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"plot genomic ranges and links — plot_genomic_ranges,linkSet-method","text":"ggplot object.","code":""},{"path":"https://gilberthan1011.github.io/linkSet/reference/plot_genomic_ranges-linkSet-method.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"plot genomic ranges and links — plot_genomic_ranges,linkSet-method","text":"","code":"data(linkExample) plot_genomic_ranges(linkExample, extend.base = 10) #> Warning: score.col not found, using count as default"},{"path":"https://gilberthan1011.github.io/linkSet/reference/reduceRegions-linkSet-method.html","id":null,"dir":"Reference","previous_headings":"","what":"Reduce a linkSet object — reduceRegions,linkSet-method","title":"Reduce a linkSet object — reduceRegions,linkSet-method","text":"function reduces bait /oe regions linkSet object optionally counts interactions, maintaining original length linkSet.","code":""},{"path":"https://gilberthan1011.github.io/linkSet/reference/reduceRegions-linkSet-method.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Reduce a linkSet object — reduceRegions,linkSet-method","text":"","code":"# S4 method for class 'linkSet' reduceRegions(x, region = \"both\", countInteractions = TRUE, ...)"},{"path":"https://gilberthan1011.github.io/linkSet/reference/reduceRegions-linkSet-method.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Reduce a linkSet object — reduceRegions,linkSet-method","text":"x linkSet object countInteractions Logical, whether count interactions reducing (default: TRUE) ... Additional arguments passed GenomicRanges::reduce reduceBait Logical, whether reduce bait regions (default: TRUE) reduceOE Logical, whether reduce end (oe) regions (default: TRUE)","code":""},{"path":"https://gilberthan1011.github.io/linkSet/reference/reduceRegions-linkSet-method.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Reduce a linkSet object — reduceRegions,linkSet-method","text":"reduced linkSet object length input","code":""},{"path":"https://gilberthan1011.github.io/linkSet/reference/reduceRegions-linkSet-method.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Reduce a linkSet object — reduceRegions,linkSet-method","text":"","code":"data(linkExample) reduced_ls <- reduceRegions(linkExample, region = \"both\", countInteractions = TRUE) #> Error in reduceRegions(linkExample, region = \"both\", countInteractions = TRUE): unused arguments (region = \"both\", countInteractions = TRUE) reduced_ls #> Error: object 'reduced_ls' not found"},{"path":"https://gilberthan1011.github.io/linkSet/reference/show.html","id":null,"dir":"Reference","previous_headings":"","what":"Display detailed information about a linkSet object — show,linkSet-method","title":"Display detailed information about a linkSet object — show,linkSet-method","text":"Display detailed information linkSet object","code":""},{"path":"https://gilberthan1011.github.io/linkSet/reference/show.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Display detailed information about a linkSet object — show,linkSet-method","text":"","code":"# S4 method for class 'linkSet' show(object)  # S4 method for class 'linkSet' showLinkSet(   x,   margin = \"\",   print.seqinfo = FALSE,   print.classinfo = FALSE,   baitRegion = FALSE )"},{"path":"https://gilberthan1011.github.io/linkSet/reference/show.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Display detailed information about a linkSet object — show,linkSet-method","text":"","code":"# Example usage of show method for linkSet object gr1 <- GRanges(seqnames = c(\"chr1\", \"chr2\", \"chr3\"),                ranges = IRanges(start = c(1000, 2000, 3000), width = 100),                strand = \"+\", symbol = c(\"BRCA1\", \"TP53\", \"NONEXISTENT\")) gr2 <- GRanges(seqnames = c(\"chr1\", \"chr2\", \"chr3\"),                ranges = IRanges(start = c(5000, 6000, 7000), width = 100),                strand = \"+\") ls <- linkSet(gr1, gr2, specificCol = \"symbol\") show(ls) #> linkSet object with 3 interactions and 1 metadata column: #>              bait     seqnames_oe ranges_oe | anchor1.symbol #>       <character>           <Rle> <IRanges> |    <character> #>   [1]       BRCA1 ---        chr1 5000-5099 |          BRCA1 #>   [2]        TP53 ---        chr2 6000-6099 |           TP53 #>   [3] NONEXISTENT ---        chr3 7000-7099 |    NONEXISTENT #>   ------- #>   regions: 6 ranges and 0 metadata columns #>   seqinfo: 3 sequences from an unspecified genome; no seqlengths # Example usage of showLinkSet method for linkSet object gr1 <- GRanges(seqnames = c(\"chr1\", \"chr2\", \"chr3\"),                ranges = IRanges(start = c(1000, 2000, 3000), width = 100),                strand = \"+\", symbol = c(\"BRCA1\", \"TP53\", \"NONEXISTENT\")) gr2 <- GRanges(seqnames = c(\"chr1\", \"chr2\", \"chr3\"),                ranges = IRanges(start = c(5000, 6000, 7000), width = 100),                strand = \"+\") ls <- linkSet(gr1, gr2, specificCol = \"symbol\") showLinkSet(ls) #> linkSet object with 3 interactions and 1 metadata column: #>            bait     seqnames_oe ranges_oe | anchor1.symbol #> [1]       BRCA1 ---        chr1 5000-5099 |          BRCA1 #> [2]        TP53 ---        chr2 6000-6099 |           TP53 #> [3] NONEXISTENT ---        chr3 7000-7099 |    NONEXISTENT"},{"path":"https://gilberthan1011.github.io/linkSet/reference/withTxDb-character-function-method.html","id":null,"dir":"Reference","previous_headings":"","what":"Execute Database Operation with Automatic Connection Management — withTxDb,character,function-method","title":"Execute Database Operation with Automatic Connection Management — withTxDb,character,function-method","text":"Execute Database Operation Automatic Connection Management","code":""},{"path":"https://gilberthan1011.github.io/linkSet/reference/withTxDb-character-function-method.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Execute Database Operation with Automatic Connection Management — withTxDb,character,function-method","text":"","code":"# S4 method for class 'character,function' withTxDb(x, expr, ...)"},{"path":"https://gilberthan1011.github.io/linkSet/reference/withTxDb-character-function-method.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Execute Database Operation with Automatic Connection Management — withTxDb,character,function-method","text":"x genome name object operate expr Expression evaluate database connection ... Additional arguments","code":""},{"path":"https://gilberthan1011.github.io/linkSet/reference/withTxDb-character-function-method.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Execute Database Operation with Automatic Connection Management — withTxDb,character,function-method","text":"Result database operation","code":""},{"path":"https://gilberthan1011.github.io/linkSet/reference/withTxDb-character-function-method.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Execute Database Operation with Automatic Connection Management — withTxDb,character,function-method","text":"","code":"result <- withTxDb(\"hg38\", function(src) {   genes <- Organism.dplyr::genes(src)   return(genes) }) #> Error in loadNamespace(txdb): there is no package called ‘TxDb.Hsapiens.UCSC.hg38.knownGene’ print(result) #> Error: object 'result' not found"}]
